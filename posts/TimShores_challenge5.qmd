---
title: "Challenge 5"
author: "Tim Shores"
description: "Introduction to Visualization"
date: "03/18/2022"
format:
  html:
    toc: true
    code-copy: true
    code-tools: true
categories:
  - challenge_5
  - railroads
  - cereal
  - air_bnb
  - pathogen_cost
  - australian_marriage
  - public_schools
  - usa_households
---

```{r}
#| label: setup
#| warning: false
#| message: false

my_packages <- c("tidyverse", "readxl", "knitr", "ggplot2") # create vector of packages
invisible(lapply(my_packages, require, character.only = TRUE)) # load multiple packages


knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Challenge Overview

Today's challenge is to:

1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)
2)  tidy data (as needed, including sanity checks)
3)  mutate variables as needed (including sanity checks)
4)  create at least two univariate visualizations
   - try to make them "publication" ready
   - Explain why you choose the specific graph type
5)  Create at least one bivariate visualization
   - try to make them "publication" ready
   - Explain why you choose the specific graph type

[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.

(be sure to only include the category tags for the data you use!)

## Read in data

...

```{r}
dfPubSchool <- read.csv(file = "../posts/_data/Public_School_Characteristics_2017-18.csv") # read in data
psrows <- prettyNum(nrow(dfPubSchool), big.mark = ",", scientific = FALSE)  # Apply comma-separated format
pscols <- prettyNum(ncol(dfPubSchool), big.mark = ",", scientific = FALSE)

numtoprint <- 12

```

### Briefly describe the data

The public school characteristics (2017-18) data set includes **`r psrows`** observations under **`r pscols`** variables. It shows ... . The data is likely the product of ....

Here are the first `r numtoprint` rows from the data.


```{r}
dfPubSchool[1:numtoprint,]

```

## Tidy Data (as needed)

Is your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.

```{r}
dfPubSchoolSub <- tibble(dfPubSchool) %>%
  subset(select = 
           c(NMCNTY, PK, KG, G01, G02, G03, G04, G05, G06, G07, G08, G09, G10, G11, G12, G13, TOTAL, FTE, SCHOOL_TYPE_TEXT, SY_STATUS_TEXT, SCHOOL_LEVEL)) %>%
  mutate(SCHOOL_TYPE_TEXT = factor(SCHOOL_TYPE_TEXT), 
         SY_STATUS_TEXT = factor(str_trim(SY_STATUS_TEXT)), # remove extra whitespace before converting to factor
         SCHOOL_LEVEL = factor(SCHOOL_LEVEL)) %>% 
  print(n = 12, width = Inf)

```

Are there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?

Document your work here.

```{r}

#define function to calculate mode
find_mode <- function(x) {
  u <- unique(x[!is.na(x)]) # unique list as an index, without NA
  tab <- tabulate(match(x[!is.na(x)], u))  # count how many times each index member occurs
  u[tab == max(tab)] #  the max occurrence is the mode
  mean(u) # return mean in case the data is multimodal
}

dfPubSchoolSub %>% 
  #group_by(NMCNTY) %>% 
  summarise(
    meanFTE = mean(FTE, na.rm = TRUE), 
    modeFTE = find_mode(FTE), 
    minFTE = fivenum(FTE, na.rm = TRUE)[1], 
    lowHingeFTE = fivenum(FTE, na.rm = TRUE)[2], 
    medianFTE = median(FTE, na.rm = TRUE), 
    upHingeFTE = fivenum(FTE, na.rm = TRUE)[4], 
    maxFTE = fivenum(FTE, na.rm = TRUE)[5], 
    count = n()
    ) 

dfPubSchoolSub %>% 
  subset(select = c(NMCNTY, FTE)) %>%
  group_by(NMCNTY) %>%
  #filter(FTE <= 1200) %>% 
  ggplot(aes(x = FTE)) +
  geom_boxplot(outlier.colour = "red",
         outlier.shape = 2,
         outlier.size = 3) +
  coord_flip()

dfPubSchoolSub %>% 
  subset(select = c(NMCNTY, FTE)) %>%
  group_by(NMCNTY) %>%
  filter(FTE <= 1200) %>% 
  ggplot(aes(x = FTE)) +
  geom_boxplot(outlier.colour = "red",
         outlier.shape = 2,
         outlier.size = 3) +
  coord_flip()

dfPubSchoolSub %>% 
  subset(select = c(NMCNTY, FTE)) %>%
  group_by(NMCNTY) %>%
  filter(FTE <= 200) %>% 
  ggplot(aes(x = FTE)) +
  geom_boxplot(outlier.colour = "red",
         outlier.shape = 2,
         outlier.size = 3) +
  coord_flip()

```

## Univariate Visualizations

```{r}

dfPubSchoolSub %>%
  subset(select = c(NMCNTY, FTE)) %>%
  group_by(NMCNTY) %>%
  arrange(desc(FTE)) %>%
  print(n = 20) %>%
  filter(FTE <= 200) %>%
  ggplot(aes(x = FTE)) + 
    geom_histogram(binwidth = 10)

dfPubSchoolSub %>%
  subset(select = c(NMCNTY, FTE)) %>%
  group_by(NMCNTY) %>%
  filter(FTE > 200, FTE <= 1200) %>%
  ggplot(aes(x = FTE)) + 
    geom_histogram(binwidth = 20)

```

## Bivariate Visualization(s)
Any additional comments?
