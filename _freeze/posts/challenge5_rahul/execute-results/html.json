{
  "hash": "8cd45cc75efab19e1cec295dba95e387",
  "result": {
    "markdown": "---\ntitle: \"Challenge 5\"\nauthor: \"Rahul Somu\"\ndescription: \"Introduction to Visualization\"\ndate: \"04/14/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_5\n  - air_bnb\n\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(dplyr)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least two univariate visualizations\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n5)  Create at least one bivariate visualization\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   cereal.csv ⭐\n-   Total_cost_for_top_15_pathogens_2018.xlsx ⭐\n-   Australian Marriage ⭐⭐ \n-   AB_NYC_2019.csv ⭐⭐⭐\n-   StateCounty2012.xls ⭐⭐⭐\n-   Public School Characteristics ⭐⭐⭐⭐ \n-   USA Households ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\nairbnb_data <- read.csv(\"/Users/rahulsomu/Documents/DACSS_601/601_repo/posts/_data/AB_NYC_2019.csv\")\nhead(airbnb_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    id                                             name host_id   host_name\n1 2539               Clean & quiet apt home by the park    2787        John\n2 2595                            Skylit Midtown Castle    2845    Jennifer\n3 3647              THE VILLAGE OF HARLEM....NEW YORK !    4632   Elisabeth\n4 3831                  Cozy Entire Floor of Brownstone    4869 LisaRoxanne\n5 5022 Entire Apt: Spacious Studio/Loft by central park    7192       Laura\n6 5099        Large Cozy 1 BR Apartment In Midtown East    7322       Chris\n  neighbourhood_group neighbourhood latitude longitude       room_type price\n1            Brooklyn    Kensington 40.64749 -73.97237    Private room   149\n2           Manhattan       Midtown 40.75362 -73.98377 Entire home/apt   225\n3           Manhattan        Harlem 40.80902 -73.94190    Private room   150\n4            Brooklyn  Clinton Hill 40.68514 -73.95976 Entire home/apt    89\n5           Manhattan   East Harlem 40.79851 -73.94399 Entire home/apt    80\n6           Manhattan   Murray Hill 40.74767 -73.97500 Entire home/apt   200\n  minimum_nights number_of_reviews last_review reviews_per_month\n1              1                 9  2018-10-19              0.21\n2              1                45  2019-05-21              0.38\n3              3                 0                            NA\n4              1               270  2019-07-05              4.64\n5             10                 9  2018-11-19              0.10\n6              3                74  2019-06-22              0.59\n  calculated_host_listings_count availability_365\n1                              6              365\n2                              2              355\n3                              1              365\n4                              1              194\n5                              1                0\n6                              1              129\n```\n:::\n:::\n\n\n### Briefly describe the data\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check for duplicates\nduplicated_rows <- airbnb_data[duplicated(airbnb_data),]\nif (nrow(duplicated_rows) > 0) {\n  airbnb_data <- unique(airbnb_data)\n  cat(paste(\"Removed\", nrow(duplicated_rows), \"duplicates\\n\"))\n}\n\n# Check for missing values\nmissing_values <- sum(is.na(airbnb_data))\nif (missing_values > 0) {\n  airbnb_data <- airbnb_data[complete.cases(airbnb_data),]\n  cat(paste(\"Removed\", missing_values, \"missing values\\n\"))\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRemoved 10052 missing values\n```\n:::\n:::\n\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nairbnb_data <- airbnb_data %>% \n  mutate(total_price = .$price * .$minimum_nights)\n\nairbnb_data <- airbnb_data %>%\n  mutate(review_season = case_when(\n    month(last_review) %in% 1:2 ~ \"winter\",\n    month(last_review) %in% 3:5 ~ \"spring\",\n    month(last_review) %in% 6:8 ~ \"summer\",\n    month(last_review) %in% 9:12 ~ \"fall\",\n    TRUE ~ \"unknown\"\n  ))\n\nairbnb_data$last_review <- as.Date(airbnb_data$last_review, format = \"%Y-%m-%d\")\n\nairbnb_data$new_variable <- ifelse(airbnb_data$availability_365 >= 180, \"Available More Than Half the Year\", \"Available Less Than Half the Year\")\n\nairbnb_data$new_variable <- airbnb_data$price / airbnb_data$minimum_nights\nsummary(airbnb_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       id               name              host_id           host_name        \n Min.   :    2539   Length:38843       Min.   :     2438   Length:38843      \n 1st Qu.: 8720027   Class :character   1st Qu.:  7033824   Class :character  \n Median :18871455   Mode  :character   Median : 28371926   Mode  :character  \n Mean   :18096462                      Mean   : 64239145                     \n 3rd Qu.:27554820                      3rd Qu.:101846466                     \n Max.   :36455809                      Max.   :273841667                     \n neighbourhood_group neighbourhood         latitude       longitude     \n Length:38843        Length:38843       Min.   :40.51   Min.   :-74.24  \n Class :character    Class :character   1st Qu.:40.69   1st Qu.:-73.98  \n Mode  :character    Mode  :character   Median :40.72   Median :-73.95  \n                                        Mean   :40.73   Mean   :-73.95  \n                                        3rd Qu.:40.76   3rd Qu.:-73.94  \n                                        Max.   :40.91   Max.   :-73.71  \n  room_type             price         minimum_nights     number_of_reviews\n Length:38843       Min.   :    0.0   Min.   :   1.000   Min.   :  1.0    \n Class :character   1st Qu.:   69.0   1st Qu.:   1.000   1st Qu.:  3.0    \n Mode  :character   Median :  101.0   Median :   2.000   Median :  9.0    \n                    Mean   :  142.3   Mean   :   5.868   Mean   : 29.3    \n                    3rd Qu.:  170.0   3rd Qu.:   4.000   3rd Qu.: 33.0    \n                    Max.   :10000.0   Max.   :1250.000   Max.   :629.0    \n  last_review         reviews_per_month calculated_host_listings_count\n Min.   :2011-03-28   Min.   : 0.010    Min.   :  1.000               \n 1st Qu.:2018-07-08   1st Qu.: 0.190    1st Qu.:  1.000               \n Median :2019-05-19   Median : 0.720    Median :  1.000               \n Mean   :2018-10-04   Mean   : 1.373    Mean   :  5.165               \n 3rd Qu.:2019-06-23   3rd Qu.: 2.020    3rd Qu.:  2.000               \n Max.   :2019-07-08   Max.   :58.500    Max.   :327.000               \n availability_365  total_price        review_season       new_variable    \n Min.   :  0.0    Min.   :      0.0   Length:38843       Min.   :   0.00  \n 1st Qu.:  0.0    1st Qu.:    130.0   Class :character   1st Qu.:  22.50  \n Median : 55.0    Median :    288.0   Mode  :character   Median :  45.00  \n Mean   :114.9    Mean   :    922.5                      Mean   :  65.81  \n 3rd Qu.:229.0    3rd Qu.:    600.0                      3rd Qu.:  80.00  \n Max.   :365.0    Max.   :1000000.0                      Max.   :8000.00  \n```\n:::\n:::\n\n\n## Univariate Visualizations\nBar Chart of Room Types: A bar chart is suitable for visualizing the distribution of a categorical variable, such as room type. The bar chart allows us to see the frequency of each category and compare them easily. we can see from the chart that the majority of listings are for entire apartments/homes, followed by private rooms and shared rooms.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create histogram of price distribution\n#ggplot(airbnb_data, aes(x = price)) + \n#  geom_histogram(bins = 50, fill = \"#69b3a2\", color = \"#e9ecef\") +\n#  labs(x = \"Price ($)\", y = \"Count\") +\n#  ggtitle(\"Distribution of Airbnb Prices in NYC\") +\n#  theme(plot.title = element_text(hjust = 0.5))\n\n# Create bar chart of room types\nggplot(airbnb_data, aes(x = room_type)) +\n  geom_bar(fill = \"#69b3a2\", color = \"#e9ecef\") +\n  labs(x = \"Room Type\", y = \"Count\") +\n  ggtitle(\"Number of Airbnb Listings by Room Type in NYC\") +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](challenge5_rahul_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data = airbnb_data, aes(x = neighbourhood_group, fill = neighbourhood_group)) +\n  geom_bar() +\n  labs(title = \"Number of Airbnb Listings by Neighborhood in NYC\",\n       x = \"Neighborhood\",\n       y = \"Count\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](challenge5_rahul_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n\n```{.r .cell-code}\nairbnb_data_subset <- airbnb_data %>% \n  select(price, number_of_reviews)\n\nggplot(airbnb_data_subset, aes(x = number_of_reviews, y = price)) + \n  geom_point(alpha = 0.5, color = \"#2E86C1\") +\n  labs(x = \"Number of Reviews\", y = \"Price\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](challenge5_rahul_files/figure-html/unnamed-chunk-5-3.png){width=672}\n:::\n:::\n\n## Bivariate Visualization(s)\nThe scatter plot has been used for this bivariate visualization to show the relationship between two continuous variables, number of reviews and price. The alpha transparency is set to 0.5 to prevent overplotting, with labels as \"Number of Reviews\" and \"Price ($)\". A legend is added to indicate the room type for each color.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = airbnb_data, aes(x = number_of_reviews, y = price, color = room_type)) +\n  geom_point(alpha = 0.5) +\n  labs(x = \"Number of Reviews\", y = \"Price ($)\", color = \"Room Type\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](challenge5_rahul_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::",
    "supporting": [
      "challenge5_rahul_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}