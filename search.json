[
  {
    "objectID": "posts/JustineShakespeare_Challenge1.html",
    "href": "posts/JustineShakespeare_Challenge1.html",
    "title": "Challenge 1 - Railroad Employment",
    "section": "",
    "text": "Code\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)"
  },
  {
    "objectID": "posts/JustineShakespeare_Challenge1.html#reading-in-the-data",
    "href": "posts/JustineShakespeare_Challenge1.html#reading-in-the-data",
    "title": "Challenge 1 - Railroad Employment",
    "section": "Reading in the Data",
    "text": "Reading in the Data\nFirst we’ll load the tidyverse and readxl packages and use the read_excel() function to read in the dataset. When I first loaded this dataset I noted that the data started on the third row, so I’ll specify that R should skip the first two lines when I import the data.\n\n\nCode\nlibrary(tidyverse)\nlibrary(readxl)\n\nRailroadEmployment <- read_excel(\"_data/StateCounty2012.xls\", skip=2)"
  },
  {
    "objectID": "posts/JustineShakespeare_Challenge1.html#data-description",
    "href": "posts/JustineShakespeare_Challenge1.html#data-description",
    "title": "Challenge 1 - Railroad Employment",
    "section": "Data Description",
    "text": "Data Description\nThis dataset contains information about the number of railroad employees by county and state in 2012. In these data, rows are individual counties and columns are the state, country, and number of employees. It is not clear from the dataset itself where this data is from/who published it."
  },
  {
    "objectID": "posts/JustineShakespeare_Challenge1.html#data-cleaning",
    "href": "posts/JustineShakespeare_Challenge1.html#data-cleaning",
    "title": "Challenge 1 - Railroad Employment",
    "section": "Data Cleaning",
    "text": "Data Cleaning\nBefore summarizing the data, we’ll tidy it up a bit. Using the head() function we can see that the dataset includes 5 columns, but data is stored in only three.\n\n\nCode\nhead(RailroadEmployment)\n\n\n# A tibble: 6 × 5\n  STATE     ...2  COUNTY               ...4  TOTAL\n  <chr>     <lgl> <chr>                <lgl> <dbl>\n1 AE        NA    APO                  NA        2\n2 AE Total1 NA    <NA>                 NA        2\n3 AK        NA    ANCHORAGE            NA        7\n4 AK        NA    FAIRBANKS NORTH STAR NA        2\n5 AK        NA    JUNEAU               NA        3\n6 AK        NA    MATANUSKA-SUSITNA    NA        2\n\n\nWe can use the select() function to isolate only the columns with data and assign these to a new dataframe in R. We’ll use head() to check our work.\n\n\nCode\nRailroadEmployment <- select(RailroadEmployment, STATE, COUNTY, TOTAL)\n\nhead(RailroadEmployment)\n\n\n# A tibble: 6 × 3\n  STATE     COUNTY               TOTAL\n  <chr>     <chr>                <dbl>\n1 AE        APO                      2\n2 AE Total1 <NA>                     2\n3 AK        ANCHORAGE                7\n4 AK        FAIRBANKS NORTH STAR     2\n5 AK        JUNEAU                   3\n6 AK        MATANUSKA-SUSITNA        2\n\n\nUsing the n_distinct() function we can see that there are 111 distinct values in the STATE column. Since we know there are 50 states in the US, this indicates there are some additional values that we may not have expected or want to keep for analysis.\n\n\nCode\nRailroadEmployment %>%\n  select(STATE)%>%\n  n_distinct(.)\n\n\n[1] 111\n\n\nWe can use piping and the functions group_by(), summarize(), and print() to inspect the values of the STATE column more closely to get an idea of what is stored here.\n\n\nCode\nRailroadEmployment %>% \n  group_by(STATE) %>% \n  summarize(mean(TOTAL)) %>% \n  print(n=111)\n\n\n# A tibble: 111 × 2\n    STATE                                               `mean(TOTAL)`\n    <chr>                                                       <dbl>\n  1 1  Military designation.                                    NA   \n  2 AE                                                           2   \n  3 AE Total1                                                    2   \n  4 AK                                                          17.2 \n  5 AK Total                                                   103   \n  6 AL                                                          63.5 \n  7 AL Total                                                  4257   \n  8 AP                                                           1   \n  9 AP Total1                                                    1   \n 10 AR                                                          53.8 \n 11 AR Total                                                  3871   \n 12 AZ                                                         210.  \n 13 AZ Total                                                  3153   \n 14 CA                                                         239.  \n 15 CA Total                                                 13137   \n 16 CANADA                                                     662   \n 17 CO                                                          64.0 \n 18 CO Total                                                  3650   \n 19 CT                                                         324   \n 20 CT Total                                                  2592   \n 21 DC                                                         279   \n 22 DC Total                                                   279   \n 23 DE                                                         498.  \n 24 DE Total                                                  1495   \n 25 FL                                                         111.  \n 26 FL Total                                                  7419   \n 27 GA                                                          56.6 \n 28 GA Total                                                  8605   \n 29 Grand Total                                             255432   \n 30 HI                                                           1.33\n 31 HI Total                                                     4   \n 32 IA                                                          40.6 \n 33 IA Total                                                  4019   \n 34 ID                                                          43.4 \n 35 ID Total                                                  1563   \n 36 IL                                                         186.  \n 37 IL Total                                                 19131   \n 38 IN                                                          92.8 \n 39 IN Total                                                  8537   \n 40 KS                                                          64.1 \n 41 KS Total                                                  6092   \n 42 KY                                                          40.4 \n 43 KY Total                                                  4811   \n 44 LA                                                          62.1 \n 45 LA Total                                                  3915   \n 46 MA                                                         282.  \n 47 MA Total                                                  3379   \n 48 MD                                                         196.  \n 49 MD Total                                                  4709   \n 50 ME                                                          40.9 \n 51 ME Total                                                   654   \n 52 MI                                                          50.4 \n 53 MI Total                                                  3932   \n 54 MN                                                          63.6 \n 55 MN Total                                                  5467   \n 56 MO                                                          73.2 \n 57 MO Total                                                  8419   \n 58 MS                                                          27.1 \n 59 MS Total                                                  2111   \n 60 MT                                                          62.8 \n 61 MT Total                                                  3327   \n 62 NC                                                          33.4 \n 63 NC Total                                                  3143   \n 64 ND                                                          45.0 \n 65 ND Total                                                  2204   \n 66 NE                                                         148.  \n 67 NE Total                                                 13176   \n 68 NH                                                          39.3 \n 69 NH Total                                                   393   \n 70 NJ                                                         397.  \n 71 NJ Total                                                  8329   \n 72 NM                                                          67.5 \n 73 NM Total                                                  1958   \n 74 NOTE:  Excludes 2,896 employees without an address.         NA   \n 75 NV                                                          62.2 \n 76 NV Total                                                   746   \n 77 NY                                                         280.  \n 78 NY Total                                                 17050   \n 79 OH                                                         103.  \n 80 OH Total                                                  9056   \n 81 OK                                                          31.8 \n 82 OK Total                                                  2318   \n 83 OR                                                          70.4 \n 84 OR Total                                                  2322   \n 85 PA                                                         196.  \n 86 PA Total                                                 12769   \n 87 RI                                                          97.4 \n 88 RI Total                                                   487   \n 89 SC                                                          49.9 \n 90 SC Total                                                  2296   \n 91 SD                                                          18.2 \n 92 SD Total                                                   949   \n 93 TN                                                          54.4 \n 94 TN Total                                                  4952   \n 95 TX                                                          89.8 \n 96 TX Total                                                 19839   \n 97 UT                                                          76.7 \n 98 UT Total                                                  1917   \n 99 VA                                                          82.1 \n100 VA Total                                                  7551   \n101 VT                                                          18.5 \n102 VT Total                                                   259   \n103 WA                                                         134.  \n104 WA Total                                                  5222   \n105 WI                                                          54.7 \n106 WI Total                                                  3773   \n107 WV                                                          60.6 \n108 WV Total                                                  3213   \n109 WY                                                         131.  \n110 WY Total                                                  2876   \n111 <NA>                                                        NA   \n\n\nThere are a few issues we see here: It looks as if there are Total rows in this dataset - that is, there are rows that add up the total for each state. We don’t need those in our data, since we can use R functions to total employees by state. It also looks as if CANADA is listed as a state. Assuming we are only interested in the US, let’s remove that as well.\nWe can use the filter() and grepl() function to remove both the total rows and Canada from this dataset.\n\n\nCode\nRailroadEmployment <- RailroadEmployment %>% \n  filter(!grepl(\"Total\", STATE))\n\nRailroadEmployment <- RailroadEmployment %>% \n  filter(!grepl(\"CANADA\", STATE))\n\n\nFinally, we noticed we had some NAs in both the STATE and the TOTAL columns. We can use the na.omit() function to remove these from the dataset.\n\n\nCode\nRailroadEmployment <- print(na.omit(RailroadEmployment))\n\n\n# A tibble: 2,930 × 3\n   STATE COUNTY               TOTAL\n   <chr> <chr>                <dbl>\n 1 AE    APO                      2\n 2 AK    ANCHORAGE                7\n 3 AK    FAIRBANKS NORTH STAR     2\n 4 AK    JUNEAU                   3\n 5 AK    MATANUSKA-SUSITNA        2\n 6 AK    SITKA                    1\n 7 AK    SKAGWAY MUNICIPALITY    88\n 8 AL    AUTAUGA                102\n 9 AL    BALDWIN                143\n10 AL    BARBOUR                  1\n# … with 2,920 more rows\n\n\nLet’s run the same code chunk from earlier to check that our edits have been made and the data is clean.\n\n\nCode\nRailroadEmployment %>% \n  group_by(STATE) %>% \n  summarize(mean(TOTAL)) %>% \n  print(n=111)\n\n\n# A tibble: 53 × 2\n   STATE `mean(TOTAL)`\n   <chr>         <dbl>\n 1 AE             2   \n 2 AK            17.2 \n 3 AL            63.5 \n 4 AP             1   \n 5 AR            53.8 \n 6 AZ           210.  \n 7 CA           239.  \n 8 CO            64.0 \n 9 CT           324   \n10 DC           279   \n11 DE           498.  \n12 FL           111.  \n13 GA            56.6 \n14 HI             1.33\n15 IA            40.6 \n16 ID            43.4 \n17 IL           186.  \n18 IN            92.8 \n19 KS            64.1 \n20 KY            40.4 \n21 LA            62.1 \n22 MA           282.  \n23 MD           196.  \n24 ME            40.9 \n25 MI            50.4 \n26 MN            63.6 \n27 MO            73.2 \n28 MS            27.1 \n29 MT            62.8 \n30 NC            33.4 \n31 ND            45.0 \n32 NE           148.  \n33 NH            39.3 \n34 NJ           397.  \n35 NM            67.5 \n36 NV            62.2 \n37 NY           280.  \n38 OH           103.  \n39 OK            31.8 \n40 OR            70.4 \n41 PA           196.  \n42 RI            97.4 \n43 SC            49.9 \n44 SD            18.2 \n45 TN            54.4 \n46 TX            89.8 \n47 UT            76.7 \n48 VA            82.1 \n49 VT            18.5 \n50 WA           134.  \n51 WI            54.7 \n52 WV            60.6 \n53 WY           131.  \n\n\nThis is more like it! Now we have only 53 distinct values listed in the STATE columns: the 50 states, Washington DC (listed as DC), and two overseas military designations (listed as AE and AP)\nLet’s move on to summarizing the data."
  },
  {
    "objectID": "posts/JustineShakespeare_Challenge1.html#data-summary",
    "href": "posts/JustineShakespeare_Challenge1.html#data-summary",
    "title": "Challenge 1 - Railroad Employment",
    "section": "Data Summary",
    "text": "Data Summary\nUsing the dim() function we can see below that the dataframe has 2,930 rows/observations and 3 columns/variables.\n\n\nCode\ndim(RailroadEmployment)\n\n\n[1] 2930    3\n\n\nWe can use the head() function to see more information about this dataset, including the column names, and the type of data stored in each column. The first two columns, STATE and COUNTY, are character variables, while the last column, TOTAL, is a double variable, which means it contains numeric data.\n\n\nCode\nhead(RailroadEmployment)\n\n\n# A tibble: 6 × 3\n  STATE COUNTY               TOTAL\n  <chr> <chr>                <dbl>\n1 AE    APO                      2\n2 AK    ANCHORAGE                7\n3 AK    FAIRBANKS NORTH STAR     2\n4 AK    JUNEAU                   3\n5 AK    MATANUSKA-SUSITNA        2\n6 AK    SITKA                    1\n\n\nUsing the summary() function we can see that the minimum number of employees in county is 1, the maximum is 8207, the median is 21 employees, and the mean is a little over 87 employees.\n\n\nCode\nsummary(RailroadEmployment)\n\n\n    STATE              COUNTY              TOTAL        \n Length:2930        Length:2930        Min.   :   1.00  \n Class :character   Class :character   1st Qu.:   7.00  \n Mode  :character   Mode  :character   Median :  21.00  \n                                       Mean   :  87.18  \n                                       3rd Qu.:  65.00  \n                                       Max.   :8207.00  \n\n\nLet’s take a closer look at this dataset to get a sense of which county and which state each have the most railraod employees. We can use piping and the arrange() function in R to see which counties have the most railroad employees:\n\n\nCode\nRailroadEmployment %>% \n  arrange(desc(TOTAL))\n\n\n# A tibble: 2,930 × 3\n   STATE COUNTY           TOTAL\n   <chr> <chr>            <dbl>\n 1 IL    COOK              8207\n 2 TX    TARRANT           4235\n 3 NE    DOUGLAS           3797\n 4 NY    SUFFOLK           3685\n 5 VA    INDEPENDENT CITY  3249\n 6 FL    DUVAL             3073\n 7 CA    SAN BERNARDINO    2888\n 8 CA    LOS ANGELES       2545\n 9 TX    HARRIS            2535\n10 NE    LINCOLN           2289\n# … with 2,920 more rows\n\n\nThis shows that Cook County in Illinois has the most railroad employees. Given that the major city, Chicago is located in Cook County, this is not surprising. It is interesting that Cook county has almost twice as many railroad employees as the next county on the list, Tarrant county in Texas.\nThis data can also shed light on which states have the most railroad employees. We can use piping and the group_by(), summarize(), sum() and arrange() functions to show the states with the most railroad employees:\n\n\nCode\nemployees_by_state <- RailroadEmployment %>% \n  group_by(STATE) %>% \n  summarize(total_state_employees=sum(TOTAL))\n\nemployees_by_state %>% \n  arrange(desc(total_state_employees))\n\n\n# A tibble: 53 × 2\n   STATE total_state_employees\n   <chr>                 <dbl>\n 1 TX                    19839\n 2 IL                    19131\n 3 NY                    17050\n 4 NE                    13176\n 5 CA                    13137\n 6 PA                    12769\n 7 OH                     9056\n 8 GA                     8605\n 9 IN                     8537\n10 MO                     8419\n# … with 43 more rows\n\n\nThis shows that Texas is the state with the most railroad employees."
  },
  {
    "objectID": "posts/PranavKomaravolu_Challenge1.html",
    "href": "posts/PranavKomaravolu_Challenge1.html",
    "title": "Default of credit card clients dataset - UCI Machine Learning Repository",
    "section": "",
    "text": "library(tidyverse)\nlibrary(readr)\n\nknitr::opts_chunk$set(echo = TRUE)"
  },
  {
    "objectID": "posts/PranavKomaravolu_Challenge1.html#sources",
    "href": "posts/PranavKomaravolu_Challenge1.html#sources",
    "title": "Default of credit card clients dataset - UCI Machine Learning Repository",
    "section": "Sources",
    "text": "Sources\nThe dataset was obtained from the University of California Irvine (UCI) Machine Learning Repository. With the dataset labeled “Default of credit card clients dataset”. The dataset can be accessed here."
  },
  {
    "objectID": "posts/PranavKomaravolu_Challenge1.html#reading-the-dataset",
    "href": "posts/PranavKomaravolu_Challenge1.html#reading-the-dataset",
    "title": "Default of credit card clients dataset - UCI Machine Learning Repository",
    "section": "Reading the dataset",
    "text": "Reading the dataset\nTo code to read the dataset is as follows:\n\ndata <- read_csv('_data/UCI_Credit_Card.csv')\n\nRows: 30000 Columns: 25\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (25): ID, LIMIT_BAL, SEX, EDUCATION, MARRIAGE, AGE, PAY_0, PAY_2, PAY_3,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nhead(data)\n\n# A tibble: 6 × 25\n     ID LIMIT_…¹   SEX EDUCA…² MARRI…³   AGE PAY_0 PAY_2 PAY_3 PAY_4 PAY_5 PAY_6\n  <dbl>    <dbl> <dbl>   <dbl>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n1     1    20000     2       2       1    24     2     2    -1    -1    -2    -2\n2     2   120000     2       2       2    26    -1     2     0     0     0     2\n3     3    90000     2       2       2    34     0     0     0     0     0     0\n4     4    50000     2       2       1    37     0     0     0     0     0     0\n5     5    50000     1       2       1    57    -1     0    -1     0     0     0\n6     6    50000     1       1       2    37     0     0     0     0     0     0\n# … with 13 more variables: BILL_AMT1 <dbl>, BILL_AMT2 <dbl>, BILL_AMT3 <dbl>,\n#   BILL_AMT4 <dbl>, BILL_AMT5 <dbl>, BILL_AMT6 <dbl>, PAY_AMT1 <dbl>,\n#   PAY_AMT2 <dbl>, PAY_AMT3 <dbl>, PAY_AMT4 <dbl>, PAY_AMT5 <dbl>,\n#   PAY_AMT6 <dbl>, default.payment.next.month <dbl>, and abbreviated variable\n#   names ¹​LIMIT_BAL, ²​EDUCATION, ³​MARRIAGE\n\n\nThe head of the table is shown above.\nThe dataset with skipped header is as follows:\n\ndata2 <- read_csv('_data/UCI_Credit_Card.csv', skip=1) # the header is skipped\n\nNew names:\nRows: 29999 Columns: 25\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" dbl\n(25): 1...1, 20000, 2...3, 2...4, 1...5, 24, 2...7, 2...8, -1...9, -1......\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `1` -> `1...1`\n• `2` -> `2...3`\n• `2` -> `2...4`\n• `1` -> `1...5`\n• `2` -> `2...7`\n• `2` -> `2...8`\n• `-1` -> `-1...9`\n• `-1` -> `-1...10`\n• `-2` -> `-2...11`\n• `-2` -> `-2...12`\n• `689` -> `689...15`\n• `0` -> `0...16`\n• `0` -> `0...17`\n• `0` -> `0...18`\n• `0` -> `0...19`\n• `689` -> `689...20`\n• `0` -> `0...21`\n• `0` -> `0...22`\n• `0` -> `0...23`\n• `0` -> `0...24`\n• `1` -> `1...25`\n\nhead(data2)\n\n# A tibble: 6 × 25\n  `1...1` `20000` `2...3` `2...4` `1...5`  `24` `2...7` `2...8` `-1...9` -1...…¹\n    <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <dbl>   <dbl>   <dbl>    <dbl>   <dbl>\n1       2  120000       2       2       2    26      -1       2        0       0\n2       3   90000       2       2       2    34       0       0        0       0\n3       4   50000       2       2       1    37       0       0        0       0\n4       5   50000       1       2       1    57      -1       0       -1       0\n5       6   50000       1       1       2    37       0       0        0       0\n6       7  500000       1       1       2    29       0       0        0       0\n# … with 15 more variables: `-2...11` <dbl>, `-2...12` <dbl>, `3913` <dbl>,\n#   `3102` <dbl>, `689...15` <dbl>, `0...16` <dbl>, `0...17` <dbl>,\n#   `0...18` <dbl>, `0...19` <dbl>, `689...20` <dbl>, `0...21` <dbl>,\n#   `0...22` <dbl>, `0...23` <dbl>, `0...24` <dbl>, `1...25` <dbl>, and\n#   abbreviated variable name ¹​`-1...10`"
  },
  {
    "objectID": "posts/PranavKomaravolu_Challenge1.html#dataset-description",
    "href": "posts/PranavKomaravolu_Challenge1.html#dataset-description",
    "title": "Default of credit card clients dataset - UCI Machine Learning Repository",
    "section": "Dataset Description",
    "text": "Dataset Description\nThe number of rows in the dataset can be obtained as follows:\n\nnrow(data)\n\n[1] 30000\n\n\nThe number of fields or columns can be obtained as follows:\n\nncol(data)\n\n[1] 25\n\n\nThe different columns are as follows:\n\nnames(data)\n\n [1] \"ID\"                         \"LIMIT_BAL\"                 \n [3] \"SEX\"                        \"EDUCATION\"                 \n [5] \"MARRIAGE\"                   \"AGE\"                       \n [7] \"PAY_0\"                      \"PAY_2\"                     \n [9] \"PAY_3\"                      \"PAY_4\"                     \n[11] \"PAY_5\"                      \"PAY_6\"                     \n[13] \"BILL_AMT1\"                  \"BILL_AMT2\"                 \n[15] \"BILL_AMT3\"                  \"BILL_AMT4\"                 \n[17] \"BILL_AMT5\"                  \"BILL_AMT6\"                 \n[19] \"PAY_AMT1\"                   \"PAY_AMT2\"                  \n[21] \"PAY_AMT3\"                   \"PAY_AMT4\"                  \n[23] \"PAY_AMT5\"                   \"PAY_AMT6\"                  \n[25] \"default.payment.next.month\"\n\n\nThe data types of different columns are as follows:\n\nas.data.frame(sapply(data, class))\n\n                           sapply(data, class)\nID                                     numeric\nLIMIT_BAL                              numeric\nSEX                                    numeric\nEDUCATION                              numeric\nMARRIAGE                               numeric\nAGE                                    numeric\nPAY_0                                  numeric\nPAY_2                                  numeric\nPAY_3                                  numeric\nPAY_4                                  numeric\nPAY_5                                  numeric\nPAY_6                                  numeric\nBILL_AMT1                              numeric\nBILL_AMT2                              numeric\nBILL_AMT3                              numeric\nBILL_AMT4                              numeric\nBILL_AMT5                              numeric\nBILL_AMT6                              numeric\nPAY_AMT1                               numeric\nPAY_AMT2                               numeric\nPAY_AMT3                               numeric\nPAY_AMT4                               numeric\nPAY_AMT5                               numeric\nPAY_AMT6                               numeric\ndefault.payment.next.month             numeric\n\n\nSince there are some categorical attributes we can obtain the number of unique elements in each column as follows:\n\ngetUniqueValues <- function(column_label) {\n  data %>% select(all_of(column_label)) %>% n_distinct(.)\n}\nfor (i in names(data)) {\n  print(i)\n  print(getUniqueValues(i))\n}\n\n[1] \"ID\"\n[1] 30000\n[1] \"LIMIT_BAL\"\n[1] 81\n[1] \"SEX\"\n[1] 2\n[1] \"EDUCATION\"\n[1] 7\n[1] \"MARRIAGE\"\n[1] 4\n[1] \"AGE\"\n[1] 56\n[1] \"PAY_0\"\n[1] 11\n[1] \"PAY_2\"\n[1] 11\n[1] \"PAY_3\"\n[1] 11\n[1] \"PAY_4\"\n[1] 11\n[1] \"PAY_5\"\n[1] 10\n[1] \"PAY_6\"\n[1] 10\n[1] \"BILL_AMT1\"\n[1] 22723\n[1] \"BILL_AMT2\"\n[1] 22346\n[1] \"BILL_AMT3\"\n[1] 22026\n[1] \"BILL_AMT4\"\n[1] 21548\n[1] \"BILL_AMT5\"\n[1] 21010\n[1] \"BILL_AMT6\"\n[1] 20604\n[1] \"PAY_AMT1\"\n[1] 7943\n[1] \"PAY_AMT2\"\n[1] 7899\n[1] \"PAY_AMT3\"\n[1] 7518\n[1] \"PAY_AMT4\"\n[1] 6937\n[1] \"PAY_AMT5\"\n[1] 6897\n[1] \"PAY_AMT6\"\n[1] 6939\n[1] \"default.payment.next.month\"\n[1] 2\n\n\nThe dataset comprises of 25 different columns, 30000 rows. Each of these columns depict a particular attribute of the data here a person and the column “default.payment.next.month” depicts whether the person defaulted the credit payment or not. All the attributes are preprocessed so that ML algorithms can efficiently train on the data as we can observe that even some of the categorical values are converted to integer type. From the above cell we can observe some attributes such as “SEX”, “EDUCATION”, “MARRIAGE” and the “default.payment.next.month” have very less number of unique values suggesting that these attributes are categorical."
  },
  {
    "objectID": "posts/PranavKomaravolu_Challenge1.html#dataset-summary",
    "href": "posts/PranavKomaravolu_Challenge1.html#dataset-summary",
    "title": "Default of credit card clients dataset - UCI Machine Learning Repository",
    "section": "Dataset summary",
    "text": "Dataset summary\nTo summarize the dataset we can use the following code:\n\nsummary(data)\n\n       ID          LIMIT_BAL            SEX          EDUCATION    \n Min.   :    1   Min.   :  10000   Min.   :1.000   Min.   :0.000  \n 1st Qu.: 7501   1st Qu.:  50000   1st Qu.:1.000   1st Qu.:1.000  \n Median :15000   Median : 140000   Median :2.000   Median :2.000  \n Mean   :15000   Mean   : 167484   Mean   :1.604   Mean   :1.853  \n 3rd Qu.:22500   3rd Qu.: 240000   3rd Qu.:2.000   3rd Qu.:2.000  \n Max.   :30000   Max.   :1000000   Max.   :2.000   Max.   :6.000  \n    MARRIAGE          AGE            PAY_0             PAY_2        \n Min.   :0.000   Min.   :21.00   Min.   :-2.0000   Min.   :-2.0000  \n 1st Qu.:1.000   1st Qu.:28.00   1st Qu.:-1.0000   1st Qu.:-1.0000  \n Median :2.000   Median :34.00   Median : 0.0000   Median : 0.0000  \n Mean   :1.552   Mean   :35.49   Mean   :-0.0167   Mean   :-0.1338  \n 3rd Qu.:2.000   3rd Qu.:41.00   3rd Qu.: 0.0000   3rd Qu.: 0.0000  \n Max.   :3.000   Max.   :79.00   Max.   : 8.0000   Max.   : 8.0000  \n     PAY_3             PAY_4             PAY_5             PAY_6        \n Min.   :-2.0000   Min.   :-2.0000   Min.   :-2.0000   Min.   :-2.0000  \n 1st Qu.:-1.0000   1st Qu.:-1.0000   1st Qu.:-1.0000   1st Qu.:-1.0000  \n Median : 0.0000   Median : 0.0000   Median : 0.0000   Median : 0.0000  \n Mean   :-0.1662   Mean   :-0.2207   Mean   :-0.2662   Mean   :-0.2911  \n 3rd Qu.: 0.0000   3rd Qu.: 0.0000   3rd Qu.: 0.0000   3rd Qu.: 0.0000  \n Max.   : 8.0000   Max.   : 8.0000   Max.   : 8.0000   Max.   : 8.0000  \n   BILL_AMT1         BILL_AMT2        BILL_AMT3         BILL_AMT4      \n Min.   :-165580   Min.   :-69777   Min.   :-157264   Min.   :-170000  \n 1st Qu.:   3559   1st Qu.:  2985   1st Qu.:   2666   1st Qu.:   2327  \n Median :  22382   Median : 21200   Median :  20088   Median :  19052  \n Mean   :  51223   Mean   : 49179   Mean   :  47013   Mean   :  43263  \n 3rd Qu.:  67091   3rd Qu.: 64006   3rd Qu.:  60165   3rd Qu.:  54506  \n Max.   : 964511   Max.   :983931   Max.   :1664089   Max.   : 891586  \n   BILL_AMT5        BILL_AMT6          PAY_AMT1         PAY_AMT2      \n Min.   :-81334   Min.   :-339603   Min.   :     0   Min.   :      0  \n 1st Qu.:  1763   1st Qu.:   1256   1st Qu.:  1000   1st Qu.:    833  \n Median : 18104   Median :  17071   Median :  2100   Median :   2009  \n Mean   : 40311   Mean   :  38872   Mean   :  5664   Mean   :   5921  \n 3rd Qu.: 50190   3rd Qu.:  49198   3rd Qu.:  5006   3rd Qu.:   5000  \n Max.   :927171   Max.   : 961664   Max.   :873552   Max.   :1684259  \n    PAY_AMT3         PAY_AMT4         PAY_AMT5           PAY_AMT6       \n Min.   :     0   Min.   :     0   Min.   :     0.0   Min.   :     0.0  \n 1st Qu.:   390   1st Qu.:   296   1st Qu.:   252.5   1st Qu.:   117.8  \n Median :  1800   Median :  1500   Median :  1500.0   Median :  1500.0  \n Mean   :  5226   Mean   :  4826   Mean   :  4799.4   Mean   :  5215.5  \n 3rd Qu.:  4505   3rd Qu.:  4013   3rd Qu.:  4031.5   3rd Qu.:  4000.0  \n Max.   :896040   Max.   :621000   Max.   :426529.0   Max.   :528666.0  \n default.payment.next.month\n Min.   :0.0000            \n 1st Qu.:0.0000            \n Median :0.0000            \n Mean   :0.2212            \n 3rd Qu.:0.0000            \n Max.   :1.0000"
  },
  {
    "objectID": "posts/KekaiLiu_challenge1.html",
    "href": "posts/KekaiLiu_challenge1.html",
    "title": "Challenge 1 Reading Birds",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)"
  },
  {
    "objectID": "posts/KekaiLiu_challenge1.html#challenge-overview",
    "href": "posts/KekaiLiu_challenge1.html#challenge-overview",
    "title": "Challenge 1 Reading Birds",
    "section": "Challenge Overview",
    "text": "Challenge Overview\nToday’s challenge is to\n\nread in a dataset, and\ndescribe the dataset using both words and any supporting information (e.g., tables, etc)"
  },
  {
    "objectID": "posts/KekaiLiu_challenge1.html#read-in-the-data",
    "href": "posts/KekaiLiu_challenge1.html#read-in-the-data",
    "title": "Challenge 1 Reading Birds",
    "section": "Read in the Data",
    "text": "Read in the Data\nRead in one (or more) of the following data sets, using the correct R package and command.\n\nrailroad_2012_clean_county.csv ⭐\nbirds.csv ⭐⭐\nFAOstat*.csv ⭐⭐\nwild_bird_data.xlsx ⭐⭐⭐\nStateCounty2012.xls ⭐⭐⭐⭐\n\nFind the _data folder, located inside the posts folder. Then you can read in the data, using either one of the readr standard tidy read commands, or a specialized package such as readxl.\nThe birds.csv file is read in using read_csv().\n\n\nCode\nbirds <- read_csv(\"_data/birds.csv\") #read in the data and assign it to birds\n\n\nAdd any comments or documentation as needed. More challenging data sets may require additional code chunks and documentation."
  },
  {
    "objectID": "posts/KekaiLiu_challenge1.html#describe-the-data",
    "href": "posts/KekaiLiu_challenge1.html#describe-the-data",
    "title": "Challenge 1 Reading Birds",
    "section": "Describe the data",
    "text": "Describe the data\nUsing a combination of words and results of R commands, can you provide a high level description of the data? Describe as efficiently as possible where/how the data was (likely) gathered, indicate the cases and variables (both the interpretation and any details you deem useful to the reader to fully understand your chosen data).\nThis dataset has 30,977 rows and 14 columns. The 30,977 rows represent 30,977 observations or cases, and the 14 columns represent 14 variables: Domain Code, Domain, Area Code, Area, Element Code, Element, Item Code, Item, Year Code, Year, Unit, Value, Flag, and Flag Description.\n\n\nCode\nstr(birds) #produce a summary of the contents (dimensions, variables, variable types) of the data\n\n\nspc_tbl_ [30,977 × 14] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Domain Code     : chr [1:30977] \"QA\" \"QA\" \"QA\" \"QA\" ...\n $ Domain          : chr [1:30977] \"Live Animals\" \"Live Animals\" \"Live Animals\" \"Live Animals\" ...\n $ Area Code       : num [1:30977] 2 2 2 2 2 2 2 2 2 2 ...\n $ Area            : chr [1:30977] \"Afghanistan\" \"Afghanistan\" \"Afghanistan\" \"Afghanistan\" ...\n $ Element Code    : num [1:30977] 5112 5112 5112 5112 5112 ...\n $ Element         : chr [1:30977] \"Stocks\" \"Stocks\" \"Stocks\" \"Stocks\" ...\n $ Item Code       : num [1:30977] 1057 1057 1057 1057 1057 ...\n $ Item            : chr [1:30977] \"Chickens\" \"Chickens\" \"Chickens\" \"Chickens\" ...\n $ Year Code       : num [1:30977] 1961 1962 1963 1964 1965 ...\n $ Year            : num [1:30977] 1961 1962 1963 1964 1965 ...\n $ Unit            : chr [1:30977] \"1000 Head\" \"1000 Head\" \"1000 Head\" \"1000 Head\" ...\n $ Value           : num [1:30977] 4700 4900 5000 5300 5500 5800 6600 6290 6300 6000 ...\n $ Flag            : chr [1:30977] \"F\" \"F\" \"F\" \"F\" ...\n $ Flag Description: chr [1:30977] \"FAO estimate\" \"FAO estimate\" \"FAO estimate\" \"FAO estimate\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   `Domain Code` = col_character(),\n  ..   Domain = col_character(),\n  ..   `Area Code` = col_double(),\n  ..   Area = col_character(),\n  ..   `Element Code` = col_double(),\n  ..   Element = col_character(),\n  ..   `Item Code` = col_double(),\n  ..   Item = col_character(),\n  ..   `Year Code` = col_double(),\n  ..   Year = col_double(),\n  ..   Unit = col_character(),\n  ..   Value = col_double(),\n  ..   Flag = col_character(),\n  ..   `Flag Description` = col_character()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n\nThe dataset covers 1961-2018; earlier years have less cases than recent years.\n\n\nCode\ntable((select(birds, Year))) #retrieve Year column from birds, calculate frequencies\n\n\nYear\n1961 1962 1963 1964 1965 1966 1967 1968 1969 1970 1971 1972 1973 1974 1975 1976 \n 493  493  493  493  494  495  495  495  498  498  498  498  498  499  499  499 \n1977 1978 1979 1980 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 \n 498  498  497  496  498  498  495  498  499  499  500  502  503  512  514  569 \n1993 1994 1995 1996 1997 1998 1999 2000 2001 2002 2003 2004 2005 2006 2007 2008 \n 574  574  574  574  574  574  574  575  575  575  575  575  575  576  576  576 \n2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 \n 576  576  576  577  577  577  577  577  577  577 \n\n\nThe Flag Description provides information on the sources of data. 6,488 cases are aggregate data, 1,002 cases do not have data available, 1,213 cases are FAO imputed data, 10,007 cases are FAO estimates, 10,773 cases are from official data, and 1,494 cases are unofficial figures.\n\n\nCode\ntable((select(birds, \"Flag Description\"))) #retrieve \"Flag Description\" column from birds, calculate frequencies\n\n\nFlag Description\nAggregate, may include official, semi-official, estimated or calculated data \n                                                                        6488 \n                                                          Data not available \n                                                                        1002 \n                                    FAO data based on imputation methodology \n                                                                        1213 \n                                                                FAO estimate \n                                                                       10007 \n                                                               Official data \n                                                                       10773 \n                                                           Unofficial figure \n                                                                        1494 \n\n\nOf the 30,977 total cases, chickens comprised 13,074, ducks comprised 6,909, geese and guinea fowls comprised 4,136, pigeons and other birds comprised 1,165, and turkeys comprised 5,693.\n\n\nCode\ntable((select(birds, Item))) #retrieve Item column from birds, calculate frequencies\n\n\nItem\n              Chickens                  Ducks Geese and guinea fowls \n                 13074                   6909                   4136 \n  Pigeons, other birds                Turkeys \n                  1165                   5693 \n\n\nThe data only covers live animals.\n\n\nCode\ntable((select(birds, Domain)))\n\n\nDomain\nLive Animals \n       30977 \n\n\nThese are the ten areas with the most number of cases. This output shows that the data includes supranational cases: Africa, Asia, Eastern Asia, Europe). There are several areas with the most number of cases overall, 290.\n\n\nCode\nhead(sort(table((select(birds, Area))),decreasing=TRUE), n=10) #retrieve Area column from birds, calculate frequencies, sort in ascending order, display first ten\n\n\nArea\n            Africa               Asia       Eastern Asia              Egypt \n               290                290                290                290 \n            Europe             France             Greece            Myanmar \n               290                290                290                290 \n   Northern Africa South-eastern Asia \n               290                290 \n\n\nThese are the ten areas with the least number of cases. South Sudan and Sudan jointly have the least number of cases overall with only seven.\n\n\nCode\nhead(sort(table((select(birds, Area))),decreasing=FALSE), n=10) #retrieve Area column from birds, calculate frequencies, sort in descending order, display first ten\n\n\nArea\n    South Sudan           Sudan      Montenegro      Luxembourg         Eritrea \n              7               7              13              19              26 \n       Ethiopia North Macedonia      Tajikistan           Aruba    Ethiopia PDR \n             26              27              27              29              32 \n\n\nThe data contains cases from 248 unique areas.\n\n\nCode\nnrow(unique(select(birds, Area))) #retrieve Area column from birds, identify unique Area values, calculate total number of unique Area values\n\n\n[1] 248\n\n\nHere is the five summary of the data. The smallest stock value is 0 units of 1000 Head, and the largest stock value is 23,707,134 units of 1000 Head. The mean or average across all cases is 99,411 units of 1000 Head.\n\n\nCode\nsummary(select(birds, Value)) #retrieve Value column from birds, produce five number summary of Value\n\n\n     Value         \n Min.   :       0  \n 1st Qu.:     171  \n Median :    1800  \n Mean   :   99411  \n 3rd Qu.:   15404  \n Max.   :23707134  \n NA's   :1036      \n\n\nThere are 1,036 cases with missing stock values.\n\n\nCode\nsum(is.na(select(birds, Value))) #retrieve Value column from birds, identify cases with missing values, total the number of cases with missing values\n\n\n[1] 1036\n\n\nFrom this quick analysis, we can summarize this as a dataset of selected types of live bird stock measured in units of 1000 Head in 248 defined areas of the world in a calendar year. A case corresponds to the live stock of a type of bird in an area of the world in a calendar year."
  },
  {
    "objectID": "posts/challenge1_solutions.html",
    "href": "posts/challenge1_solutions.html",
    "title": "Challenge 1 Solution",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(readxl)\n\nknitr::opts_chunk$set(echo = TRUE)"
  },
  {
    "objectID": "posts/challenge1_solutions.html#working-with-tabular-data",
    "href": "posts/challenge1_solutions.html#working-with-tabular-data",
    "title": "Challenge 1 Solution",
    "section": "Working with Tabular Data",
    "text": "Working with Tabular Data\nOur advanced datasets ( ⭐⭐⭐ and higher) are tabular data (i.e., tables) that are often published based on government sources or by other organizations. Tabular data is often made available in Excel format (.xls or .xlsx) and is formatted for ease of reading - but this can make it tricky to read into R and reshape into a usable dataset.\nReading in tabular data will follow the same general work flow or work process regardless of formatting differences. We will work through the steps in detail this week (and in future weeks as new datasets are introduced), but this is an outline of the basic process. Note that not every step is needed for every file.\n\nIdentify grouping variables and values to extract from the table\nIdentify formatting issues that need to be addressed or eliminated\nIdentify column issues to be addressed during data read-in\nChoose column names to allow pivoting or future analysis\nAddress issues in rows using filter (and stringr package)\nCreate or mutate new variables as required, using separate, pivot_longer, etc\n\n\nRailroad ⭐FAOSTAT ⭐⭐Wild Birds ⭐⭐⭐Railroad (xls) ⭐⭐⭐⭐\n\n\nIt is hard to get much information about the data source or contents from a .csv file - as compared to the formatted .xlsx version of the same data described below.\n\nRead the Data\n\n\nCode\nrailroad<-read_csv(\"_data/railroad_2012_clean_county.csv\")\n\n\nRows: 2930 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): state, county\ndbl (1): total_employees\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nrailroad\n\n\n\n\n  \n\n\n\nFrom inspection, we can that the three variables are named state, county, and total employees. Combined with the name of the fail, this appears to be the aggregated data on the number of employees working for the railroad in each county 2012. We assume that the 2930 cases - which are counties embedded within states1 - consist only of counties where there are railroad employees?\n\n\nCode\nrailroad%>%\n  select(state)%>%\n  n_distinct(.)\n\n\n[1] 53\n\n\nCode\nrailroad%>%\n  select(state)%>%\n  distinct()\n\n\n\n\n  \n\n\n\nWith a few simple commands, we can confirm that there are 53 “states” represented in the data. To identify the additional non-state areas (probably District of Columbia, plus some combination of Puerto Rico and/or overseas addresses), we can print out a list of unique state names.\n\n1: We can identify case variables because both are character variables, which in tidy lingo are grouping variables not values.\n\n\n\nOnce again, a .csv file lacks any of the additional information that might be present in a published Excel table. So, we know the data are likely to be about birds, but will we be looking at individual pet birds, prices of bird breeds sold in stores, the average flock size of wild birds - who knows!\nThe FAOSTAT*.csv files have some additional information - the FAO - which a Google search reveals to be the Food and Agriculture Association of the United Nations publishes country-level data regularly in a database called FAOSTAT. So my best guess at this point is that we are going to be looking at country-level estaimtes of the number of birds that are raised for eggs and poultry, but we will see if this is right by inspecting the data.\n\nRead the Data\n\n\nCode\nbirds<-read_csv(\"_data/birds.csv\")\n\n\nRows: 30977 Columns: 14\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): Domain Code, Domain, Area, Element, Item, Unit, Flag, Flag Description\ndbl (6): Area Code, Element Code, Item Code, Year Code, Year, Value\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nbirds\n\n\n\n\n  \n\n\n\nCode\nchickens<-read_csv(\"_data/FAOSTAT_egg_chicken.csv\")\n\n\nRows: 38170 Columns: 14\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): Domain Code, Domain, Area, Element, Item, Unit, Flag, Flag Description\ndbl (6): Area Code, Element Code, Item Code, Year Code, Year, Value\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nchickens\n\n\n\n\n  \n\n\n\nIt is pretty difficult to get a handle on what data are being captured by any of the FAOSTAT* (including the birds.csv) data sets simply from a quick scan of the tibble after read in. It was easy with the railroad data, but now we are going to have to work harder to describe exactly what comprises a case in these data and what values are present for each case. We can see that there are 30,970 rows in the birds data (and 38,170 rows in the chickens) - but this might not mean that there are 30,970 (or 38,170) cases because we aren’t sure what constitutes a case at this point.\n\n\nWhat is a case?\nOne approach to figuring out what constitutes a case is to identify the value variables and assume that what is leftover are the grouping variables. Unfortunately, there are six double variables (from the column descriptions that are automatically returned), and it appears that most of them are not grouping variables. For example, the variable “Area Code” is a double - but doesn’t appear to be a value that varies across rows. Thus, it is a grouping variable rather than a true value in tidy nomenclature. Similar issues can be found with Year and “Item Code” - both appear to be grouping variables. Ironically, it is the variable called Value which appears to the sole value in the data set - but what is it the value of?\nAnother approach to identifying a case is to look for variation (or lack of variation) in just the first few cases of the tibble. (Think of this as the basis for a minimal reproducible example.) In the first few cases, the variables of the first 10 cases appear to be identical until we get to Year and Year Code (which appear to be identical to each other.) So it appears that Value is varying by country-year - but perhaps also by information in one of the other variables. It also appears that many of the doubles are just numeric codes, so lets drop those variables to simplify (I’m going to drop down to just showing the birds data for now.)\n\n\nCode\nbirds.sm<-birds%>%\n  select(-contains(\"Code\"))\nbirds.sm\n\n\n\n\n  \n\n\n\nCode\nchickens.sm<-chickens%>%\n  select(-contains(\"Code\"))\n\n\n\n\nVisual Summary of Data Set\nBefore we go doing detailed cross-tabs to figure out where there is variation, lets do a high level summary of the dataset to see if - for example - there are multiple values in the Element variable - or if we only have a dataset with records containing estimates of Chicken Stocks (from Element + Item.)\nTo get a better grasp of the data, lets do a quick skim or summary of the dataset and see if we can find out more about our data at a glance. I am using the dfSummary function from the summarytools package -one of the more attractive ways to quickly summarise a dataset. I am using a few options to allow it to render directly to html.\n\n\nCode\nprint(summarytools::dfSummary(birds.sm,\n                        varnumbers = FALSE,\n                        plain.ascii  = FALSE, \n                        style        = \"grid\", \n                        graph.magnif = 0.70, \n                        valid.col    = FALSE),\n      method = 'render',\n      table.classes = 'table-condensed')\n\n\n\n\nData Frame Summary\nbirds.sm\nDimensions: 30977 x 9\n  Duplicates: 0\n\n\n  \n    \n      Variable\n      Stats / Values\n      Freqs (% of Valid)\n      Graph\n      Missing\n    \n  \n  \n    \n      Domain\n[character]\n      1. Live Animals\n      30977(100.0%)\n      \n      0\n(0.0%)\n    \n    \n      Area\n[character]\n      1. Africa2. Asia3. Eastern Asia4. Egypt5. Europe6. France7. Greece8. Myanmar9. Northern Africa10. South-eastern Asia[ 238 others ]\n      290(0.9%)290(0.9%)290(0.9%)290(0.9%)290(0.9%)290(0.9%)290(0.9%)290(0.9%)290(0.9%)290(0.9%)28077(90.6%)\n      \n      0\n(0.0%)\n    \n    \n      Element\n[character]\n      1. Stocks\n      30977(100.0%)\n      \n      0\n(0.0%)\n    \n    \n      Item\n[character]\n      1. Chickens2. Ducks3. Geese and guinea fowls4. Pigeons, other birds5. Turkeys\n      13074(42.2%)6909(22.3%)4136(13.4%)1165(3.8%)5693(18.4%)\n      \n      0\n(0.0%)\n    \n    \n      Year\n[numeric]\n      Mean (sd) : 1990.6 (16.7)min ≤ med ≤ max:1961 ≤ 1992 ≤ 2018IQR (CV) : 29 (0)\n      58 distinct values\n      \n      0\n(0.0%)\n    \n    \n      Unit\n[character]\n      1. 1000 Head\n      30977(100.0%)\n      \n      0\n(0.0%)\n    \n    \n      Value\n[numeric]\n      Mean (sd) : 99410.6 (720611.4)min ≤ med ≤ max:0 ≤ 1800 ≤ 23707134IQR (CV) : 15233 (7.2)\n      11495 distinct values\n      \n      1036\n(3.3%)\n    \n    \n      Flag\n[character]\n      1. *2. A3. F4. Im5. M\n      1494(7.4%)6488(32.1%)10007(49.5%)1213(6.0%)1002(5.0%)\n      \n      10773\n(34.8%)\n    \n    \n      Flag Description\n[character]\n      1. Aggregate, may include of2. Data not available3. FAO data based on imputat4. FAO estimate5. Official data6. Unofficial figure\n      6488(20.9%)1002(3.2%)1213(3.9%)10007(32.3%)10773(34.8%)1494(4.8%)\n      \n      0\n(0.0%)\n    \n  \n\nGenerated by summarytools 1.0.1 (R version 4.2.1)2023-02-22\n\n\n\nFinally - we have a much better grasp on what is going on. First, we know that all records in this data set are of the number of Live Animal Stocks (Domain + Element), with the value expressed as 1000 heads (Unit). These three variables are grouping variables but DO NOT vary in this particular data extract - but are probably used to create data extracts from the larger FAOSTAT database.. To see if we are correct, we will have to checkout the same fields in the chickens data below.\nSecond, we can now guess that a case consists of a country-year-animal record - as captured in the variables Area, Year and Item, respectively - estimate of the number of live animals (Value.) ALso, as a side note, it appears that the estimated number of animals may have a long right-hand tail - just looking at the mini-histogram. So we can now say that we have estimates of the stock of five different types of poultry (Chickens, Ducks, Geese and guinea fowls, Turkeys, and Pigeons/Others) in 248 areas (countries??) for 58 years between 1961-2018.\nThe only minor concern is that we are still not entirely sure what information is being captured in the Flag (and matching Flag Description) variable. It appears unlikely that there is more than one estimate per country-year-animal case (see the summary of Area where all countries have 290 observations.) An assumption of one type of estimate (the content of Flag Description) per year is also consistent with the histogram of Year, which is pretty consistent although more countries were clearly added later in the series and data collection is not complete for the most recent time period.\nWe can dig a bit more, and find the description of the Flag field on the FAOSTAT website.. Sure enough, this confirms that the flags correspond to what type of estimate is being used (e.g., official data vs an estimate by FAOSTAT or imputed data.)\nWe can also confirm that NOT all cases are countries, as there is a Flag value, A, described as aggregated data. A quick inspection of the areas using this flag confirm that all of the “countries” are actually regional aggregations, and should be filtered out of the dataset as they are not the same “type” of case as a country-level case. To fix these data into true tidy format, we would need to filter out the aggregates, then merge on the country group definitions from FAOSTAT to create new country-group or regional variables that could be used to recreate aggregated estimates with dplyr.\n\n\nCode\nbirds.sm%>%\n  filter(Flag==\"A\")%>%\n  group_by(Area)%>%\n  summarize(n=n())\n\n\n\n\n  \n\n\n\n\n\nFAOstat*.csv\nLets take a quick look at our chickens data to see if it follows the same basic pattern as the birds data. Sure enough, it looks like we have a different domain (livestock products) but that the cases remain similar country-year-product, with three slightly different estimates related to egg-laying (instead of the five types of poultry.)\n\n\nCode\nprint(summarytools::dfSummary(chickens.sm,\n                        varnumbers = FALSE,\n                        plain.ascii  = FALSE, \n                        style        = \"grid\", \n                        graph.magnif = 0.70, \n                        valid.col    = FALSE),\n      method = 'render',\n      table.classes = 'table-condensed')\n\n\n\n\nData Frame Summary\nchickens.sm\nDimensions: 38170 x 9\n  Duplicates: 0\n\n\n  \n    \n      Variable\n      Stats / Values\n      Freqs (% of Valid)\n      Graph\n      Missing\n    \n  \n  \n    \n      Domain\n[character]\n      1. Livestock Primary\n      38170(100.0%)\n      \n      0\n(0.0%)\n    \n    \n      Area\n[character]\n      1. Afghanistan2. Africa3. Albania4. Algeria5. American Samoa6. Americas7. Angola8. Antigua and Barbuda9. Argentina10. Asia[ 235 others ]\n      174(0.5%)174(0.5%)174(0.5%)174(0.5%)174(0.5%)174(0.5%)174(0.5%)174(0.5%)174(0.5%)174(0.5%)36430(95.4%)\n      \n      0\n(0.0%)\n    \n    \n      Element\n[character]\n      1. Laying2. Production3. Yield\n      12679(33.2%)12840(33.6%)12651(33.1%)\n      \n      0\n(0.0%)\n    \n    \n      Item\n[character]\n      1. Eggs, hen, in shell\n      38170(100.0%)\n      \n      0\n(0.0%)\n    \n    \n      Year\n[numeric]\n      Mean (sd) : 1990.5 (16.7)min ≤ med ≤ max:1961 ≤ 1991 ≤ 2018IQR (CV) : 29 (0)\n      58 distinct values\n      \n      0\n(0.0%)\n    \n    \n      Unit\n[character]\n      1. 1000 Head2. 100mg/An3. tonnes\n      12679(33.2%)12651(33.1%)12840(33.6%)\n      \n      0\n(0.0%)\n    \n    \n      Value\n[numeric]\n      Mean (sd) : 291341.2 (2232761)min ≤ med ≤ max:1 ≤ 31996 ≤ 76769955IQR (CV) : 91235.8 (7.7)\n      21325 distinct values\n      \n      40\n(0.1%)\n    \n    \n      Flag\n[character]\n      1. *2. A3. F4. Fc5. Im6. M\n      1435(4.7%)3186(10.4%)10538(34.4%)13344(43.6%)2079(6.8%)40(0.1%)\n      \n      7548\n(19.8%)\n    \n    \n      Flag Description\n[character]\n      1. Aggregate, may include of2. Calculated data3. Data not available4. FAO data based on imputat5. FAO estimate6. Official data7. Unofficial figure\n      3186(8.3%)13344(35.0%)40(0.1%)2079(5.4%)10538(27.6%)7548(19.8%)1435(3.8%)\n      \n      0\n(0.0%)\n    \n  \n\nGenerated by summarytools 1.0.1 (R version 4.2.1)2023-02-22\n\n\n\n\n\n\nThe “wild_bird_data” sheet is in Excel format (.xlsx) instead of the .csv format of the earlier data sets. In theory, it should be no harder to read in an Excel worksheet (or even workbook) as compared to a .csv file - there is a package called read_xl that is part of the tidyverse that easily reads in excel files.\nHowever, in practice, most people use Excel sheets as a publication format - not a way to store data, so there is almost always a ton of “junk” in the file that is NOT part of the data table that we want to read in. Sometimes the additional “junk” is incredibly useful - it might include table notes or information about data sources. However, we still need a systematic way to identify this junk and get rid of it during the data reading step.\nFor example, lets see what happens here if we just read in the wild bird data straight from excel.\n\n\nCode\nwildbirds<-read_excel(\"_data/wild_bird_data.xlsx\")\nwildbirds\n\n\n\n\n  \n\n\n\nHm, this doesn’t seem quite right. It is clear that the first “case” has information in it that looks more like variable labels. Lets take a quick look at the raw data.\n\n\n\nWild Bird Excel File\n\n\nSure enough the Excel file first row does contain additional information, a pointer to the article that this data was drawn from, and a quick Google reveals the article is [Nee, S., Read, A., Greenwood, J. et al. The relationship between abundance and body size in British birds. Nature 351, 312–313 (1991)] (https://www.nature.com/articles/351312a0)\n\nSkipping a row\nWe could try to manually adjust things - remove the first row, change the column names, and then change the column types. But this is both a lot of work, and not really a best practice for data management. Lets instead re-read the data in with the skip option from read_excel, and see if it fixes all of our problems!\n\n\nCode\nwildbirds <- read_excel(\"_data/wild_bird_data.xlsx\",\n                        skip = 1)\nwildbirds\n\n\n\n\n  \n\n\n\nThis now looks great! Both variables are numeric, and now they correctly show up as double or (). The variable names might be a bit tough to work with, though, so it can be easier to assign new column names on the read in - and then manually adjust axis labels, etc once you are working on your publication-quality graphs.\nNote that I skip two rows this time, and apply my own column names.\n\n\nCode\nwildbirds <- read_excel(\"_data/wild_bird_data.xlsx\",\n                        skip = 2, \n                        col_names = c(\"weight\", \"pop_size\"))\nwildbirds\n\n\n\n\n  \n\n\n\n\n\n\nThe railroad data set is our most challenging data to read in this week, but is (by comparison) a fairly straightforward formatted table published by the Railroad Retirement Board. The value variable is a count of the number of employees in each county and state combination. \nLooking at the excel file, we can see that there are only a few issues: 1. There are three rows at the top of the sheet that are not needed 2. There are blank columns that are not needed. 3. There are Total rows for each state that are not needed\n\nSkipping title rows\nFor the first issue, we use the “skip” option on read_excel from the readxl package to skip the rows at the top.\n\n\nCode\nread_excel(\"_data/StateCounty2012.xls\",\n                     skip = 3)\n\n\nNew names:\n• `` -> `...2`\n• `` -> `...4`\n\n\n\n\n  \n\n\n\n\n\nRemoving empty columns\nFor the second issue, I name the blank columns “delete” to make is easy to remove the unwanted columns. I then use select (with the ! sign to designate the complement or NOT) to select columns we wish to keep in the dataset - the rest are removed. Note that I skip 4 rows this time as I do not need the original header row.\nThere are other approaches you could use for this task (e.g., remove all columns that have no valid volues), but hard coding of variable names and types during data read in is not considered a violation of best practices and - if used strategically - can often make later data cleaning much easier.\n\n\nCode\nread_excel(\"_data/StateCounty2012.xls\",\n                     skip = 4,\n                     col_names= c(\"State\", \"delete\", \"County\", \"delete\", \"Employees\"))%>%\n  select(!contains(\"delete\"))\n\n\nNew names:\n• `delete` -> `delete...2`\n• `delete` -> `delete...4`\n\n\n\n\n  \n\n\n\n\n\nFiltering “total” rows\nFor the third issue, we are going to use filter to identify (and drop the rows that have the word “Total” in the State column). str_detect can be used to find specific rows within a column that have the designated “pattern”, while the “!” designates the complement of the selected rows (i.e., those without the “pattern” we are searching for.)\nThe str_detect command is from the stringr package, and is a powerful and easy to use implementation of grep and regex in the tidyverse - the base R functions (grep, gsub, etc) are classic but far more difficult to use, particularly for those not in practice. Be sure to explore the stringr package on your own.\n\n\nCode\nrailroad<-read_excel(\"_data/StateCounty2012.xls\",\n                     skip = 4,\n                     col_names= c(\"State\", \"delete\", \"County\", \"delete\", \"Employees\"))%>%\n  select(!contains(\"delete\"))%>%\n  filter(!str_detect(State, \"Total\"))\n\n\nNew names:\n• `delete` -> `delete...2`\n• `delete` -> `delete...4`\n\n\nCode\nrailroad\n\n\n\n\n  \n\n\n\n\n\nRemove any table notes\nTables often have notes in the last few table rows. You can check table limits and use this information during data read-in to not read the notes by setting the n-max option at the total number of rows to read, or less commonly, the range option to specify the spreadsheet range in standard excel naming (e.g., “B4:R142”). If you didn’t handle this on read in, you can use the tail command to check for notes and either tail or head to keep only the rows that you need.\n\n\nCode\ntail(railroad, 10)\n\n\n\n\n  \n\n\n\nCode\n#remove the last two observations\nrailroad <-head(railroad, -2)\ntail(railroad, 10)\n\n\n\n\n  \n\n\n\n\n\nConfirm cases\nAnd that is all it takes! The data are now ready for analysis. Lets see if we get the same number of unique states that were in the cleaned data in exercise 1.\n\n\nCode\nrailroad%>%\n  select(State)%>%\n  n_distinct(.)\n\n\n[1] 54\n\n\nCode\nrailroad%>%\n  select(State)%>%\n  distinct()\n\n\n\n\n  \n\n\n\nOh my goodness! It seems that we have an additional “State” - it looks like Canada is in the full excel data and not the tidy data. This is one example of why it is good practice to always work from the original data source!"
  },
  {
    "objectID": "posts/KekaiLiu_hw1.html",
    "href": "posts/KekaiLiu_hw1.html",
    "title": "First Assignment",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE)"
  },
  {
    "objectID": "posts/KekaiLiu_hw1.html#instructions",
    "href": "posts/KekaiLiu_hw1.html#instructions",
    "title": "First Assignment",
    "section": "Instructions",
    "text": "Instructions\nThis document provides yaml header information you will need to replicate each week to submit your homework or other blog posts. Please observe the following conventions:\n\nSave your own copy of this template as a blog post in the posts folder, naming it FirstLast_hwX.qmd\nEdit the yaml header to change your author name - use the same name each week\ninclude a description that is reader friendly\nupdate the category list to indicate the type of submission, the data used, the main packages or techniques, your name, or any thing else to make your document easy to find\nedit as a normal qmd/rmd file\n\n\n\nCode\nx <- c(2,3,4,5)\nmean(x)\n\n\n[1] 3.5"
  },
  {
    "objectID": "posts/KekaiLiu_hw1.html#rendering-your-post",
    "href": "posts/KekaiLiu_hw1.html#rendering-your-post",
    "title": "First Assignment",
    "section": "Rendering your post",
    "text": "Rendering your post\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code.\n\n\n\n\n\n\nWarning\n\n\n\nBe sure that you have moved your *.qmd file into the posts folder BEFORE you render it, so that all files are stored in the correct location.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nOnly render a single file - don’t try to render the whole website!\n\n\n\n\n\n\n\n\nPilot Student Blogs\n\n\n\nWe are piloting a workflow including individual student websites with direted and limited pull requests back to course blogs. Please let us know if you would like to participate."
  },
  {
    "objectID": "posts/KekaiLiu_hw1.html#reading-in-data-files",
    "href": "posts/KekaiLiu_hw1.html#reading-in-data-files",
    "title": "First Assignment",
    "section": "Reading in data files",
    "text": "Reading in data files\nThe easiest data source to use - at least initially - is to choose something easily accessible, either from our _data folder provided, or from an online source that is publicly available.\n\n\n\n\n\n\nUsing Other Data\n\n\n\nIf you would like to use a source that you have access to and it is small enough and you don’t mind making it public, you can copy it into the _data file and include in your commit and pull request.\n\n\n\n\n\n\n\n\nUsing Private Data\n\n\n\nIf you would like to use a proprietary source of data, that should be possible using the same process outlined above. There may initially be a few issues. We hope to have this feature working smoothly soon!"
  },
  {
    "objectID": "posts/KeithMartin_hw1.html",
    "href": "posts/KeithMartin_hw1.html",
    "title": "AB_NYC)2019",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE)"
  },
  {
    "objectID": "posts/KeithMartin_hw1.html#instructions",
    "href": "posts/KeithMartin_hw1.html#instructions",
    "title": "AB_NYC)2019",
    "section": "Instructions",
    "text": "Instructions\nThis document provides yaml header inforamtion you will need to replicate each week to submit your homework or other blog posts. Please observe the following conventions:\n\nSave your own copy of this template as a blog post in the posts folder, naming it FirstLast_hwX.qmd\nEdit the yaml header to change your author name - use the same name each week\ninclude a description that is reader friendly\nupdate the category list to indicate the type of submission, the data used, the main packages or techniques, your name, or any thing else to make your document easy to find\nedit as a normal qmd/rmd file\n\n\n\nCode\nlibrary(readr)\ncomtrade <- read_csv (\"_data/AB_NYC_2019.csv\")\n\n\nRows: 48895 Columns: 16\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (5): name, host_name, neighbourhood_group, neighbourhood, room_type\ndbl  (10): id, host_id, latitude, longitude, price, minimum_nights, number_o...\ndate  (1): last_review\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nView(comtrade)\n\n\nError in check_for_XQuartz(file.path(R.home(\"modules\"), \"R_de.so\")): X11 library is missing: install XQuartz from www.xquartz.org\n\n\n\n\nCode\nx <- c(2,3,4,5)\nmean(x)\n\n\n[1] 3.5"
  },
  {
    "objectID": "posts/KeithMartin_hw1.html#rendering-your-post",
    "href": "posts/KeithMartin_hw1.html#rendering-your-post",
    "title": "AB_NYC)2019",
    "section": "Rendering your post",
    "text": "Rendering your post\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code.\n\n\n\n\n\n\nWarning\n\n\n\nBe sure that you have moved your *.qmd file into the posts folder BEFORE you render it, so that all files are stored in the correct location.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nOnly render a single file - don’t try to render the whole website!\n\n\n\n\n\n\n\n\nPilot Student Blogs\n\n\n\nWe are piloting a workflow including individual student websites with direted and limited pull requests back to course blogs. Please let us know if you would like to participate."
  },
  {
    "objectID": "posts/KeithMartin_hw1.html#reading-in-data-files",
    "href": "posts/KeithMartin_hw1.html#reading-in-data-files",
    "title": "AB_NYC)2019",
    "section": "Reading in data files",
    "text": "Reading in data files\nThe easiest data source to use - at least initially - is to choose something easily accessible, either from our _data folder provided, or from an online source that is publicly available.\n\n\n\n\n\n\nUsing Other Data\n\n\n\nIf you would like to use a source that you have access to and it is small enough and you don’t mind making it public, you can copy it into the _data file and include in your commit and pull request.\n\n\n\n\n\n\n\n\nUsing Private Data\n\n\n\nIf you would like to use a proprietary source of data, that should be possible using the same process outlined above. There may initially be a few issues. We hope to have this feature working smoothly soon!"
  },
  {
    "objectID": "posts/DirichiUmunna_hwX.html",
    "href": "posts/DirichiUmunna_hwX.html",
    "title": "Describing Cross-sectional Survey Data 2021",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE)"
  },
  {
    "objectID": "posts/DirichiUmunna_hwX.html#getting-descriptive-statistics-of-the-data-set",
    "href": "posts/DirichiUmunna_hwX.html#getting-descriptive-statistics-of-the-data-set",
    "title": "Describing Cross-sectional Survey Data 2021",
    "section": "Getting descriptive statistics of the data set",
    "text": "Getting descriptive statistics of the data set\n\n\nCode\nsummary(abc_poll_2021)\n\n\n       id            xspanish         complete_status        ppage      \n Min.   :7230001   Length:527         Length:527         Min.   :18.00  \n 1st Qu.:7230132   Class :character   Class :character   1st Qu.:40.00  \n Median :7230264   Mode  :character   Mode  :character   Median :55.00  \n Mean   :7230264                                         Mean   :53.39  \n 3rd Qu.:7230396                                         3rd Qu.:67.00  \n Max.   :7230527                                         Max.   :91.00  \n   ppeduc5            ppeducat           ppgender            ppethm         \n Length:527         Length:527         Length:527         Length:527        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   pphhsize            ppinc7            ppmarit5           ppmsacat        \n Length:527         Length:527         Length:527         Length:527        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ppreg4             pprent            ppstaten           PPWORKA         \n Length:527         Length:527         Length:527         Length:527        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   ppemploy             Q1_a               Q1_b               Q1_c          \n Length:527         Length:527         Length:527         Length:527        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n     Q1_d               Q1_e               Q1_f                Q2           \n Length:527         Length:527         Length:527         Length:527        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n      Q3                 Q4                 Q5                QPID          \n Length:527         Length:527         Length:527         Length:527        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ABCAGE            Contact           weights_pid    \n Length:527         Length:527         Min.   :0.3240  \n Class :character   Class :character   1st Qu.:0.6332  \n Mode  :character   Mode  :character   Median :0.8451  \n                                       Mean   :1.0000  \n                                       3rd Qu.:1.1516  \n                                       Max.   :6.2553"
  },
  {
    "objectID": "posts/DirichiUmunna_hwX.html#identifying-variable-name",
    "href": "posts/DirichiUmunna_hwX.html#identifying-variable-name",
    "title": "Describing Cross-sectional Survey Data 2021",
    "section": "Identifying variable name",
    "text": "Identifying variable name\n\n\nCode\nnames(abc_poll_2021)\n\n\n [1] \"id\"              \"xspanish\"        \"complete_status\" \"ppage\"          \n [5] \"ppeduc5\"         \"ppeducat\"        \"ppgender\"        \"ppethm\"         \n [9] \"pphhsize\"        \"ppinc7\"          \"ppmarit5\"        \"ppmsacat\"       \n[13] \"ppreg4\"          \"pprent\"          \"ppstaten\"        \"PPWORKA\"        \n[17] \"ppemploy\"        \"Q1_a\"            \"Q1_b\"            \"Q1_c\"           \n[21] \"Q1_d\"            \"Q1_e\"            \"Q1_f\"            \"Q2\"             \n[25] \"Q3\"              \"Q4\"              \"Q5\"              \"QPID\"           \n[29] \"ABCAGE\"          \"Contact\"         \"weights_pid\"    \n\n\nCode\n# trying all the means to get a description of the variables in the dataset and the result does not exactly give me the complete names. It seems like I have gone beyond my pay grade for today."
  },
  {
    "objectID": "posts/DirichiUmunna_hwX.html#attempted-scatter-plot-of-two-variables",
    "href": "posts/DirichiUmunna_hwX.html#attempted-scatter-plot-of-two-variables",
    "title": "Describing Cross-sectional Survey Data 2021",
    "section": "Attempted scatter plot of two variables",
    "text": "Attempted scatter plot of two variables\n\n\nCode\nplot(abc_poll_2021$ppgender, abc_poll_2021$ppmarit5)\n\n\nWarning in xy.coords(x, y, xlabel, ylabel, log): NAs introduced by coercion\n\nWarning in xy.coords(x, y, xlabel, ylabel, log): NAs introduced by coercion\n\n\nWarning in min(x): no non-missing arguments to min; returning Inf\n\n\nWarning in max(x): no non-missing arguments to max; returning -Inf\n\n\nWarning in min(x): no non-missing arguments to min; returning Inf\n\n\nWarning in max(x): no non-missing arguments to max; returning -Inf\n\n\nError in plot.window(...): need finite 'xlim' values\n\n\n\n\n\nCode\n#this data needs to be cleaned. To be continued..."
  },
  {
    "objectID": "posts/Challenge_1_Megan_Galarneau.html",
    "href": "posts/Challenge_1_Megan_Galarneau.html",
    "title": "Global Poultry Production from 1960-2020",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)"
  },
  {
    "objectID": "posts/Challenge_1_Megan_Galarneau.html#introduction",
    "href": "posts/Challenge_1_Megan_Galarneau.html#introduction",
    "title": "Global Poultry Production from 1960-2020",
    "section": "Introduction",
    "text": "Introduction\nI analyzed the “birds.csv” data set for Challenge 1. By using R Commands to visualize and transform the data, I came to the conclusion that it is describing Global Poultry Production from 1960-2020. The following documentation shows my data exploration journey towards reaching this conclusion.\n\nCleaning the Data\nI read in the data set using the code below. Some of the column headers include countries (Area), birds (Item), bird quantity (Value), and years. It also shows a “Flag Description” column header with “FAO estimate” listed under it. FAO stands for the “Food and Agriculture Organization”. This gives me my first indication that this is a global report about birds.\n\n\nCode\nlibrary(readr)\nbirds <- read_csv(\"_data/birds.csv\")\n\n\n\n\nVisualization\nTo get an idea of how many types of birds are in this data, I performed the following R Command. This created a plot point graph of all bird categories against their (presumed) quantity.\n\n\nCode\nggplot(data = birds) + \ngeom_point(mapping = aes(x = Item, y = Value))\n\n\n\n\n\nFrom this plot point graph, I know: 1) There are five categories of birds: chickens, ducks, geese and guinea fowls, pigeons/other birds, and turkeys. 2) There are far more chickens than any other category of bird.\nNext, I want to see the change of these bird quantities over time, so I performed another R Command as seen below.\n\n\nCode\nggplot(data = birds, aes(x = Year, y = Value, color = Item)) +\ngeom_line()\n\n\n\n\n\nIn this new plot line graph, I can see the quantity of all birds increased from 1960-2020 and the production of chickens rose faster and higher than the other bird categories.\nIt’s hard to see each bird category in this plot line graph when they are meshed together. So, I used this next R Command to fix that.\n\n\nCode\n ggplot(data = birds,\n      mapping = aes(x = Year, y = Value, color = Item)) +\n      geom_line() +\n      facet_wrap(vars(Item)) +\n      theme_bw()\n\n\n\n\n\nNow, I can see the individual quantities of each bird category increase over time.\n\n\nCustomization\nLet’s make this new plot line graph neater.\n\n\nCode\nggplot(data = birds, mapping = aes(x = Year, y = Value, color = Item)) +\n          geom_line() +\n        facet_wrap(vars(Item)) +\n       labs(title = \"Global Poultry Production from 1960-2020\",\n                                     x = \"Year\",\n                                     y = \"Production\") +\n          theme_bw() +\n          theme(axis.text.x = element_text(colour = \"grey20\", size = 8, angle = 90, hjust = 0.5, vjust = 0.5),\n                                    axis.text.y = element_text(colour = \"grey20\", size = 8),\n                                        strip.text = element_text(face = \"italic\"),\n                                       text = element_text(size = 12))"
  },
  {
    "objectID": "posts/Challenge_1_Megan_Galarneau.html#conclusion",
    "href": "posts/Challenge_1_Megan_Galarneau.html#conclusion",
    "title": "Global Poultry Production from 1960-2020",
    "section": "Conclusion",
    "text": "Conclusion\nI propose that this data set is describing global poultry production from the years 1960-2020. The data set shows that chicken is the most produced chicken in the world compared to the other four bird categories: turkey, ducks, pigeons/other birds, and geese/guinea fowls. The data was collected mostly by the Food and Agriculture Organization (FAO)."
  },
  {
    "objectID": "posts/MicheleCarlin_hw1.html",
    "href": "posts/MicheleCarlin_hw1.html",
    "title": "International Data on Bird Counts from 1960s-2010s",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE)\ninstall.packages(summarytools)\n\n\nError in install.packages(summarytools): object 'summarytools' not found\n\n\nCode\nlibrary(summarytools)"
  },
  {
    "objectID": "posts/MicheleCarlin_hw1.html#read-in-and-view-birds-dataset",
    "href": "posts/MicheleCarlin_hw1.html#read-in-and-view-birds-dataset",
    "title": "International Data on Bird Counts from 1960s-2010s",
    "section": "Read in and view ‘birds’ dataset",
    "text": "Read in and view ‘birds’ dataset\n\n\nCode\nlibrary(readr)\nbirds <- read_csv (\"C:/Users/CarlinML/DACSS-601/601_Spring_2023/posts/_data/birds.csv\")\n\n\nRows: 30977 Columns: 14\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): Domain Code, Domain, Area, Element, Item, Unit, Flag, Flag Description\ndbl (6): Area Code, Element Code, Item Code, Year Code, Year, Value\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nView(birds)"
  },
  {
    "objectID": "posts/MicheleCarlin_hw1.html#list-of-variables-in-dataset",
    "href": "posts/MicheleCarlin_hw1.html#list-of-variables-in-dataset",
    "title": "International Data on Bird Counts from 1960s-2010s",
    "section": "List of variables in dataset",
    "text": "List of variables in dataset\n\n\nCode\nstr(birds)\n\n\nspc_tbl_ [30,977 × 14] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Domain Code     : chr [1:30977] \"QA\" \"QA\" \"QA\" \"QA\" ...\n $ Domain          : chr [1:30977] \"Live Animals\" \"Live Animals\" \"Live Animals\" \"Live Animals\" ...\n $ Area Code       : num [1:30977] 2 2 2 2 2 2 2 2 2 2 ...\n $ Area            : chr [1:30977] \"Afghanistan\" \"Afghanistan\" \"Afghanistan\" \"Afghanistan\" ...\n $ Element Code    : num [1:30977] 5112 5112 5112 5112 5112 ...\n $ Element         : chr [1:30977] \"Stocks\" \"Stocks\" \"Stocks\" \"Stocks\" ...\n $ Item Code       : num [1:30977] 1057 1057 1057 1057 1057 ...\n $ Item            : chr [1:30977] \"Chickens\" \"Chickens\" \"Chickens\" \"Chickens\" ...\n $ Year Code       : num [1:30977] 1961 1962 1963 1964 1965 ...\n $ Year            : num [1:30977] 1961 1962 1963 1964 1965 ...\n $ Unit            : chr [1:30977] \"1000 Head\" \"1000 Head\" \"1000 Head\" \"1000 Head\" ...\n $ Value           : num [1:30977] 4700 4900 5000 5300 5500 5800 6600 6290 6300 6000 ...\n $ Flag            : chr [1:30977] \"F\" \"F\" \"F\" \"F\" ...\n $ Flag Description: chr [1:30977] \"FAO estimate\" \"FAO estimate\" \"FAO estimate\" \"FAO estimate\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   `Domain Code` = col_character(),\n  ..   Domain = col_character(),\n  ..   `Area Code` = col_double(),\n  ..   Area = col_character(),\n  ..   `Element Code` = col_double(),\n  ..   Element = col_character(),\n  ..   `Item Code` = col_double(),\n  ..   Item = col_character(),\n  ..   `Year Code` = col_double(),\n  ..   Year = col_double(),\n  ..   Unit = col_character(),\n  ..   Value = col_double(),\n  ..   Flag = col_character(),\n  ..   `Flag Description` = col_character()\n  .. )\n - attr(*, \"problems\")=<externalptr>"
  },
  {
    "objectID": "posts/MicheleCarlin_hw1.html#dfsummary",
    "href": "posts/MicheleCarlin_hw1.html#dfsummary",
    "title": "International Data on Bird Counts from 1960s-2010s",
    "section": "dfSummary",
    "text": "dfSummary\n\n\nCode\nview(dfSummary(birds))\n\n\nSwitching method to 'browser'\n\n\nOutput file written: C:\\Users\\CarlinML\\AppData\\Local\\Temp\\Rtmpw9NrTb\\file36a06bdb2410.html"
  },
  {
    "objectID": "posts/MicheleCarlin_hw1.html#number-of-unique-values-in-the-variable-item",
    "href": "posts/MicheleCarlin_hw1.html#number-of-unique-values-in-the-variable-item",
    "title": "International Data on Bird Counts from 1960s-2010s",
    "section": "Number of unique values in the variable ‘Item’",
    "text": "Number of unique values in the variable ‘Item’\n\n\nCode\nbirds%>%\n  select(Item)%>%\n  n_distinct(.)\n\n\n[1] 5"
  },
  {
    "objectID": "posts/MicheleCarlin_hw1.html#frequency-table-of-item",
    "href": "posts/MicheleCarlin_hw1.html#frequency-table-of-item",
    "title": "International Data on Bird Counts from 1960s-2010s",
    "section": "Frequency table of ‘Item’",
    "text": "Frequency table of ‘Item’\n\n\nCode\ntable(select(birds, Item))\n\n\nItem\n              Chickens                  Ducks Geese and guinea fowls \n                 13074                   6909                   4136 \n  Pigeons, other birds                Turkeys \n                  1165                   5693"
  },
  {
    "objectID": "posts/MicheleCarlin_hw1.html#this-dataset-contains-data-on-the-number-of-bird-units-by-country-from-the-1960s-to-the-2010s.-data-is-available-for-various-types-of-birds-e.g.-chickens-ducks-turkeys-etc..",
    "href": "posts/MicheleCarlin_hw1.html#this-dataset-contains-data-on-the-number-of-bird-units-by-country-from-the-1960s-to-the-2010s.-data-is-available-for-various-types-of-birds-e.g.-chickens-ducks-turkeys-etc..",
    "title": "International Data on Bird Counts from 1960s-2010s",
    "section": "This dataset contains data on the number of bird ‘units’ by country from the 1960’s to the 2010’s. Data is available for various types of birds (e.g., chickens, ducks, turkeys, etc.).",
    "text": "This dataset contains data on the number of bird ‘units’ by country from the 1960’s to the 2010’s. Data is available for various types of birds (e.g., chickens, ducks, turkeys, etc.)."
  },
  {
    "objectID": "posts/MicheleCarlin_hw1.html#recoded-year-variable-into-decade-variable",
    "href": "posts/MicheleCarlin_hw1.html#recoded-year-variable-into-decade-variable",
    "title": "International Data on Bird Counts from 1960s-2010s",
    "section": "Recoded ‘Year’ variable into ‘Decade’ variable",
    "text": "Recoded ‘Year’ variable into ‘Decade’ variable\n\n\nCode\nbirds<-birds%>%\n  mutate(Decade = case_when(\n         Year >= 1960 & Year < 1970 ~ \"1960s\",\n         Year >= 1970 & Year < 1980 ~ \"1970s\",\n         Year >= 1980 & Year < 1990 ~ \"1980s\",\n         Year >= 1990 & Year < 2000 ~ \"1990s\",\n         Year >= 2000 & Year < 2010 ~ \"2000s\",\n         Year >= 2010 ~ \"2010s\")\n  )\ntable(select(birds, Decade))\n\n\nDecade\n1960s 1970s 1980s 1990s 2000s 2010s \n 4449  4982  4988  5613  5754  5191"
  },
  {
    "objectID": "posts/MicheleCarlin_hw1.html#created-crosstabs-of-item-by-decade",
    "href": "posts/MicheleCarlin_hw1.html#created-crosstabs-of-item-by-decade",
    "title": "International Data on Bird Counts from 1960s-2010s",
    "section": "Created crosstabs of Item by Decade",
    "text": "Created crosstabs of Item by Decade\n\n\nCode\nxtabs(~ Decade + Item, birds)\n\n\n       Item\nDecade  Chickens Ducks Geese and guinea fowls Pigeons, other birds Turkeys\n  1960s     1921  1000                    586                  171     771\n  1970s     2140  1120                    657                  190     875\n  1980s     2145  1102                    652                  195     894\n  1990s     2326  1255                    759                  210    1063\n  2000s     2384  1280                    780                  210    1100\n  2010s     2158  1152                    702                  189     990"
  },
  {
    "objectID": "posts/MicheleCarlin_hw1.html#created-graphic-display-of-bird-type-by-decade",
    "href": "posts/MicheleCarlin_hw1.html#created-graphic-display-of-bird-type-by-decade",
    "title": "International Data on Bird Counts from 1960s-2010s",
    "section": "Created graphic display of Bird Type by Decade",
    "text": "Created graphic display of Bird Type by Decade\n\n\nCode\n ggplot(birds, aes(x=Item, y=Value)) + \n   geom_col()+\n   facet_wrap(vars(Decade), scales = \"free_x\") +\n   labs(title = \"International Bird Counts by Decade\", y = \"Number\", x = \"Type of Bird\")\n\n\nWarning: Removed 1036 rows containing missing values (`position_stack()`)."
  },
  {
    "objectID": "posts/Thrishul_challenge_1.html",
    "href": "posts/Thrishul_challenge_1.html",
    "title": "Challenge 1",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)"
  },
  {
    "objectID": "posts/Thrishul_challenge_1.html#challenge-overview",
    "href": "posts/Thrishul_challenge_1.html#challenge-overview",
    "title": "Challenge 1",
    "section": "Challenge Overview",
    "text": "Challenge Overview\nToday’s challenge is to\n\nread in a dataset, and\ndescribe the dataset using both words and any supporting information (e.g., tables, etc)"
  },
  {
    "objectID": "posts/Thrishul_challenge_1.html#read-in-the-data",
    "href": "posts/Thrishul_challenge_1.html#read-in-the-data",
    "title": "Challenge 1",
    "section": "Read in the Data",
    "text": "Read in the Data\nRead in one (or more) of the following data sets, using the correct R package and command.\n\nrailroad_2012_clean_county.csv ⭐\nbirds.csv ⭐⭐\nFAOstat*.csv ⭐⭐\nwild_bird_data.xlsx ⭐⭐⭐\nStateCounty2012.xls ⭐⭐⭐⭐\n\nFind the _data folder, located inside the posts folder. Then you can read in the data, using either one of the readr standard tidy read commands, or a specialized package such as readxl.\n\n\nCode\ndf<- read.csv(file = \"_data/birds.csv\")\n\n\nAdd any comments or documentation as needed. More challenging data sets may require additional code chunks and documentation."
  },
  {
    "objectID": "posts/Thrishul_challenge_1.html#describe-the-data",
    "href": "posts/Thrishul_challenge_1.html#describe-the-data",
    "title": "Challenge 1",
    "section": "Describe the data",
    "text": "Describe the data\nThis is a Birds dataset which is in csv format. The data consists of different birds which are present all over the world. this data set has 30977 rows and 14 columns.when we get the data summary with dfSummary command we analysed that all the columns have equal amount of rows except the column value which has around 1036 rows of data is missing.\n\n\nCode\nlibrary(summarytools)\nview(dfSummary(df))"
  },
  {
    "objectID": "posts/JinxiaNiu_hw1.html",
    "href": "posts/JinxiaNiu_hw1.html",
    "title": "Chinese-language Disinformation about gunviolence",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE)"
  },
  {
    "objectID": "posts/JinxiaNiu_hw1.html#instructions",
    "href": "posts/JinxiaNiu_hw1.html#instructions",
    "title": "Chinese-language Disinformation about gunviolence",
    "section": "Instructions",
    "text": "Instructions\nThis document provides yaml header inforamtion you will need to replicate each week to submit your homework or other blog posts. Please observe the following conventions:\n\nSave your own copy of this template as a blog post in the posts folder, naming it FirstLast_hwX.qmd\nEdit the yaml header to change your author name - use the same name each week\ninclude a description that is reader friendly\nupdate the category list to indicate the type of submission, the data used, the main packages or techniques, your name, or any thing else to make your document easy to find\nedit as a normal qmd/rmd file\n\n\n\nCode\nx <- c(2,3,4,5)\nmean(x)\n\n\n[1] 3.5"
  },
  {
    "objectID": "posts/JinxiaNiu_hw1.html#rendering-your-post",
    "href": "posts/JinxiaNiu_hw1.html#rendering-your-post",
    "title": "Chinese-language Disinformation about gunviolence",
    "section": "Rendering your post",
    "text": "Rendering your post\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code.\n\n\n\n\n\n\nWarning\n\n\n\nBe sure that you have moved your *.qmd file into the posts folder BEFORE you render it, so that all files are stored in the correct location.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nOnly render a single file - don’t try to render the whole website!\n\n\n\n\n\n\n\n\nPilot Student Blogs\n\n\n\nWe are piloting a workflow including individual student websites with direted and limited pull requests back to course blogs. Please let us know if you would like to participate."
  },
  {
    "objectID": "posts/JinxiaNiu_hw1.html#reading-in-data-files",
    "href": "posts/JinxiaNiu_hw1.html#reading-in-data-files",
    "title": "Chinese-language Disinformation about gunviolence",
    "section": "Reading in data files",
    "text": "Reading in data files\nThe easiest data source to use - at least initially - is to choose something easily accessible, either from our _data folder provided, or from an online source that is publicly available.\n\n\n\n\n\n\nUsing Other Data\n\n\n\nIf you would like to use a source that you have access to and it is small enough and you don’t mind making it public, you can copy it into the _data file and include in your commit and pull request.\n\n\n\n\n\n\n\n\nUsing Private Data\n\n\n\nIf you would like to use a proprietary source of data, that should be possible using the same process outlined above. There may initially be a few issues. We hope to have this feature working smoothly soon!"
  },
  {
    "objectID": "posts/KrisSmole_challenge_1.html",
    "href": "posts/KrisSmole_challenge_1.html",
    "title": "Challenge_1",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n\n\n\nOverview of Dataset contained in filename railroad_2012_clean_county.csv\nRailroad, as I will call this dataset, contains distinct observations of total employee counts, by counties within US states/territories. The dataset was likely gathered by the railroad company or perhaps one of the regulatory bodies governing the railroad.\n\n\nCode\nrailroad <-read_csv(\"_data/railroad_2012_clean_county.csv\" )\n\n\nThe railroad data observations are for US by state/territory and county within respective state, with count of total employees for that county within that state. Total by number of observations are 2,930, and are in alphabetic order by state/territory, then alphabetic by county within each state/territory.\n\n\nSpecific views and statistics of the observations\n\n\nCode\nselect(railroad, state, county, total_employees)\n\n\n# A tibble: 2,930 × 3\n   state county               total_employees\n   <chr> <chr>                          <dbl>\n 1 AE    APO                                2\n 2 AK    ANCHORAGE                          7\n 3 AK    FAIRBANKS NORTH STAR               2\n 4 AK    JUNEAU                             3\n 5 AK    MATANUSKA-SUSITNA                  2\n 6 AK    SITKA                              1\n 7 AK    SKAGWAY MUNICIPALITY              88\n 8 AL    AUTAUGA                          102\n 9 AL    BALDWIN                          143\n10 AL    BARBOUR                            1\n# … with 2,920 more rows\n\n\nWe can see in the results above, and confirmed below, that this dataset contains a count of rows (2930) and columns (3).\n\n\nCode\ndim(railroad)\n\n\n[1] 2930    3\n\n\nThe dataset represents US States and counties. Specifically, the railroad data inlcudes 53 distinct state names. Since the count of state names is over 50, I conclude that the District of Columbia and US territories are likely included in the data observations.\n\n\nCode\nrailroad%>%\n  select (state) %>%\n  n_distinct(.)\n\n\n[1] 53\n\n\nHow many counties have distinct names within this dataset? The answer indicates that some county names repeat across various states, as the total county names are not = 2930, the total number of observations. Noted for future communications to describe observations by both county and state for clarity.\n\n\nCode\nrailroad%>%\n  select(county)%>%\n  n_distinct(.)\n\n\n[1] 1709\n\n\nWhich counties have the most employees within this set of observations? It appears that Illinois’ Cook County has the highest count of employees, indicating this railroad has significant operations in Cook County, the home of the city of Chicago.\n\n\nCode\narrange(railroad, desc(`total_employees`))\n\n\n# A tibble: 2,930 × 3\n   state county           total_employees\n   <chr> <chr>                      <dbl>\n 1 IL    COOK                        8207\n 2 TX    TARRANT                     4235\n 3 NE    DOUGLAS                     3797\n 4 NY    SUFFOLK                     3685\n 5 VA    INDEPENDENT CITY            3249\n 6 FL    DUVAL                       3073\n 7 CA    SAN BERNARDINO              2888\n 8 CA    LOS ANGELES                 2545\n 9 TX    HARRIS                      2535\n10 NE    LINCOLN                     2289\n# … with 2,920 more rows\n\n\nWhich counties have the fewest employees of this railroad? Numerous counties have only 1 employee per county. When looking at the full dataset, 145 counties have only 1 employee. Future reports to provide breakdowns by designated ranges of employee count (eg: 1-50,50-100, etc.) using yet to be learned coding tools.\n\n\nCode\narrange(railroad, `total_employees`)\n\n\n# A tibble: 2,930 × 3\n   state county   total_employees\n   <chr> <chr>              <dbl>\n 1 AK    SITKA                  1\n 2 AL    BARBOUR                1\n 3 AL    HENRY                  1\n 4 AP    APO                    1\n 5 AR    NEWTON                 1\n 6 CA    MONO                   1\n 7 CO    BENT                   1\n 8 CO    CHEYENNE               1\n 9 CO    COSTILLA               1\n10 CO    DOLORES                1\n# … with 2,920 more rows\n\n\nWhich counties have more than 200 employees? The following list includes only counties with employee counts of 200 or greater, in alphabetic order. Future reports to include lists ranked highest to lowest in addition to alphbetic order by state, county as shown here.\n\n\nCode\nfilter(railroad,`total_employees` >=200)\n\n\n# A tibble: 280 × 3\n   state county    total_employees\n   <chr> <chr>               <dbl>\n 1 AL    JEFFERSON             990\n 2 AL    MOBILE                331\n 3 AR    FAULKNER              289\n 4 AR    JEFFERSON             361\n 5 AR    LONOKE                330\n 6 AR    PULASKI               972\n 7 AR    SALINE                262\n 8 AZ    APACHE                270\n 9 AZ    COCONINO              268\n10 AZ    MARICOPA              462\n# … with 270 more rows\n\n\nThe overall mean count of employees of all counties within all states is 87.2 employees\n\n\nCode\nsummarize(railroad,mean(`total_employees`))\n\n\n# A tibble: 1 × 1\n  `mean(total_employees)`\n                    <dbl>\n1                    87.2\n\n\nThe overall median of employee count of all counties within all states is 21 employees\n\n\nCode\nsummarize(railroad, median(`total_employees`))\n\n\n# A tibble: 1 × 1\n  `median(total_employees)`\n                      <dbl>\n1                        21\n\n\n\n\nConclusion\nFuture reports to contain totals of employees by state, which will require use of yet unknown functions. Combining the state and county fields for each observation will allow the existing data to be totalled by state using specific coding commands. Clean-up of the table results to be pursued. Additionally, graphic visualizations, and geo-graphics to be included in future reports."
  },
  {
    "objectID": "posts/SidPostTemplate.html",
    "href": "posts/SidPostTemplate.html",
    "title": "Blog Post Template",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE)"
  },
  {
    "objectID": "posts/SidPostTemplate.html#instructions",
    "href": "posts/SidPostTemplate.html#instructions",
    "title": "Blog Post Template",
    "section": "Instructions",
    "text": "Instructions\nThis document provides yaml header inforamtion you will need to replicate each week to submit your homework or other blog posts. Please observe the following conventions:\n\nSave your own copy of this template as a blog post in the posts folder, naming it FirstLast_hwX.qmd\nEdit the yaml header to change your author name - use the same name each week\ninclude a description that is reader friendly\nupdate the category list to indicate the type of submission, the data used, the main packages or techniques, your name, or any thing else to make your document easy to find\nedit as a normal qmd/rmd file\n\n\n\nCode\nx <- c(2,3,4,5)\nmean(x)\n\n\n[1] 3.5"
  },
  {
    "objectID": "posts/SidPostTemplate.html#rendering-your-post",
    "href": "posts/SidPostTemplate.html#rendering-your-post",
    "title": "Blog Post Template",
    "section": "Rendering your post",
    "text": "Rendering your post\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code.\n\n\n\n\n\n\nWarning\n\n\n\nBe sure that you have moved your *.qmd file into the posts folder BEFORE you render it, so that all files are stored in the correct location.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nOnly render a single file - don’t try to render the whole website!\n\n\n\n\n\n\n\n\nPilot Student Blogs\n\n\n\nWe are piloting a workflow including individual student websites with direted and limited pull requests back to course blogs. Please let us know if you would like to participate."
  },
  {
    "objectID": "posts/SidPostTemplate.html#reading-in-data-files",
    "href": "posts/SidPostTemplate.html#reading-in-data-files",
    "title": "Blog Post Template",
    "section": "Reading in data files",
    "text": "Reading in data files\nThe easiest data source to use - at least initially - is to choose something easily accessible, either from our _data folder provided, or from an online source that is publicly available.\n\n\n\n\n\n\nUsing Other Data\n\n\n\nIf you would like to use a source that you have access to and it is small enough and you don’t mind making it public, you can copy it into the _data file and include in your commit and pull request.\n\n\n\n\n\n\n\n\nUsing Private Data\n\n\n\nIf you would like to use a proprietary source of data, that should be possible using the same process outlined above. There may initially be a few issues. We hope to have this feature working smoothly soon!"
  },
  {
    "objectID": "posts/NanciKopecky_challenge1.html",
    "href": "posts/NanciKopecky_challenge1.html",
    "title": "Challenge 1",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)"
  },
  {
    "objectID": "posts/NanciKopecky_challenge1.html#challenge-overview",
    "href": "posts/NanciKopecky_challenge1.html#challenge-overview",
    "title": "Challenge 1",
    "section": "Challenge Overview",
    "text": "Challenge Overview\nToday’s challenge is to\n\nread in a dataset, and\ndescribe the dataset using both words and any supporting information (e.g., tables, etc)"
  },
  {
    "objectID": "posts/NanciKopecky_challenge1.html#read-in-the-data",
    "href": "posts/NanciKopecky_challenge1.html#read-in-the-data",
    "title": "Challenge 1",
    "section": "Read in the Data",
    "text": "Read in the Data\nRead in one (or more) of the following data sets, using the correct R package and command.\n\nrailroad_2012_clean_county.csv ⭐\nbirds.csv ⭐⭐\nFAOstat*.csv ⭐⭐\nwild_bird_data.xlsx ⭐⭐⭐\nStateCounty2012.xls ⭐⭐⭐⭐\n\nFind the _data folder, located inside the posts folder. Then you can read in the data, using either one of the readr standard tidy read commands, or a specialized package such as readxl. ###Reading in Railroad data I had to set the working directory in order for this code to work.\n\n\nCode\nlibrary(readr)\nrailroad<-read.csv(file = \"_data/railroad_2012_clean_county.csv\",\n                header=TRUE,\n                sep = \",\"\n                )\n\n\nAdd any comments or documentation as needed. More challenging data sets may require additional code chunks and documentation.\nMy comment is that I was able to read in the data after I set the working directory. I selected Session, Set Working Directly, then Choose Directly."
  },
  {
    "objectID": "posts/NanciKopecky_challenge1.html#describe-the-data",
    "href": "posts/NanciKopecky_challenge1.html#describe-the-data",
    "title": "Challenge 1",
    "section": "Describe the data",
    "text": "Describe the data\nUsing a combination of words and results of R commands, can you provide a high level description of the data? Describe as efficiently as possible where/how the data was (likely) gathered, indicate the cases and variables (both the interpretation and any details you deem useful to the reader to fully understand your chosen data).\n\n\n\nExploring some commands.\n\n\nCode\nhead(railroad)\n\n\n  state               county total_employees\n1    AE                  APO               2\n2    AK            ANCHORAGE               7\n3    AK FAIRBANKS NORTH STAR               2\n4    AK               JUNEAU               3\n5    AK    MATANUSKA-SUSITNA               2\n6    AK                SITKA               1\n\n\nCode\nnrow(railroad)\n\n\n[1] 2930\n\n\nCode\nncol(railroad)\n\n\n[1] 3\n\n\nCode\nrailroad$total_employees\n\n\n   [1]    2    7    2    3    2    1   88  102  143    1   25  154   13   29\n  [15]   45   13    9   72    7   26   10    7   14  199   11    5   12    5\n  [29]  129   11  122   33  116   47   78    3   40    8    7    8    1   46\n  [43]   55  990   25  117   11   46    7    7    6   29   16   17   29  331\n  [57]   43  102   42    4   24   19   39   38  158  162    9   42   19   60\n  [71]  192   11   11   45    1   11   18   25   35    5    8    5    3   40\n  [85]   13    8   79    5   19   61   55   48   30   12   15   34  289    5\n  [99]   54   68  167   15    6   79   37   32    4   13  361    7   11   32\n [113]    3   54   22    4  330    7    8   10   18    7    2   15    1   15\n [127]   22   11   10    4   17   31    5  972   19  262    3   43   50   20\n [141]   16    2   20    2   46  102    9  270   60  268   37   48    3   10\n [155]  462  407  510  749  154   18   63   94  346    9   69   30    2  348\n [169]  103  341    4    2   65  500   21    2   14 2545   39   12    4    6\n [183]   59    3    1   29   17   36  460  539   84 1567  738   13 2888  206\n [197]   61  474   98   80   36  244   44   69    2   83  221   38  195   54\n [211]   10    2   97    9   68   62   88  553   10  128    2    3    1   71\n [225]   42    6    1    2    6    1    7    3   16  503    1  112   10  129\n [239]   10   28   13    5   10    1   10  267    3    2    1    2  159   77\n [253]    5  137  252    6    2   10   34  141   12    4    1   26  526   10\n [267]   30    2   16    6    6    3  223    3  486  113   57  137 1561  146\n [281]   26   66  279  158 1275   62   22   81   45   20   33  294    1   10\n [295]   23  636   14   35    9    2 3073  124   29    2    5    1    5    6\n [309]   11    2    1   30   15  387    6   12   12    3    5   77   43   21\n [323]    6    1    1   23   48    9  346    7  242    6   12  101   30  155\n [337]   71   73  238   34   48   18   92  449   56   36   11    5   11  175\n [351]    4    3   13   24   22   56   11    1   32  114  120   12  304   17\n [365]  112    4   95   42   17   23    3   41    4  130  120   35  281    4\n [379]    4  129    9    2  194   16  661   85    5   89    4  116    6   12\n [393]   31    3   11  315    9    6   43  282    6  130    1   33    5    9\n [407]  177   31   40    6  878    6    1   40   33    9    5  372   12   55\n [421]    4   21   37   10    4  269   89   24   38   13   12   11   17    4\n [435]   42   19   10   11   22   28   15    4   87    2    4    6    7   32\n [449]    7   78    2    6   63    4    2    6   84    9    7    3  200   47\n [463]   16  271   17   65    3   10    4   12  206   60    7    7    2   33\n [477]    8    3    9   13    4   11    5    9   30   13   28    1   53    7\n [491]   12   18   54  117  413    8   34   94    3    3   22   15    7   22\n [505]   11    1    2    1    5    7   18   13    1   39  116  206   17   35\n [519]    2   23   16   38   13   19  157    2    7   16    2   24  140    8\n [533]   46   11    9   18  179    2   71    6   23   34   11   15   19    9\n [547]   10   31   10   20  102   26    1   17    1   13   26   24   10   37\n [561]   14    3    5  204  146    7    5    2   12    3   14   90   96   15\n [575]   12   14   19   29    1    1   13    2   14    5  235  609    7   13\n [589]   10  137   12    1   94   20    3   70    8   42   37   10    5   65\n [603]    6    1  155   12   36   81    2  538   71   10   47    3   40   44\n [617]   44  168   12   16    1    1    9   20    1   26    4    4    6   11\n [631]  205   11    2    6   32   13    8    7   23   12   63    1   21  116\n [645]    2   23   44    7   35    4   96   66  131  104   24   14   38   42\n [659] 8207   12    9   46  119   60  837   45   12    4   33   32   23   39\n [673]   56    7   13   83   19  127    1  100   74   87   37    4   72   14\n [687]   14   26  577  289  122  885  132  340    6   40   12   16  425   79\n [701]  427  261   10   23    9   53  273   45   10   18  122   38   43   49\n [715]   75  130   20   54   50    1    7    5   68    9   94   11  114   32\n [729]   15   45  495    5   33   71   41  178   14  188   29   18   16  124\n [743] 1784   53   76   14   11  536   12    6   24   22    7   26   35  131\n [757]   28   28   21   35   50    7  118  125   35  306   19   85   21   10\n [771]    8  153   39   72   63   60  147  229   35   34   66   11   80   18\n [785]   10   13  165   16   30   16 1999  360   24   16   70  703   40    3\n [799]  146   27   30  105   18   59    5    7   19   10    7   27  550   41\n [813]   11   41   23    8    7   10   43   23  258   58   45   34  118   14\n [827]    7  221   23  103   30    8   82   29   12   39   23   38   16   12\n [841]   42   11   22   47   14   76   11    1   38    5   14   10    1   94\n [855]  205    3  138   24  126    4    7   12    3    9   22   72   24    1\n [869]    3    3    1   14  153   19    4   56  122    1 1286   12    1   88\n [883]  232    2   31    6   91   46  233   34    5  113    2  111   54   22\n [897]   16    2   73    1   12    1   25   17   34    2   67    2    7   30\n [911]    9   10    1  107    3  325   12  856    9    2    3    1    3  168\n [925]    3    2   21    9   22    2    4    7  415    1    5    5    7    5\n [939]    3   27  236    8  232   62   11   36   14  125    1   29    4   79\n [953]    7   19   54   18   15    6    7    1    1   31    5    1   42   58\n [967]    9   84    5    4    8    8   91   24   11    4  483    3   67   44\n [981]   15    6   48   24    3  133    4  413   13   50  244   16   38    7\n [995]  113   97    8    3   22   55  113   11   16    6   47    1    7   22\n[1009]   16    8   84    7    5   28    1   55    1    4    5    1   22   59\n[1023]   11   16   35    3    2   31   39  231    6  104    2   32    4    5\n[1037]   15   33    1   22    2   15    3    4    7   12    3    2   10  322\n[1051]    3    5   13   19  103    5   37   43   21  285  546  280    7    1\n[1065]    1   31    3   40  285    1   11   11    4   25   25   86   20  368\n[1079]    6    5  124   10   16   78   10   19   22  240  128   17   67  158\n[1093]    6    2    8   35   46   11   38   91   31    2  128  105    1   14\n[1107]    8    5   42   20   68   73    3    5    2   44   50  232  314  113\n[1121]  202   68  673  386  429  558  310  509  406  415  103    8  118  393\n[1135]  112    8  157   53  248   79  722    3  302  809   22    1   94    2\n[1149]  127   12    6   22   57   71    2    3  109    5    7   36  117   75\n[1163]    8   67   11   17   47    1    8   27    3   19    4   16   58    2\n[1177]  136   13  164   89    2    8    5   10    1  188    7   42    1  195\n[1191]    4    3    4    5   17    6    9   46   32   13    3    5   77   58\n[1205]    3  149    1   36    3   70   33    2    2  170   12  137   17    5\n[1219]   14    5  266   17   24   15  265    1    6   11    2    1    1   40\n[1233]    1    2   80   14   13  100  109   42   38   27   63  849    5   19\n[1247]  346   62   10   20   10   59   25  181   41   20    6   91  175    9\n[1261]    4  143  348    1   44    8    4   24   35    3  651   42   14   57\n[1275]   37    7   10  157    4   43    2   68    6   27    4   10    7   13\n[1289]    3   46   32   34   43   20    3    6    6    9   18   54   62   35\n[1303]    5  106   43  579   10    9   13   37    9    4   72  148   11  595\n[1317]  100   16    9   16   28    2   13    9   49  207   32   34   26   62\n[1331]    5   21   17    5   25   17   26   12   29   12   52  150   84   38\n[1345]   15   11   86   23   20  235   10   50  112   29  681   97   46   60\n[1359]   17   19    8   21   36    2    1   24   54   14    5  362   23   19\n[1373]   20    3   16    7   87  226   13 2055  127  436   42   16   18   74\n[1387]   64   20   18  140   44   47   30    1   93    5    9   15    1   24\n[1401]   24    9   24   10   38    7  132   12    5    3   29   95   18   33\n[1415]   98   38    5    1   23  138  126    5   48   27   27    8    1  126\n[1429]   10   12  166    8  202  316   47   20    6   19   34   25    8   50\n[1443]   38   86    3   40    3   45   16   33   12   14   11    6    3   15\n[1457]   10    1   16    8  341   64   12   21    2   15   57   46  130   23\n[1471]    3    1    7   42   10    4   10    6    5   27  169   15    6   23\n[1485]    1   46   79   45   24   50   65   15    3   47    8   10   13   67\n[1499]   11   56    3    1    5  104   12    1   15    8    2    3   36    8\n[1513]   10    3    8    5   49    4   18    6    5   16   10    7    8    5\n[1527]   32    4   40  199    9   61    2  301   18    4   11  367   30   29\n[1541]    2    8  513    8    2   46   83    9   31    1    1    1   14  362\n[1555]    3   64    9   25    3    9   11   49   26    9   84   37    7   20\n[1569]   52    7    5   28    2  143    1    7  525   14   10    1   12    3\n[1583]    4    4    7   22   94   15   84    5   10    5    7   22    3    8\n[1597]    2    1   12   17   14   39   29    3   90   28    4   24    7   77\n[1611]    5   55    6    2    8   78   36   15   21   32    3    4   48    8\n[1625]   56    8    5   19   66    4   26  224   13   22   41  205   45   15\n[1639]    4   15    1   16   18    2    2   19    5   18  291  122   12  228\n[1653]   30    5   30   49    9   30    3    4   50    4  322    6    6    1\n[1667]   15    1   49    6   23    2   25    2    6    1    7  317  373    2\n[1681]   11   12    1    7    2   14    4  173    5    2    1    9    5    2\n[1695]   78   10    1   34  191   14    6    2    4    9   14   70    8   58\n[1709]    6    3    8    1    2   34   48   11   76  407  101   25   77    2\n[1723]    2    8    2    2 1168    1  107    9   40  192    8    2    1   68\n[1737]   13    4    4   82   35  120  142   13    5   78 3797    5   13    3\n[1751]   30   18  152   21    9    8    3  135   14    4    3   15    3   17\n[1765]   21   42   30    6   98   24    9 1619 2289   35    1   45   19   14\n[1779]  112    1   12    8   71    7   20    7    7   92    8  124   66    1\n[1793]   41  840  123  614  114   49   18    1   11   22    5    1   13   75\n[1807]    3    5   18    2   12   28   19    7  136    9  146   27    7   58\n[1821]  513  464  427   19   39 1097  270  871   68  361  955  862  296  589\n[1835]  231   30  148  178  738  115  227    4   14   27   25  431    7   91\n[1849]   43   13    8   11    4    7   41  240   45   42    2   58   56    6\n[1863]   80   26    3   12   29    5  401    5  269   77   47    8    5   26\n[1877]   42   12    5    1  249  629   55  648  141   72   36   57   21   39\n[1891]   24  126   11   25 1157  784   27   11   20   46  196   48   19  970\n[1905]    5   71   43  131   36 2076  373  119   72  184   33  342   11   91\n[1919]   89  317 1470  358  177   89  233  149   43    7   13   79   99 3685\n[1933]   14   32    8  211   26   60   46 1040   50    6   24   92   56  270\n[1947]   21   23   22   14  220   25   28   23   68   25  211   87  112  552\n[1961]   16   33   58  213   53   18  359   60   19   29   19   16  278   71\n[1975]   22   26   38   15    9    4  674   14  108   17  114  305   49   54\n[1989]  280  842   20  176   60  117   20    8   24    4   83    3   21   29\n[2003]    3  151   18   12   40   39   51   12   58  251   40  129  451  175\n[2017]   21  335  140  121  133   54   16    6   69   22   65   42  316   35\n[2031]    2    5    4    1   11    7   49   24   59    8    6   32   41    5\n[2045]   15    3   17   75   38   14    2    7  161   11   55   12    5    1\n[2059]    8    9    3    5    8   66    7    2   43  176   18   19   11    5\n[2073]   29   19   27   18   18    7  127   10   34    7  193   34    1   14\n[2087]   11    9   23   37   21   11   72    6   48    9    7  377   19   31\n[2101]    6   20   23   37   15  127    4   48   10    8   53   39    2    2\n[2115]   14   30   10    8  228    4  229    4  103   10   85   39  349   11\n[2129]    2    7  467  196    6   50   87   38   39  760   39  566  138  195\n[2143]  910   38 1106  136  420    4  121   32  308   22  120   39    3   67\n[2157]  299  357  815    7  140  291   64    3   29   47   36   67   67  109\n[2171]  350  173   70  145   85   58    8   84   53  207  532    3  229  102\n[2185]  169 1649   88    5  131   26  149   84   15   19   16   10  195   51\n[2199]  392   17  260    8  102   11  318   48  124  193    1   34    6    9\n[2213]   17   94    2  148    9   15   24   18   29   53   74  139   17   22\n[2227]  220   29  139   94   25   42    7   26   19   20    4  118   22   19\n[2241]   20   28    5   25   48   87    5  124   29   19   22   72    1   82\n[2255]    2    1   34  127    5    4    1    1    5   13   60    6    4    3\n[2269]    2    1    9  167    5    3    6    3    9    1   17    1    1   13\n[2283]    3   19   10    1    2   69    1  106    2   49    1    1   10    8\n[2297]    2    5    4    1    5   52    6    5   45   12   24   10  128   72\n[2311]   57    8   57   21   16    3   32   37   12   16   14  162    1    6\n[2325]   64   18   30    5   36   25   10   53   43   59   62  429    2   14\n[2339]   10   57    4   14   22   16   24    2   60    1  458    2   44   42\n[2353]    6    4   26   22  115   40  111  114   17   10   46   27   60   37\n[2367]    1    2    2   41    3   70   44   78  171   45   11   51  621    7\n[2381]    2   72   88   45    2  230   23    3    6  164    3   39    3   77\n[2395]   74  241    3   53    6    8   12   64   35    5   15  102    1    9\n[2409]  413  950    3   17   64  259   55   14    3   39   21    6   25    7\n[2423]   12  119   14   21   54    9   57   17   11  159    4   16  132   15\n[2437]    1   56   87    1    2   13  130  406    7    2  394    6    2    1\n[2451]    1    1   16   20    1  863  125   20   20   19   26    2    2    1\n[2465]  258   87   20  283    2    2    5   42   22  151  154    9   69   10\n[2479]    7    2    1    8  141 2535   98    9   33   37   39   78    7  102\n[2493]   22   21   75    7   32   37   33    8   30    2  244    4   11  429\n[2507]    7    3   49   10    5   35   20    1   14   26    4    9   14   12\n[2521]   31  144   24    4    3  292    2    8   14    2    2   12   71    4\n[2535]  148   56   30   37    4   11   17  474   49   16   17   37   25   14\n[2549]   34   82    8  105   31   21  303   28    2   27  883    9    5   72\n[2563]    2    1    3    2   30   32   10   13    5    3   24   38    5    9\n[2577]   17    1  127    5    2    1    1   13 4235   86   15    5   10   52\n[2591]   74    6   29   41    2   35   93   47   60   38   21    5    4  291\n[2605]   13    4  120    4    1   77   75  156   60    2    2    4   85   58\n[2619]   23   52    2  337   10    8    1   48   25    8   18    5  580    8\n[2633]    5    1   12   52   10  186    7   16  360    4   28  108   10   28\n[2647]   16   63   12   12  395   14  288    9   25   32   43   46    3    6\n[2661]   30  228    2   31   24    5   15   23    4  225   24   43    9  202\n[2675]   24   41   14   15    4    2   10  117  128   24 3249   36    6    6\n[2689]    6   29    1   32   42   31   43    3    3    7    2  101   12   29\n[2703]    7  106   35   70    9   49   28   34   13  110   33    9    1  193\n[2717]   16   40  172   30   13   15   26   46   37   10  197   22   26    7\n[2731]  114   39   20    8    8    3   40    4   83    5    4    9   13   59\n[2745]    3   10   10   15   17  294   79    8  850    2  151    2    1  148\n[2759]    1   22   29   39    4 1039   60   15   63   73   12   20   15    6\n[2773]   21  614    2   57   14  506  757   34   94    3   45   45    9   56\n[2787]   29    7   20   11   76   16    6    8   35    9  106   24   74   63\n[2801]    2  465   13   78  275   16   33   11   17    5    4   19   27   14\n[2815]  111    4  339    7    7   23   15   23   12   36  188   51   16   13\n[2829]   57    6   12   43   23  240   10  100  138   21   29   14    9    9\n[2843]  168   15   54   48    5   47   23   37   96   34   13   95  119   33\n[2857]  108   50   22   19  406    4    4   30    1    7   75   37   37    7\n[2871]   51   22   56  130    3  107   61   16   26   34   43  387  223  168\n[2885]   19   35   33    6   25    3   13   35   83   98   21    7    3  153\n[2899]   94    2    2    5  217    5    9    7  108   63   90   70  386  168\n[2913]  211   33   42  244    4   18  737   25   92   51   29  129  252    3\n[2927]  196   49   10   37\n\n\nCode\nmean(railroad$total_employees)\n\n\n[1] 87.17816\n\n\nCode\nrailroad %>%\n  summarize(\n    mean_employees=mean(total_employees),\n    median_employees=median(total_employees),\n    sd_employees=sd(total_employees))\n\n\n  mean_employees median_employees sd_employees\n1       87.17816               21     283.6359\n\n\nThe railroad data has 3 variables (State, County, Total Employees) and 2930 observations. The code below is exploring some commands.\nThe mean is 87 employees and the median is 21, wow, there must be some extreme values! And the standard deviation is 284.\n\nVisualize the Data\nI was wondering about the extreme values for the railroad county employees. The box plot shows the outliers and the histogram shows the right tail.\n\n\nCode\nboxplot(railroad$total_employees)\n\n\n\n\n\n\n\nCode\nhist(railroad$total_employees)"
  },
  {
    "objectID": "posts/NehaJhurani_challenge1.html",
    "href": "posts/NehaJhurani_challenge1.html",
    "title": "Read and describe dataset",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE)"
  },
  {
    "objectID": "posts/NehaJhurani_challenge1.html#analysing-birds-data",
    "href": "posts/NehaJhurani_challenge1.html#analysing-birds-data",
    "title": "Read and describe dataset",
    "section": "Analysing birds data",
    "text": "Analysing birds data\n\n\nCode\nlibrary(readr)\n\n#reading birds csv data\nbirds_data <- read_csv(\"_data/birds.csv\")\n\n\nRows: 30977 Columns: 14\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): Domain Code, Domain, Area, Element, Item, Unit, Flag, Flag Description\ndbl (6): Area Code, Element Code, Item Code, Year Code, Year, Value\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\n#visualizing birds data in spreadsheet style\nview(birds_data)\n\n#getting the number of rows and columns in the csv\ndim(birds_data)\n\n\n[1] 30977    14\n\n\nCode\n#viewing the last few rows of the birds data\ntail(birds_data)\n\n\n# A tibble: 6 × 14\n  Domai…¹ Domain Area …² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year Unit \n  <chr>   <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl> <chr>\n1 QA      Live …    5504 Poly…    5112 Stocks     1068 Ducks    2013  2013 1000…\n2 QA      Live …    5504 Poly…    5112 Stocks     1068 Ducks    2014  2014 1000…\n3 QA      Live …    5504 Poly…    5112 Stocks     1068 Ducks    2015  2015 1000…\n4 QA      Live …    5504 Poly…    5112 Stocks     1068 Ducks    2016  2016 1000…\n5 QA      Live …    5504 Poly…    5112 Stocks     1068 Ducks    2017  2017 1000…\n6 QA      Live …    5504 Poly…    5112 Stocks     1068 Ducks    2018  2018 1000…\n# … with 3 more variables: Value <dbl>, Flag <chr>, `Flag Description` <chr>,\n#   and abbreviated variable names ¹​`Domain Code`, ²​`Area Code`,\n#   ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n\n\nCode\n#extracting all the column names\ncolnames(birds_data)\n\n\n [1] \"Domain Code\"      \"Domain\"           \"Area Code\"        \"Area\"            \n [5] \"Element Code\"     \"Element\"          \"Item Code\"        \"Item\"            \n [9] \"Year Code\"        \"Year\"             \"Unit\"             \"Value\"           \n[13] \"Flag\"             \"Flag Description\"\n\n\nCode\n#selecting only the unique values of Item column\nunique(select(birds_data, c(\"Item\")))\n\n\n# A tibble: 5 × 1\n  Item                  \n  <chr>                 \n1 Chickens              \n2 Ducks                 \n3 Geese and guinea fowls\n4 Turkeys               \n5 Pigeons, other birds  \n\n\nCode\n#filtering all the rows which has the Year as 2018\nfilter(birds_data, Year == \"2018\")\n\n\n# A tibble: 577 × 14\n   Domain Cod…¹ Domain Area …² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year\n   <chr>        <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl>\n 1 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    2018  2018\n 2 QA           Live …       3 Alba…    5112 Stocks     1057 Chic…    2018  2018\n 3 QA           Live …       3 Alba…    5112 Stocks     1068 Ducks    2018  2018\n 4 QA           Live …       3 Alba…    5112 Stocks     1072 Gees…    2018  2018\n 5 QA           Live …       3 Alba…    5112 Stocks     1079 Turk…    2018  2018\n 6 QA           Live …       4 Alge…    5112 Stocks     1057 Chic…    2018  2018\n 7 QA           Live …       4 Alge…    5112 Stocks     1068 Ducks    2018  2018\n 8 QA           Live …       4 Alge…    5112 Stocks     1072 Gees…    2018  2018\n 9 QA           Live …       4 Alge…    5112 Stocks     1079 Turk…    2018  2018\n10 QA           Live …       5 Amer…    5112 Stocks     1057 Chic…    2018  2018\n# … with 567 more rows, 4 more variables: Unit <chr>, Value <dbl>, Flag <chr>,\n#   `Flag Description` <chr>, and abbreviated variable names ¹​`Domain Code`,\n#   ²​`Area Code`, ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n\n\nCode\n#finding the mean value for each item in a specific area during a specific year\nbirds_data %>% group_by(Year,Area,Item) %>% summarise(mean(Value), .groups = 'drop')\n\n\n# A tibble: 30,977 × 4\n    Year Area        Item                   `mean(Value)`\n   <dbl> <chr>       <chr>                          <dbl>\n 1  1961 Afghanistan Chickens                        4700\n 2  1961 Africa      Chickens                      274201\n 3  1961 Africa      Ducks                           6231\n 4  1961 Africa      Geese and guinea fowls          3882\n 5  1961 Africa      Pigeons, other birds            5800\n 6  1961 Africa      Turkeys                         1213\n 7  1961 Albania     Chickens                        1580\n 8  1961 Albania     Ducks                             NA\n 9  1961 Albania     Geese and guinea fowls            NA\n10  1961 Albania     Turkeys                           NA\n# … with 30,967 more rows\n\n\nCode\n#summarizing the values in each column of birds data, It gives us (minimum, 1st quartile, median, mean, 3rd quartile, maximum, number of NA's present) for a column that has numerical values and gives (length, class, mode) for a column that has character values\nsummary(birds_data)\n\n\n Domain Code           Domain            Area Code        Area          \n Length:30977       Length:30977       Min.   :   1   Length:30977      \n Class :character   Class :character   1st Qu.:  79   Class :character  \n Mode  :character   Mode  :character   Median : 156   Mode  :character  \n                                       Mean   :1202                     \n                                       3rd Qu.: 231                     \n                                       Max.   :5504                     \n                                                                        \n  Element Code    Element            Item Code        Item          \n Min.   :5112   Length:30977       Min.   :1057   Length:30977      \n 1st Qu.:5112   Class :character   1st Qu.:1057   Class :character  \n Median :5112   Mode  :character   Median :1068   Mode  :character  \n Mean   :5112                      Mean   :1066                     \n 3rd Qu.:5112                      3rd Qu.:1072                     \n Max.   :5112                      Max.   :1083                     \n                                                                    \n   Year Code         Year          Unit               Value         \n Min.   :1961   Min.   :1961   Length:30977       Min.   :       0  \n 1st Qu.:1976   1st Qu.:1976   Class :character   1st Qu.:     171  \n Median :1992   Median :1992   Mode  :character   Median :    1800  \n Mean   :1991   Mean   :1991                      Mean   :   99411  \n 3rd Qu.:2005   3rd Qu.:2005                      3rd Qu.:   15404  \n Max.   :2018   Max.   :2018                      Max.   :23707134  \n                                                  NA's   :1036      \n     Flag           Flag Description  \n Length:30977       Length:30977      \n Class :character   Class :character  \n Mode  :character   Mode  :character"
  },
  {
    "objectID": "posts/NehaJhurani_challenge1.html#analysing-wild-birds-data",
    "href": "posts/NehaJhurani_challenge1.html#analysing-wild-birds-data",
    "title": "Read and describe dataset",
    "section": "Analysing wild birds data",
    "text": "Analysing wild birds data\n\n\nCode\nlibrary(readxl)\n\n#reading wild_bird_data xlsx\nwild_bird_data <- read_xlsx(\"_data/wild_bird_data.xlsx\")\n\n#visualizing wild bird data in spreadsheet style\nview(wild_bird_data)\n\n#extracting the number of rows and columns in the excel\ndim(wild_bird_data)\n\n\n[1] 147   2\n\n\nCode\n#viewing the last 10 rows of wild bird data\ntail(wild_bird_data, n = 10)\n\n\n# A tibble: 10 × 2\n   Reference        `Taken from Figure 1 of Nee et al.`\n   <chr>            <chr>                              \n 1 4450.50815600577 4788.66353161336                   \n 2 4223.72945322751 433.148027881688                   \n 3 2320.09569921356 151.097182999144                   \n 4 1064.32682601983 106.902249798449                   \n 5 1137.96479906865 53.9362035620238                   \n 6 1003.03939853867 22.3522084608936                   \n 7 1042.06074444654 1758.76989729032                   \n 8 1106.07510035687 3974.59483110465                   \n 9 1368.36501582366 9797.18806953683                   \n10 2053.74863827143 20660.849081157                    \n\n\nCode\n#extracting all the column names\ncolnames(wild_bird_data)\n\n\n[1] \"Reference\"                         \"Taken from Figure 1 of Nee et al.\"\n\n\nCode\n#extracting a subset of wild bird data\nwild_bird_data[4:12,]\n\n\n# A tibble: 9 × 2\n  Reference        `Taken from Figure 1 of Nee et al.`\n  <chr>            <chr>                              \n1 8.63858738018464 2592996.86778979                   \n2 10.6897349302105 3524193.2266336                    \n3 7.41722577905587 389806.168891807                   \n4 9.1169347252776  604765.97978904                    \n5 8.03684333000353 192360.511579436                   \n6 8.70473119796067 250452.449623033                   \n7 8.89032317828959 16997.4156415239                   \n8 9.51590845877281 595.09393677964                    \n9 10.9430490453536 864.665387886239"
  },
  {
    "objectID": "posts/challenge1_instructions.html",
    "href": "posts/challenge1_instructions.html",
    "title": "Challenge 1 Instructions",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)"
  },
  {
    "objectID": "posts/challenge1_instructions.html#challenge-overview",
    "href": "posts/challenge1_instructions.html#challenge-overview",
    "title": "Challenge 1 Instructions",
    "section": "Challenge Overview",
    "text": "Challenge Overview\nToday’s challenge is to\n\nread in a dataset, and\ndescribe the dataset using both words and any supporting information (e.g., tables, etc)"
  },
  {
    "objectID": "posts/challenge1_instructions.html#read-in-the-data",
    "href": "posts/challenge1_instructions.html#read-in-the-data",
    "title": "Challenge 1 Instructions",
    "section": "Read in the Data",
    "text": "Read in the Data\nRead in one (or more) of the following data sets, using the correct R package and command.\n\nrailroad_2012_clean_county.csv ⭐\nbirds.csv ⭐⭐\nFAOstat*.csv ⭐⭐\nwild_bird_data.xlsx ⭐⭐⭐\nStateCounty2012.xls ⭐⭐⭐⭐\n\nFind the _data folder, located inside the posts folder. Then you can read in the data, using either one of the readr standard tidy read commands, or a specialized package such as readxl.\n\n\n\nAdd any comments or documentation as needed. More challenging data sets may require additional code chunks and documentation."
  },
  {
    "objectID": "posts/challenge1_instructions.html#describe-the-data",
    "href": "posts/challenge1_instructions.html#describe-the-data",
    "title": "Challenge 1 Instructions",
    "section": "Describe the data",
    "text": "Describe the data\nUsing a combination of words and results of R commands, can you provide a high level description of the data? Describe as efficiently as possible where/how the data was (likely) gathered, indicate the cases and variables (both the interpretation and any details you deem useful to the reader to fully understand your chosen data)."
  },
  {
    "objectID": "posts/SusmitaMadineni_challenge1.html",
    "href": "posts/SusmitaMadineni_challenge1.html",
    "title": "Reading datasets: railroad_2012_clean_county, birds, wild_birds_data",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE)"
  },
  {
    "objectID": "posts/SusmitaMadineni_challenge1.html#describing-the-railroad_2012_clean_county-data",
    "href": "posts/SusmitaMadineni_challenge1.html#describing-the-railroad_2012_clean_county-data",
    "title": "Reading datasets: railroad_2012_clean_county, birds, wild_birds_data",
    "section": "Describing the railroad_2012_clean_county data",
    "text": "Describing the railroad_2012_clean_county data\nThis dataset gives the information about rail roads in different states, along with total number of employees and county information in the year 2012. It has mainly 3 columns - “state”, “county”, “total_employees”. The dataset has 2930 rows and 3 columns.The reader can easily understand the data by looking at the first few rows.\n\n\nCode\n# Reading railroad_2012_clean_county.csv dataset\n\nlibrary(readr)\nrailroad <- read_csv(\"_data/railroad_2012_clean_county.csv\")\n\n\nRows: 2930 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): state, county\ndbl (1): total_employees\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nview(railroad)\n# Preview the first few rows of the dataset\nhead(railroad)\n\n\n# A tibble: 6 × 3\n  state county               total_employees\n  <chr> <chr>                          <dbl>\n1 AE    APO                                2\n2 AK    ANCHORAGE                          7\n3 AK    FAIRBANKS NORTH STAR               2\n4 AK    JUNEAU                             3\n5 AK    MATANUSKA-SUSITNA                  2\n6 AK    SITKA                              1\n\n\nCode\n# Understanding the dimensions of the dataset \ndim(railroad)\n\n\n[1] 2930    3\n\n\nCode\n# Identifying the column names of the dataset \ncolnames(railroad)\n\n\n[1] \"state\"           \"county\"          \"total_employees\"\n\n\nCode\n#Making a proportional table for state in the dataset\nprop.table(table(select(railroad, state)))\n\n\nstate\n          AE           AK           AL           AP           AR           AZ \n0.0003412969 0.0020477816 0.0228668942 0.0003412969 0.0245733788 0.0051194539 \n          CA           CO           CT           DC           DE           FL \n0.0187713311 0.0194539249 0.0027303754 0.0003412969 0.0010238908 0.0228668942 \n          GA           HI           IA           ID           IL           IN \n0.0518771331 0.0010238908 0.0337883959 0.0122866894 0.0351535836 0.0313993174 \n          KS           KY           LA           MA           MD           ME \n0.0324232082 0.0406143345 0.0215017065 0.0040955631 0.0081911263 0.0054607509 \n          MI           MN           MO           MS           MT           NC \n0.0266211604 0.0293515358 0.0392491468 0.0266211604 0.0180887372 0.0320819113 \n          ND           NE           NH           NJ           NM           NV \n0.0167235495 0.0303754266 0.0034129693 0.0071672355 0.0098976109 0.0040955631 \n          NY           OH           OK           OR           PA           RI \n0.0208191126 0.0300341297 0.0249146758 0.0112627986 0.0221843003 0.0017064846 \n          SC           SD           TN           TX           UT           VA \n0.0156996587 0.0177474403 0.0310580205 0.0754266212 0.0085324232 0.0313993174 \n          VT           WA           WI           WV           WY \n0.0047781570 0.0133105802 0.0235494881 0.0180887372 0.0075085324 \n\n\nCode\n#Filter county APO from the dataset \nfilter(railroad, county == \"APO\")\n\n\n# A tibble: 2 × 3\n  state county total_employees\n  <chr> <chr>            <dbl>\n1 AE    APO                  2\n2 AP    APO                  1\n\n\nCode\n#Filter the rows that has total_employees below 3 and above 100\nfilter(railroad, `total_employees` < 3 | `total_employees` > 100)\n\n\n# A tibble: 809 × 3\n   state county               total_employees\n   <chr> <chr>                          <dbl>\n 1 AE    APO                                2\n 2 AK    FAIRBANKS NORTH STAR               2\n 3 AK    MATANUSKA-SUSITNA                  2\n 4 AK    SITKA                              1\n 5 AL    AUTAUGA                          102\n 6 AL    BALDWIN                          143\n 7 AL    BARBOUR                            1\n 8 AL    BLOUNT                           154\n 9 AL    COLBERT                          199\n10 AL    CULLMAN                          129\n# … with 799 more rows\n\n\nCode\n#Arranging railroad based on total_employees and selecting state, county columns,grouping them based on state and then slicing out first 10 rows (with piping)\nrailroad %>%\n  arrange(desc(total_employees)) %>%\n  select(state,county)%>%\n  group_by(state) %>%\n  slice(1:10)\n\n\n# A tibble: 478 × 2\n# Groups:   state [53]\n   state county              \n   <chr> <chr>               \n 1 AE    APO                 \n 2 AK    SKAGWAY MUNICIPALITY\n 3 AK    ANCHORAGE           \n 4 AK    JUNEAU              \n 5 AK    FAIRBANKS NORTH STAR\n 6 AK    MATANUSKA-SUSITNA   \n 7 AK    SITKA               \n 8 AL    JEFFERSON           \n 9 AL    MOBILE              \n10 AL    COLBERT             \n# … with 468 more rows"
  },
  {
    "objectID": "posts/SusmitaMadineni_challenge1.html#describing-the-birds-dataset",
    "href": "posts/SusmitaMadineni_challenge1.html#describing-the-birds-dataset",
    "title": "Reading datasets: railroad_2012_clean_county, birds, wild_birds_data",
    "section": "Describing the birds dataset",
    "text": "Describing the birds dataset\nThis dataset gives the information about value of 1000 heads of the birds like chicken, ducks, turkeys,etc in different countries across the world in different years(from 1961 to 2018). It has 14 columns - “Domain Code”, “Domain”, “Area Code”, “Area”, “Element Code”, “Element”,“Item Code”, “Item”,“Year Code”, “Year”, “Unit”, “Value”, “Flag”, “Flag Description”. The dataset has 30977 rows and 14 columns.The reader can understand the data by looking at the first few rows.\n\n\nCode\n# Reading birds.csv dataset\n\nlibrary(readr)\nbirds_data <- read_csv(\"_data/birds.csv\")\n\n\nRows: 30977 Columns: 14\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): Domain Code, Domain, Area, Element, Item, Unit, Flag, Flag Description\ndbl (6): Area Code, Element Code, Item Code, Year Code, Year, Value\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nview(birds_data)\n# Preview the first few rows of the dataset\nhead(birds_data)\n\n\n# A tibble: 6 × 14\n  Domai…¹ Domain Area …² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year Unit \n  <chr>   <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl> <chr>\n1 QA      Live …       2 Afgh…    5112 Stocks     1057 Chic…    1961  1961 1000…\n2 QA      Live …       2 Afgh…    5112 Stocks     1057 Chic…    1962  1962 1000…\n3 QA      Live …       2 Afgh…    5112 Stocks     1057 Chic…    1963  1963 1000…\n4 QA      Live …       2 Afgh…    5112 Stocks     1057 Chic…    1964  1964 1000…\n5 QA      Live …       2 Afgh…    5112 Stocks     1057 Chic…    1965  1965 1000…\n6 QA      Live …       2 Afgh…    5112 Stocks     1057 Chic…    1966  1966 1000…\n# … with 3 more variables: Value <dbl>, Flag <chr>, `Flag Description` <chr>,\n#   and abbreviated variable names ¹​`Domain Code`, ²​`Area Code`,\n#   ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n\n\nCode\n# Understanding the dimensions of the dataset \ndim(birds_data)\n\n\n[1] 30977    14\n\n\nCode\n# Identifying the column names of the dataset \ncolnames(birds_data)\n\n\n [1] \"Domain Code\"      \"Domain\"           \"Area Code\"        \"Area\"            \n [5] \"Element Code\"     \"Element\"          \"Item Code\"        \"Item\"            \n [9] \"Year Code\"        \"Year\"             \"Unit\"             \"Value\"           \n[13] \"Flag\"             \"Flag Description\"\n\n\nCode\n#Making a proportional table for state in the dataset\nprop.table(table(select(birds_data, Area)))\n\n\nArea\n                                         Afghanistan \n                                        0.0018723569 \n                                              Africa \n                                        0.0093617845 \n                                             Albania \n                                        0.0074894276 \n                                             Algeria \n                                        0.0074894276 \n                                      American Samoa \n                                        0.0018723569 \n                                            Americas \n                                        0.0074894276 \n                                              Angola \n                                        0.0018723569 \n                                 Antigua and Barbuda \n                                        0.0018723569 \n                                           Argentina \n                                        0.0074894276 \n                                             Armenia \n                                        0.0017432288 \n                                               Aruba \n                                        0.0009361785 \n                                                Asia \n                                        0.0093617845 \n                                           Australia \n                                        0.0056170707 \n                           Australia and New Zealand \n                                        0.0074894276 \n                                             Austria \n                                        0.0074894276 \n                                          Azerbaijan \n                                        0.0017432288 \n                                             Bahamas \n                                        0.0018723569 \n                                             Bahrain \n                                        0.0018723569 \n                                          Bangladesh \n                                        0.0037447138 \n                                            Barbados \n                                        0.0037447138 \n                                             Belarus \n                                        0.0026148433 \n                                             Belgium \n                                        0.0024534332 \n                                  Belgium-Luxembourg \n                                        0.0050359944 \n                                              Belize \n                                        0.0056170707 \n                                               Benin \n                                        0.0018723569 \n                                             Bermuda \n                                        0.0035510217 \n                                              Bhutan \n                                        0.0018723569 \n                    Bolivia (Plurinational State of) \n                                        0.0056170707 \n                              Bosnia and Herzegovina \n                                        0.0034864577 \n                                            Botswana \n                                        0.0018723569 \n                                              Brazil \n                                        0.0056170707 \n                                   Brunei Darussalam \n                                        0.0037447138 \n                                            Bulgaria \n                                        0.0074894276 \n                                        Burkina Faso \n                                        0.0018723569 \n                                             Burundi \n                                        0.0027762533 \n                                          Cabo Verde \n                                        0.0018723569 \n                                            Cambodia \n                                        0.0037447138 \n                                            Cameroon \n                                        0.0018723569 \n                                              Canada \n                                        0.0074894276 \n                                           Caribbean \n                                        0.0074894276 \n                                      Cayman Islands \n                                        0.0017109468 \n                            Central African Republic \n                                        0.0037447138 \n                                     Central America \n                                        0.0056170707 \n                                        Central Asia \n                                        0.0034864577 \n                                                Chad \n                                        0.0018723569 \n                                               Chile \n                                        0.0037447138 \n                                China, Hong Kong SAR \n                                        0.0090066824 \n                                    China, Macao SAR \n                                        0.0018723569 \n                                     China, mainland \n                                        0.0056170707 \n                           China, Taiwan Province of \n                                        0.0074894276 \n                                            Colombia \n                                        0.0018723569 \n                                             Comoros \n                                        0.0018723569 \n                                               Congo \n                                        0.0018723569 \n                                        Cook Islands \n                                        0.0035187397 \n                                          Costa Rica \n                                        0.0018723569 \n                                       Côte d'Ivoire \n                                        0.0027762533 \n                                             Croatia \n                                        0.0034864577 \n                                                Cuba \n                                        0.0018723569 \n                                              Cyprus \n                                        0.0089421183 \n                                             Czechia \n                                        0.0033573296 \n                                      Czechoslovakia \n                                        0.0041320980 \n               Democratic People's Republic of Korea \n                                        0.0037447138 \n                    Democratic Republic of the Congo \n                                        0.0018723569 \n                                             Denmark \n                                        0.0074894276 \n                                            Dominica \n                                        0.0018723569 \n                                  Dominican Republic \n                                        0.0018723569 \n                                      Eastern Africa \n                                        0.0074894276 \n                                        Eastern Asia \n                                        0.0093617845 \n                                      Eastern Europe \n                                        0.0074894276 \n                                             Ecuador \n                                        0.0074894276 \n                                               Egypt \n                                        0.0093617845 \n                                         El Salvador \n                                        0.0018723569 \n                                   Equatorial Guinea \n                                        0.0037447138 \n                                             Eritrea \n                                        0.0008393324 \n                                             Estonia \n                                        0.0034864577 \n                                            Eswatini \n                                        0.0018723569 \n                                            Ethiopia \n                                        0.0008393324 \n                                        Ethiopia PDR \n                                        0.0010330245 \n                                              Europe \n                                        0.0093617845 \n                         Falkland Islands (Malvinas) \n                                        0.0018723569 \n                                                Fiji \n                                        0.0056170707 \n                                             Finland \n                                        0.0053588146 \n                                              France \n                                        0.0093617845 \n                                       French Guyana \n                                        0.0037447138 \n                                    French Polynesia \n                                        0.0037447138 \n                                               Gabon \n                                        0.0018723569 \n                                              Gambia \n                                        0.0018723569 \n                                             Georgia \n                                        0.0017432288 \n                                             Germany \n                                        0.0074894276 \n                                               Ghana \n                                        0.0018723569 \n                                              Greece \n                                        0.0093617845 \n                                             Grenada \n                                        0.0018723569 \n                                          Guadeloupe \n                                        0.0049714304 \n                                                Guam \n                                        0.0018723569 \n                                           Guatemala \n                                        0.0018723569 \n                                              Guinea \n                                        0.0018723569 \n                                       Guinea-Bissau \n                                        0.0018723569 \n                                              Guyana \n                                        0.0018723569 \n                                               Haiti \n                                        0.0074894276 \n                                            Honduras \n                                        0.0018723569 \n                                             Hungary \n                                        0.0074894276 \n                                             Iceland \n                                        0.0018723569 \n                                               India \n                                        0.0037447138 \n                                           Indonesia \n                                        0.0037447138 \n                          Iran (Islamic Republic of) \n                                        0.0074894276 \n                                                Iraq \n                                        0.0018723569 \n                                             Ireland \n                                        0.0074894276 \n                                              Israel \n                                        0.0068437873 \n                                               Italy \n                                        0.0037447138 \n                                             Jamaica \n                                        0.0018723569 \n                                               Japan \n                                        0.0037447138 \n                                              Jordan \n                                        0.0080059399 \n                                          Kazakhstan \n                                        0.0017432288 \n                                               Kenya \n                                        0.0018723569 \n                                            Kiribati \n                                        0.0018723569 \n                                              Kuwait \n                                        0.0018723569 \n                                          Kyrgyzstan \n                                        0.0034864577 \n                    Lao People's Democratic Republic \n                                        0.0056170707 \n                                              Latvia \n                                        0.0017432288 \n                                             Lebanon \n                                        0.0029699454 \n                                             Lesotho \n                                        0.0018723569 \n                                             Liberia \n                                        0.0037447138 \n                                               Libya \n                                        0.0018723569 \n                                       Liechtenstein \n                                        0.0018723569 \n                                           Lithuania \n                                        0.0034864577 \n                                          Luxembourg \n                                        0.0006133583 \n                                          Madagascar \n                                        0.0074894276 \n                                              Malawi \n                                        0.0018723569 \n                                            Malaysia \n                                        0.0037447138 \n                                                Mali \n                                        0.0018723569 \n                                               Malta \n                                        0.0052942506 \n                                          Martinique \n                                        0.0051651225 \n                                          Mauritania \n                                        0.0018723569 \n                                           Mauritius \n                                        0.0074894276 \n                                           Melanesia \n                                        0.0056170707 \n                                              Mexico \n                                        0.0056170707 \n                                          Micronesia \n                                        0.0037447138 \n                    Micronesia (Federated States of) \n                                        0.0018077929 \n                                       Middle Africa \n                                        0.0056170707 \n                                            Mongolia \n                                        0.0018723569 \n                                          Montenegro \n                                        0.0004196662 \n                                          Montserrat \n                                        0.0018723569 \n                                             Morocco \n                                        0.0037447138 \n                                          Mozambique \n                                        0.0074894276 \n                                             Myanmar \n                                        0.0093617845 \n                                             Namibia \n                                        0.0037447138 \n                                               Nauru \n                                        0.0018723569 \n                                               Nepal \n                                        0.0037447138 \n                                         Netherlands \n                                        0.0053588146 \n                       Netherlands Antilles (former) \n                                        0.0018723569 \n                                       New Caledonia \n                                        0.0018723569 \n                                         New Zealand \n                                        0.0074894276 \n                                           Nicaragua \n                                        0.0018723569 \n                                               Niger \n                                        0.0018723569 \n                                             Nigeria \n                                        0.0018723569 \n                                                Niue \n                                        0.0018723569 \n                                     North Macedonia \n                                        0.0008716144 \n                                     Northern Africa \n                                        0.0093617845 \n                                    Northern America \n                                        0.0074894276 \n                                     Northern Europe \n                                        0.0074894276 \n                                              Norway \n                                        0.0056170707 \n                                             Oceania \n                                        0.0074894276 \n                                                Oman \n                                        0.0027762533 \n                     Pacific Islands Trust Territory \n                                        0.0019369209 \n                                            Pakistan \n                                        0.0037447138 \n                                           Palestine \n                                        0.0018723569 \n                                              Panama \n                                        0.0056170707 \n                                    Papua New Guinea \n                                        0.0056170707 \n                                            Paraguay \n                                        0.0074894276 \n                                                Peru \n                                        0.0018723569 \n                                         Philippines \n                                        0.0074894276 \n                                              Poland \n                                        0.0074894276 \n                                           Polynesia \n                                        0.0037447138 \n                                            Portugal \n                                        0.0042289441 \n                                         Puerto Rico \n                                        0.0018723569 \n                                               Qatar \n                                        0.0018723569 \n                                   Republic of Korea \n                                        0.0073602996 \n                                 Republic of Moldova \n                                        0.0017432288 \n                                             Réunion \n                                        0.0050682765 \n                                             Romania \n                                        0.0074894276 \n                                  Russian Federation \n                                        0.0034864577 \n                                              Rwanda \n                                        0.0041320980 \n        Saint Helena, Ascension and Tristan da Cunha \n                                        0.0018723569 \n                               Saint Kitts and Nevis \n                                        0.0018723569 \n                                         Saint Lucia \n                                        0.0018723569 \n                           Saint Pierre and Miquelon \n                                        0.0029699454 \n                    Saint Vincent and the Grenadines \n                                        0.0018723569 \n                                               Samoa \n                                        0.0018723569 \n                               Sao Tome and Principe \n                                        0.0056170707 \n                                        Saudi Arabia \n                                        0.0028730994 \n                                             Senegal \n                                        0.0018723569 \n                                              Serbia \n                                        0.0016786648 \n                               Serbia and Montenegro \n                                        0.0018077929 \n                                          Seychelles \n                                        0.0037447138 \n                                        Sierra Leone \n                                        0.0037447138 \n                                           Singapore \n                                        0.0037447138 \n                                            Slovakia \n                                        0.0033573296 \n                                            Slovenia \n                                        0.0034864577 \n                                     Solomon Islands \n                                        0.0018723569 \n                                             Somalia \n                                        0.0018723569 \n                                  South-eastern Asia \n                                        0.0093617845 \n                                        South Africa \n                                        0.0074894276 \n                                       South America \n                                        0.0074894276 \n                                         South Sudan \n                                        0.0002259741 \n                                     Southern Africa \n                                        0.0093617845 \n                                       Southern Asia \n                                        0.0074894276 \n                                     Southern Europe \n                                        0.0093617845 \n                                               Spain \n                                        0.0056816348 \n                                           Sri Lanka \n                                        0.0037447138 \n                                               Sudan \n                                        0.0002259741 \n                                      Sudan (former) \n                                        0.0016463828 \n                                            Suriname \n                                        0.0037447138 \n                                              Sweden \n                                        0.0037447138 \n                                         Switzerland \n                                        0.0074894276 \n                                Syrian Arab Republic \n                                        0.0093617845 \n                                          Tajikistan \n                                        0.0008716144 \n                                            Thailand \n                                        0.0056170707 \n                                         Timor-Leste \n                                        0.0018723569 \n                                                Togo \n                                        0.0018723569 \n                                             Tokelau \n                                        0.0018723569 \n                                               Tonga \n                                        0.0018723569 \n                                 Trinidad and Tobago \n                                        0.0018723569 \n                                             Tunisia \n                                        0.0030022275 \n                                              Turkey \n                                        0.0074894276 \n                                        Turkmenistan \n                                        0.0017432288 \n                                              Tuvalu \n                                        0.0018723569 \n                                              Uganda \n                                        0.0018723569 \n                                             Ukraine \n                                        0.0034864577 \n                                United Arab Emirates \n                                        0.0018723569 \nUnited Kingdom of Great Britain and Northern Ireland \n                                        0.0074894276 \n                         United Republic of Tanzania \n                                        0.0037447138 \n                            United States of America \n                                        0.0056170707 \n                        United States Virgin Islands \n                                        0.0018723569 \n                                             Uruguay \n                                        0.0074894276 \n                                                USSR \n                                        0.0020014850 \n                                          Uzbekistan \n                                        0.0017432288 \n                                             Vanuatu \n                                        0.0018723569 \n                  Venezuela (Bolivarian Republic of) \n                                        0.0018723569 \n                                            Viet Nam \n                                        0.0037447138 \n                           Wallis and Futuna Islands \n                                        0.0018723569 \n                                      Western Africa \n                                        0.0037447138 \n                                        Western Asia \n                                        0.0093617845 \n                                      Western Europe \n                                        0.0093617845 \n                                               World \n                                        0.0093617845 \n                                               Yemen \n                                        0.0018723569 \n                                        Yugoslav SFR \n                                        0.0040029699 \n                                              Zambia \n                                        0.0018723569 \n                                            Zimbabwe \n                                        0.0056170707 \n\n\nCode\n#Filter Area Code = 3 from the dataset \nfilter(birds_data, `Area Code` == 3)\n\n\n# A tibble: 232 × 14\n   Domain Cod…¹ Domain Area …² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year\n   <chr>        <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl>\n 1 QA           Live …       3 Alba…    5112 Stocks     1057 Chic…    1961  1961\n 2 QA           Live …       3 Alba…    5112 Stocks     1057 Chic…    1962  1962\n 3 QA           Live …       3 Alba…    5112 Stocks     1057 Chic…    1963  1963\n 4 QA           Live …       3 Alba…    5112 Stocks     1057 Chic…    1964  1964\n 5 QA           Live …       3 Alba…    5112 Stocks     1057 Chic…    1965  1965\n 6 QA           Live …       3 Alba…    5112 Stocks     1057 Chic…    1966  1966\n 7 QA           Live …       3 Alba…    5112 Stocks     1057 Chic…    1967  1967\n 8 QA           Live …       3 Alba…    5112 Stocks     1057 Chic…    1968  1968\n 9 QA           Live …       3 Alba…    5112 Stocks     1057 Chic…    1969  1969\n10 QA           Live …       3 Alba…    5112 Stocks     1057 Chic…    1970  1970\n# … with 222 more rows, 4 more variables: Unit <chr>, Value <dbl>, Flag <chr>,\n#   `Flag Description` <chr>, and abbreviated variable names ¹​`Domain Code`,\n#   ²​`Area Code`, ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n\n\nCode\n#Filter the rows that has Item Code as 1057 and Item as Chickens\nfilter(birds_data, `Item Code` == 1057 & `Item` == \"Chickens\")\n\n\n# A tibble: 13,074 × 14\n   Domain Cod…¹ Domain Area …² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year\n   <chr>        <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl>\n 1 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1961  1961\n 2 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1962  1962\n 3 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1963  1963\n 4 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1964  1964\n 5 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1965  1965\n 6 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1966  1966\n 7 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1967  1967\n 8 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1968  1968\n 9 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1969  1969\n10 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1970  1970\n# … with 13,064 more rows, 4 more variables: Unit <chr>, Value <dbl>,\n#   Flag <chr>, `Flag Description` <chr>, and abbreviated variable names\n#   ¹​`Domain Code`, ²​`Area Code`, ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n\n\nCode\n#Arranging data based on Value and selecting Area, Item, Value columns, grouping them based on Area and then slicing out first 10 rows (with piping)\nbirds_data %>%\n  arrange(desc(Value)) %>%\n  select(Area, Item, Value)%>%\n  group_by(Area) %>%\n  slice(1:10)\n\n\n# A tibble: 2,474 × 3\n# Groups:   Area [248]\n   Area        Item     Value\n   <chr>       <chr>    <dbl>\n 1 Afghanistan Chickens 14414\n 2 Afghanistan Chickens 14152\n 3 Afghanistan Chickens 13573\n 4 Afghanistan Chickens 13378\n 5 Afghanistan Chickens 13212\n 6 Afghanistan Chickens 13022\n 7 Afghanistan Chickens 12888\n 8 Afghanistan Chickens 12402\n 9 Afghanistan Chickens 12156\n10 Afghanistan Chickens 12053\n# … with 2,464 more rows"
  },
  {
    "objectID": "posts/SusmitaMadineni_challenge1.html#describing-the-wild_bird_data-dataset",
    "href": "posts/SusmitaMadineni_challenge1.html#describing-the-wild_bird_data-dataset",
    "title": "Reading datasets: railroad_2012_clean_county, birds, wild_birds_data",
    "section": "Describing the wild_bird_data dataset",
    "text": "Describing the wild_bird_data dataset\nThis dataset gives the information wet body weight and population size of wild birds. It has 2 columns - “Reference”, “Taken from Figure 1 of Nee et al.”. The dataset has 147 rows and 2 columns.The reader can understand the data by looking at the first few rows.\n\n\nCode\n# Reading wild_bird_data.xlsx dataset\n\nlibrary(\"readxl\")\nwild_birds_data <- read_xlsx(\"_data/wild_bird_data.xlsx\")\nview(wild_birds_data)\n# Preview the first few rows of the dataset\nhead(wild_birds_data)\n\n\n# A tibble: 6 × 2\n  Reference           `Taken from Figure 1 of Nee et al.`\n  <chr>               <chr>                              \n1 Wet body weight [g] Population size                    \n2 5.45887180052624    532194.395145161                   \n3 7.76456810683605    3165107.44544653                   \n4 8.63858738018464    2592996.86778979                   \n5 10.6897349302105    3524193.2266336                    \n6 7.41722577905587    389806.168891807                   \n\n\nCode\n# Understanding the dimensions of the dataset \ndim(wild_birds_data)\n\n\n[1] 147   2\n\n\nCode\n# Identifying the column names of the dataset \ncolnames(wild_birds_data)\n\n\n[1] \"Reference\"                         \"Taken from Figure 1 of Nee et al.\"\n\n\nCode\n#Making a proportional table for Reference  in the dataset\nprop.table(table(select(wild_birds_data, Reference)))\n\n\nReference\n   10.0837373583453    10.4227948279533    10.6897349302105    10.9430490453536 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   1003.03939853867    1008.19886351951    102.577037919272    103.351145634621 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   1042.06074444654    105.251145466066     105.27800534013    1064.32682601983 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   11.0657951888437    11.3325639394677    11.7501765156051    11.8338885705264 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n    11.911899237195    110.993242131064    1106.07510035687    1137.96479906865 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   114.163158354383    116.289475709079     12.073867120209    12.9107556641051 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   128.395335803439    128.575653541364    13.4190149139047    13.7066181013302 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   135.486491343145    1368.36501582366    138.513955740119    14.5348410462378 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   14.9327931173702     15.250338580451    15.4756001614342    15.5437260853068 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n    16.173314711739    16.3353638573666     16.713625723242    16.7374033065426 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   16.8480457069965    16.9541655530351    163.276223677476    17.7715823185348 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   173.454892979421    175.840624652506    18.4587461659311    18.4717033015697 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   18.5902522391181    18.7105850428847    18.7218421193228    19.1013268966518 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   19.3930121740443     19.492233639612    194.303351756182    20.4175008347481 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n    20.556216729787    2053.74863827143    21.2700694334402    212.147017049613 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   22.2677519174593    22.3057316395665    22.4321177480063     22.689316708056 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   22.7960529394349    221.693442317827    226.218006871375    23.9762697808197 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   232.254993447017    2320.09569921356    24.4422047589553     240.78960679855 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   25.2824793404366    251.746484961854    251.762544720258    255.963705031502 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n    263.89604533577    265.463867650509    27.1737255667256    27.6790862634083 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   27.8958488030849    275.131029910782    28.6687569833571    282.288057014247 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   287.527400278505    293.799587810237    301.332380779176    303.545552195872 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   311.918910823616    32.2163205913993    33.6261656866144    345.112605430166 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   35.1758377124708    35.4203082644676    352.281226176494    36.9646386454904 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   37.5910580962782    371.889868196688    380.296824961942    39.0641452782309 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   393.854923117015    394.224786249175    42.8545510609481    4223.72945322751 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   428.549354432903    43.1315511306876    44.8797938229394    4450.50815600577 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   462.782070038066    47.9477535298889    479.722220970486    480.965400920035 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   486.856962904678    49.9139486401791    5.45887180052624     52.312838051431 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   527.513423559442    530.357342971806    603.577402390915      64.74167603758 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   645.449083461034    66.4645646879698    67.0724165442755    672.284528540897 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   684.506509216141    7.41722577905587    7.76456810683605    71.3921665737811 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   72.4618812159043    757.205197645473    765.921951081732    79.3893544290883 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   798.020716987072    8.03684333000353    8.63858738018464    8.70473119796067 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   8.89032317828959    82.8877457373263    820.520151625127     887.34848570896 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n    9.1169347252776    9.51590845877281    923.172177028805    95.6625004989711 \n        0.006802721         0.006802721         0.006802721         0.006802721 \n   954.839393219695    9639.84540069595 Wet body weight [g] \n        0.006802721         0.006802721         0.006802721 \n\n\nCode\n#Filter the rows that has Reference > 10 and Reference < 12\nfilter(wild_birds_data, `Reference` > 10.0 & `Reference` < 12.0)\n\n\n# A tibble: 22 × 2\n   Reference        `Taken from Figure 1 of Nee et al.`\n   <chr>            <chr>                              \n 1 10.6897349302105 3524193.2266336                    \n 2 10.9430490453536 864.665387886239                   \n 3 10.0837373583453 74386.4256983317                   \n 4 10.4227948279533 131929.739792131                   \n 5 11.0657951888437 164390.10921714                    \n 6 11.7501765156051 143943.923703849                   \n 7 11.911899237195  62266.8051981741                   \n 8 11.8338885705264 49948.4692178362                   \n 9 11.3325639394677 15.2869871955882                   \n10 116.289475709079 32206.460433963                    \n# … with 12 more rows\n\n\nCode\n#Arranging data based on Reference and selecting Reference and then slicing out first 10 rows (with piping)\nwild_birds_data %>%\n  arrange(desc(Reference)) %>%\n  select(Reference)%>%\n  slice(1:10)\n\n\n# A tibble: 10 × 1\n   Reference          \n   <chr>              \n 1 Wet body weight [g]\n 2 9639.84540069595   \n 3 954.839393219695   \n 4 95.6625004989711   \n 5 923.172177028805   \n 6 9.51590845877281   \n 7 9.1169347252776    \n 8 887.34848570896    \n 9 820.520151625127   \n10 82.8877457373263"
  },
  {
    "objectID": "posts/TimShores_TechSetup.html",
    "href": "posts/TimShores_TechSetup.html",
    "title": "Tech Setup",
    "section": "",
    "text": "This evening, I followed Erico’s excellent to-do list to get my initial setup tasks complete. Last night, after our first class, I took a little time to update RStudio and connect it to my GitHub account.\nI had to do a little housekeeping: first, I removed a space from the directory where I’m saving my 601 R projects, since Erico’s document advised against spaces. I also spent some time wondering and worrying about the Windows 11 warning. I’m running Windows 11, and I don’t have a simple way to downgrade to Windows 10. I don’t seem to have any problem rendering .qmd files. So, I’m not going to worry about it for now."
  },
  {
    "objectID": "posts/challenge2_instructions.html",
    "href": "posts/challenge2_instructions.html",
    "title": "Challenge 2 Instructions",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)"
  },
  {
    "objectID": "posts/challenge2_instructions.html#challenge-overview",
    "href": "posts/challenge2_instructions.html#challenge-overview",
    "title": "Challenge 2 Instructions",
    "section": "Challenge Overview",
    "text": "Challenge Overview\nToday’s challenge is to\n\nread in a data set, and describe the data using both words and any supporting information (e.g., tables, etc)\nprovide summary statistics for different interesting groups within the data, and interpret those statistics"
  },
  {
    "objectID": "posts/challenge2_instructions.html#read-in-the-data",
    "href": "posts/challenge2_instructions.html#read-in-the-data",
    "title": "Challenge 2 Instructions",
    "section": "Read in the Data",
    "text": "Read in the Data\nRead in one (or more) of the following data sets, available in the posts/_data folder, using the correct R package and command.\n\nrailroad*.csv or StateCounty2012.xls ⭐\nFAOstat*.csv or birds.csv ⭐⭐⭐\nhotel_bookings.csv ⭐⭐⭐⭐\n\n\n\n\nAdd any comments or documentation as needed. More challenging data may require additional code chunks and documentation."
  },
  {
    "objectID": "posts/challenge2_instructions.html#describe-the-data",
    "href": "posts/challenge2_instructions.html#describe-the-data",
    "title": "Challenge 2 Instructions",
    "section": "Describe the data",
    "text": "Describe the data\nUsing a combination of words and results of R commands, can you provide a high level description of the data? Describe as efficiently as possible where/how the data was (likely) gathered, indicate the cases and variables (both the interpretation and any details you deem useful to the reader to fully understand your chosen data)."
  },
  {
    "objectID": "posts/challenge2_instructions.html#provide-grouped-summary-statistics",
    "href": "posts/challenge2_instructions.html#provide-grouped-summary-statistics",
    "title": "Challenge 2 Instructions",
    "section": "Provide Grouped Summary Statistics",
    "text": "Provide Grouped Summary Statistics\nConduct some exploratory data analysis, using dplyr commands such as group_by(), select(), filter(), and summarise(). Find the central tendency (mean, median, mode) and dispersion (standard deviation, mix/max/quantile) for different subgroups within the data set.\n\n\n\n\nExplain and Interpret\nBe sure to explain why you choose a specific group. Comment on the interpretation of any interesting differences between groups that you uncover. This section can be integrated with the exploratory data analysis, just be sure it is included."
  },
  {
    "objectID": "posts/JosephVincent_Challenge1.html",
    "href": "posts/JosephVincent_Challenge1.html",
    "title": "Challenge 1 - Railroad Employees",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(summarytools)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE)"
  },
  {
    "objectID": "posts/JosephVincent_Challenge1.html#reading-in-the-data",
    "href": "posts/JosephVincent_Challenge1.html#reading-in-the-data",
    "title": "Challenge 1 - Railroad Employees",
    "section": "Reading in the data",
    "text": "Reading in the data\n\nrailroad_2012_clean_county.csv ⭐\n\n\n\nCode\n# loading in dataset and assigning to variable 'railroad'\n# using head to preview the dataset\n\nrailroad <- read_csv(\"_data/railroad_2012_clean_county.csv\")\n\n\nRows: 2930 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): state, county\ndbl (1): total_employees\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nhead(railroad)\n\n\n# A tibble: 6 × 3\n  state county               total_employees\n  <chr> <chr>                          <dbl>\n1 AE    APO                                2\n2 AK    ANCHORAGE                          7\n3 AK    FAIRBANKS NORTH STAR               2\n4 AK    JUNEAU                             3\n5 AK    MATANUSKA-SUSITNA                  2\n6 AK    SITKA                              1"
  },
  {
    "objectID": "posts/JosephVincent_Challenge1.html#describing-the-dataset",
    "href": "posts/JosephVincent_Challenge1.html#describing-the-dataset",
    "title": "Challenge 1 - Railroad Employees",
    "section": "Describing the dataset",
    "text": "Describing the dataset\nThis data set consists of 3 columns: State, County and Total Employees. It appears that the data set is showing the number of railroad employees by county in the United States.\nThe least number of railroad employees in a given county is 1, and the greatest number of railroad employees in a given county is over 8,000.\nThere is a mean number of employees per county of about 87, but with a large standard deviation (283).\nI learned that there are 31 counties with the name “Washington” and 26 counties with the name “Jefferson”."
  },
  {
    "objectID": "posts/JosephVincent_Challenge1.html#data-summary",
    "href": "posts/JosephVincent_Challenge1.html#data-summary",
    "title": "Challenge 1 - Railroad Employees",
    "section": "Data summary",
    "text": "Data summary\n\n\nCode\n# finding the dimensions of 'railroad'\ndim(railroad)\n\n\n[1] 2930    3\n\n\nCode\n# finding the column names of 'railroad'\ncolnames(railroad)\n\n\n[1] \"state\"           \"county\"          \"total_employees\"\n\n\nCode\n#using summary tools\ndfSummary(railroad)\n\n\nData Frame Summary  \nrailroad  \nDimensions: 2930 x 3  \nDuplicates: 0  \n\n-----------------------------------------------------------------------------------------------------------------\nNo   Variable          Stats / Values             Freqs (% of Valid)    Graph                Valid      Missing  \n---- ----------------- -------------------------- --------------------- -------------------- ---------- ---------\n1    state             1. TX                       221 ( 7.5%)          I                    2930       0        \n     [character]       2. GA                       152 ( 5.2%)          I                    (100.0%)   (0.0%)   \n                       3. KY                       119 ( 4.1%)                                                   \n                       4. MO                       115 ( 3.9%)                                                   \n                       5. IL                       103 ( 3.5%)                                                   \n                       6. IA                        99 ( 3.4%)                                                   \n                       7. KS                        95 ( 3.2%)                                                   \n                       8. NC                        94 ( 3.2%)                                                   \n                       9. IN                        92 ( 3.1%)                                                   \n                       10. VA                       92 ( 3.1%)                                                   \n                       [ 43 others ]              1748 (59.7%)          IIIIIIIIIII                              \n\n2    county            1. WASHINGTON                31 ( 1.1%)                               2930       0        \n     [character]       2. JEFFERSON                 26 ( 0.9%)                               (100.0%)   (0.0%)   \n                       3. FRANKLIN                  24 ( 0.8%)                                                   \n                       4. LINCOLN                   24 ( 0.8%)                                                   \n                       5. JACKSON                   22 ( 0.8%)                                                   \n                       6. MADISON                   19 ( 0.6%)                                                   \n                       7. MONTGOMERY                18 ( 0.6%)                                                   \n                       8. CLAY                      17 ( 0.6%)                                                   \n                       9. MARION                    17 ( 0.6%)                                                   \n                       10. MONROE                   17 ( 0.6%)                                                   \n                       [ 1699 others ]            2715 (92.7%)          IIIIIIIIIIIIIIIIII                       \n\n3    total_employees   Mean (sd) : 87.2 (283.6)   404 distinct values   :                    2930       0        \n     [numeric]         min < med < max:                                 :                    (100.0%)   (0.0%)   \n                       1 < 21 < 8207                                    :                                        \n                       IQR (CV) : 58 (3.3)                              :                                        \n                                                                        :                                        \n-----------------------------------------------------------------------------------------------------------------\n\n\nCode\n# practice selecting employees column and calc min/max manually\nemployees <- select(railroad, total_employees)\nhead(employees)\n\n\n# A tibble: 6 × 1\n  total_employees\n            <dbl>\n1               2\n2               7\n3               2\n4               3\n5               2\n6               1\n\n\nCode\nmin(employees)\n\n\n[1] 1\n\n\nCode\nmax(employees)\n\n\n[1] 8207"
  },
  {
    "objectID": "posts/CamNeedels_challenge1.html",
    "href": "posts/CamNeedels_challenge1.html",
    "title": "Challenge 1 Wildbird submission",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(summarytools)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)"
  },
  {
    "objectID": "posts/CamNeedels_challenge1.html#data-description",
    "href": "posts/CamNeedels_challenge1.html#data-description",
    "title": "Challenge 1 Wildbird submission",
    "section": "Data description",
    "text": "Data description\nThe data set consists of 2 columns, water weight in grams and the population size of wild birds. There were 146 different populations of birds studied in this data set as well.\nThe minimum weight is 5.5g , the median is 69.2g, and the maximum is 9639.8g.\nThe minimum population size was 4.9, the median was 24,353.2, and the max was 5,093,378.\nThe data summary shows the mean weight amongst all the birds is 363.7 grams with a standard deviation of 983.5. The mean population was 382,874 with a standard deviation of 951,938.7.\n\n\nCode\n#this is to make the excel file readable, i needed to skip 2 lines here in order to change the long variable names. This makes it way easier to use those parameters in the future\nlibrary(readxl)\nwild_bird_data <- read_excel(\"B:/Needels/Documents/DACCS 601/601_Spring_2023/posts/_data/wild_bird_data.xlsx\",\n                            skip = 2,\n                            col_names = c(\"weight\", \"pop_size\"))\nwild_bird_data\n\n\n# A tibble: 146 × 2\n   weight pop_size\n    <dbl>    <dbl>\n 1   5.46  532194.\n 2   7.76 3165107.\n 3   8.64 2592997.\n 4  10.7  3524193.\n 5   7.42  389806.\n 6   9.12  604766.\n 7   8.04  192361.\n 8   8.70  250452.\n 9   8.89   16997.\n10   9.52     595.\n# … with 136 more rows\n\n\n\n\nCode\n#the dimensions of the data\ndim(wild_bird_data)\n\n\n[1] 146   2\n\n\n\n\nCode\n#a way to quickly find the variable names\ncolnames(wild_bird_data)\n\n\n[1] \"weight\"   \"pop_size\"\n\n\n\n\nCode\n#with the summary tools library, I can summarize the data with a single command\ndfSummary(wild_bird_data)\n\n\nData Frame Summary  \nwild_bird_data  \nDimensions: 146 x 2  \nDuplicates: 0  \n\n---------------------------------------------------------------------------------------------------\nNo   Variable    Stats / Values                  Freqs (% of Valid)    Graph   Valid      Missing  \n---- ----------- ------------------------------- --------------------- ------- ---------- ---------\n1    weight      Mean (sd) : 363.7 (983.5)       146 distinct values   :       146        0        \n     [numeric]   min < med < max:                                      :       (100.0%)   (0.0%)   \n                 5.5 < 69.2 < 9639.8                                   :                           \n                 IQR (CV) : 291.2 (2.7)                                :                           \n                                                                       : .                         \n\n2    pop_size    Mean (sd) : 382874 (951938.7)   146 distinct values   :       146        0        \n     [numeric]   min < med < max:                                      :       (100.0%)   (0.0%)   \n                 4.9 < 24353.2 < 5093378                               :                           \n                 IQR (CV) : 196693.8 (2.5)                             :                           \n                                                                       : .                         \n---------------------------------------------------------------------------------------------------"
  },
  {
    "objectID": "posts/TeresaLardo_Challenge1.html",
    "href": "posts/TeresaLardo_Challenge1.html",
    "title": "Challenge 1: Railroad Workers 2012",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE)\nlibrary(readr)\nlibrary(dplyr)\nrailroad <- read_csv(\"_data/railroad_2012_clean_county.csv\", show_col_types = FALSE)"
  },
  {
    "objectID": "posts/TeresaLardo_Challenge1.html#choo-choo-all-aboard",
    "href": "posts/TeresaLardo_Challenge1.html#choo-choo-all-aboard",
    "title": "Challenge 1: Railroad Workers 2012",
    "section": "Choo-choo, all aboard!",
    "text": "Choo-choo, all aboard!\nThis data set shows the total number of railroad employees per county in the United States in the year 2012. Running the head() function displays the first 6 rows of the data set.\n\n\nCode\nhead(railroad)\n\n\n# A tibble: 6 × 3\n  state county               total_employees\n  <chr> <chr>                          <dbl>\n1 AE    APO                                2\n2 AK    ANCHORAGE                          7\n3 AK    FAIRBANKS NORTH STAR               2\n4 AK    JUNEAU                             3\n5 AK    MATANUSKA-SUSITNA                  2\n6 AK    SITKA                              1\n\n\n\n\nCode\ndim(railroad)\n\n\n[1] 2930    3\n\n\nThe dim() functions shows us that the data set contains 2930 rows (2930 counties) and 3 columns (state, county, and total_employees).\nThe very first item lists a state code of “AE” and a county of “APO” with 2 employees for the year 2012. Since this is different from the state codes and county names that follow, I want to clarify that this is for overseas military. Besides “AE,” the other overseas military “state” abbreviations are AP and AA. Let’s check for all of these state codes in the data set.\n\n\nCode\n# Filter the state column through a vector of overseas military state codes\noverseas <- railroad %>% \n  filter(\n    state %in% c(\"AA\", \"AE\", \"AP\")\n  )\noverseas\n\n\n# A tibble: 2 × 3\n  state county total_employees\n  <chr> <chr>            <dbl>\n1 AE    APO                  2\n2 AP    APO                  1\n\n\nFiltering the original data set by states in a vector of military overseas abbreviations shows that only Armed Forces Europe (AE) and Armed Forces Pacific (AP) appear in this data set; Armed Forces the Americas (AA) does not.\n\n\nCode\n# How many unique values are in the state column?\nrailroad %>% \n  select(state) %>% \n  n_distinct(.)\n\n\n[1] 53\n\n\nSo apparently there are 53 unique values under the ‘state’ column. There’s 50 states, and the two overseas military codes we found before make 52. What’s the other one?\n\n\nCode\nunique(railroad$state)\n\n\n [1] \"AE\" \"AK\" \"AL\" \"AP\" \"AR\" \"AZ\" \"CA\" \"CO\" \"CT\" \"DC\" \"DE\" \"FL\" \"GA\" \"HI\" \"IA\"\n[16] \"ID\" \"IL\" \"IN\" \"KS\" \"KY\" \"LA\" \"MA\" \"MD\" \"ME\" \"MI\" \"MN\" \"MO\" \"MS\" \"MT\" \"NC\"\n[31] \"ND\" \"NE\" \"NH\" \"NJ\" \"NM\" \"NV\" \"NY\" \"OH\" \"OK\" \"OR\" \"PA\" \"RI\" \"SC\" \"SD\" \"TN\"\n[46] \"TX\" \"UT\" \"VA\" \"VT\" \"WA\" \"WI\" \"WV\" \"WY\"\n\n\nLooking through the unique listings of the ‘state’ column, we find ‘DC’ hiding in there, being sneaky and upping our “state” count to 53."
  },
  {
    "objectID": "posts/TeresaLardo_Challenge1.html#visualization",
    "href": "posts/TeresaLardo_Challenge1.html#visualization",
    "title": "Challenge 1: Railroad Workers 2012",
    "section": "Visualization",
    "text": "Visualization\nWe can use a horizontal bar graph to show which areas had the most railroad employees in 2012. Because we know from the dim() function that this data set includes 2930 different counties, a bar graph of the number of state employees by county would be super long and overwhelming. So let’s instead opt to use employee counts by state instead of county. Using states will still give us a graph with 53 bars, so let’s add some color to distinguish consecutive bars from each other.\n\n\nCode\n# Access ggplot2 and set up a horizontal bar graph to display employees by state\nlibrary(ggplot2)\n\nst_emp_viz <- ggplot(railroad, aes(x=state, y=total_employees, fill=state)) + \n  geom_bar(stat = \"identity\") + \n  coord_flip() + \n  theme(legend.position = \"none\")\n\n# Add a title as well as labels for the x- and y-axes\nst_emp_viz <- st_emp_viz + ggtitle(\"Railroad Employees by State (2012)\") + xlab(\"State\") + ylab(\"Total Employees\")\nst_emp_viz\n\n\n\n\n\nThe horizontal bar graph shows that the 3 states with the highest number of railroad employees in 2012 were Texas, Illinois, and New York, which all surpassed 15000 employees. Nebraska, California, and Pennsylvania have the next highest values, with all 3 states surpassing 12500."
  },
  {
    "objectID": "posts/TeresaLardo_Challenge1.html#highest-values-by-county",
    "href": "posts/TeresaLardo_Challenge1.html#highest-values-by-county",
    "title": "Challenge 1: Railroad Workers 2012",
    "section": "Highest Values by County",
    "text": "Highest Values by County\nLet’s do a little bit of sorting to see how the data set reflects or differs from our bar graph.\n\n\nCode\n# Arrange the data set in descending order so the counties with the most employees appear at the top\nsorted_by_county <- railroad %>% \n  arrange(-total_employees)\n\nhead(sorted_by_county, 15)\n\n\n# A tibble: 15 × 3\n   state county           total_employees\n   <chr> <chr>                      <dbl>\n 1 IL    COOK                        8207\n 2 TX    TARRANT                     4235\n 3 NE    DOUGLAS                     3797\n 4 NY    SUFFOLK                     3685\n 5 VA    INDEPENDENT CITY            3249\n 6 FL    DUVAL                       3073\n 7 CA    SAN BERNARDINO              2888\n 8 CA    LOS ANGELES                 2545\n 9 TX    HARRIS                      2535\n10 NE    LINCOLN                     2289\n11 NY    NASSAU                      2076\n12 MO    JACKSON                     2055\n13 IN    LAKE                        1999\n14 IL    WILL                        1784\n15 PA    PHILADELPHIA                1649\n\n\nSince there are so many counties in this data set, I’ve expanded the head() view to the top 15 values. We can see that each of the top 6 states from our bar graph is represented in the top 15 counties. Several counties in other states also had particularly high numbers of railroad employees in 2012."
  },
  {
    "objectID": "posts/TeresaLardo_Challenge1.html#conclusion",
    "href": "posts/TeresaLardo_Challenge1.html#conclusion",
    "title": "Challenge 1: Railroad Workers 2012",
    "section": "Conclusion",
    "text": "Conclusion\nThis data set shows that at the state level, the states of Texas, Illinois, and New York had the highest total number of railroad employees in the year 2012. At the county level, the highest number of railroad employees were based in Cook County, Illinois (8207); Tarrant County, Texas (4235); and Douglas County, Nebraska (3797). Considering the data set describes data from the year 2012 specifically, the data was likely gathered via local census."
  },
  {
    "objectID": "posts/PoChunYang_Challenge1.html",
    "href": "posts/PoChunYang_Challenge1.html",
    "title": "railroad_2012_clean_county",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(summarytools)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)"
  },
  {
    "objectID": "posts/PoChunYang_Challenge1.html#challenge-overview",
    "href": "posts/PoChunYang_Challenge1.html#challenge-overview",
    "title": "railroad_2012_clean_county",
    "section": "Challenge Overview",
    "text": "Challenge Overview\nToday’s challenge is to\n\nread in a dataset, and\ndescribe the dataset using both words and any supporting information (e.g., tables, etc)"
  },
  {
    "objectID": "posts/PoChunYang_Challenge1.html#read-in-the-data",
    "href": "posts/PoChunYang_Challenge1.html#read-in-the-data",
    "title": "railroad_2012_clean_county",
    "section": "Read in the Data",
    "text": "Read in the Data\nRead in one (or more) of the following data sets, using the correct R package and command.\n\nrailroad_2012_clean_county.csv ⭐\nbirds.csv ⭐⭐\nFAOstat*.csv ⭐⭐\nwild_bird_data.xlsx ⭐⭐⭐\nStateCounty2012.xls ⭐⭐⭐⭐\n\nFind the _data folder, located inside the posts folder. Then you can read in the data, using either one of the readr standard tidy read commands, or a specialized package such as readxl.\n\n\nCode\nrailroad <- read.csv(\"_data/railroad_2012_clean_county.csv\")\nrailroad\n\n\n     state               county total_employees\n1       AE                  APO               2\n2       AK            ANCHORAGE               7\n3       AK FAIRBANKS NORTH STAR               2\n4       AK               JUNEAU               3\n5       AK    MATANUSKA-SUSITNA               2\n6       AK                SITKA               1\n7       AK SKAGWAY MUNICIPALITY              88\n8       AL              AUTAUGA             102\n9       AL              BALDWIN             143\n10      AL              BARBOUR               1\n11      AL                 BIBB              25\n12      AL               BLOUNT             154\n13      AL              BULLOCK              13\n14      AL               BUTLER              29\n15      AL              CALHOUN              45\n16      AL             CHAMBERS              13\n17      AL             CHEROKEE               9\n18      AL              CHILTON              72\n19      AL              CHOCTAW               7\n20      AL               CLARKE              26\n21      AL                 CLAY              10\n22      AL             CLEBURNE               7\n23      AL               COFFEE              14\n24      AL              COLBERT             199\n25      AL              CONECUH              11\n26      AL                COOSA               5\n27      AL            COVINGTON              12\n28      AL             CRENSHAW               5\n29      AL              CULLMAN             129\n30      AL                 DALE              11\n31      AL               DALLAS             122\n32      AL               DEKALB              33\n33      AL               ELMORE             116\n34      AL             ESCAMBIA              47\n35      AL               ETOWAH              78\n36      AL              FAYETTE               3\n37      AL             FRANKLIN              40\n38      AL               GENEVA               8\n39      AL               GREENE               7\n40      AL                 HALE               8\n41      AL                HENRY               1\n42      AL              HOUSTON              46\n43      AL              JACKSON              55\n44      AL            JEFFERSON             990\n45      AL                LAMAR              25\n46      AL           LAUDERDALE             117\n47      AL             LAWRENCE              11\n48      AL                  LEE              46\n49      AL            LIMESTONE               7\n50      AL              LOWNDES               7\n51      AL                MACON               6\n52      AL              MADISON              29\n53      AL              MARENGO              16\n54      AL               MARION              17\n55      AL             MARSHALL              29\n56      AL               MOBILE             331\n57      AL               MONROE              43\n58      AL           MONTGOMERY             102\n59      AL               MORGAN              42\n60      AL                PERRY               4\n61      AL              PICKENS              24\n62      AL                 PIKE              19\n63      AL             RANDOLPH              39\n64      AL              RUSSELL              38\n65      AL               SHELBY             158\n66      AL             ST CLAIR             162\n67      AL               SUMTER               9\n68      AL            TALLADEGA              42\n69      AL           TALLAPOOSA              19\n70      AL           TUSCALOOSA              60\n71      AL               WALKER             192\n72      AL           WASHINGTON              11\n73      AL               WILCOX              11\n74      AL              WINSTON              45\n75      AP                  APO               1\n76      AR             ARKANSAS              11\n77      AR               ASHLEY              18\n78      AR               BAXTER              25\n79      AR               BENTON              35\n80      AR                BOONE               5\n81      AR              BRADLEY               8\n82      AR              CALHOUN               5\n83      AR               CHICOT               3\n84      AR                CLARK              40\n85      AR                 CLAY              13\n86      AR             CLEBURNE               8\n87      AR            CLEVELAND              79\n88      AR             COLUMBIA               5\n89      AR               CONWAY              19\n90      AR            CRAIGHEAD              61\n91      AR             CRAWFORD              55\n92      AR           CRITTENDEN              48\n93      AR                CROSS              30\n94      AR               DALLAS              12\n95      AR                DESHA              15\n96      AR                 DREW              34\n97      AR             FAULKNER             289\n98      AR             FRANKLIN               5\n99      AR               FULTON              54\n100     AR              GARLAND              68\n101     AR                GRANT             167\n102     AR               GREENE              15\n103     AR            HEMPSTEAD               6\n104     AR           HOT SPRING              79\n105     AR               HOWARD              37\n106     AR         INDEPENDENCE              32\n107     AR                IZARD               4\n108     AR              JACKSON              13\n109     AR            JEFFERSON             361\n110     AR              JOHNSON               7\n111     AR            LAFAYETTE              11\n112     AR             LAWRENCE              32\n113     AR                  LEE               3\n114     AR              LINCOLN              54\n115     AR         LITTLE RIVER              22\n116     AR                LOGAN               4\n117     AR               LONOKE             330\n118     AR              MADISON               7\n119     AR               MARION               8\n120     AR               MILLER              10\n121     AR          MISSISSIPPI              18\n122     AR               MONROE               7\n123     AR           MONTGOMERY               2\n124     AR               NEVADA              15\n125     AR               NEWTON               1\n126     AR             OUACHITA              15\n127     AR                PERRY              22\n128     AR             PHILLIPS              11\n129     AR                 PIKE              10\n130     AR             POINSETT               4\n131     AR                 POLK              17\n132     AR                 POPE              31\n133     AR              PRAIRIE               5\n134     AR              PULASKI             972\n135     AR             RANDOLPH              19\n136     AR               SALINE             262\n137     AR                SCOTT               3\n138     AR            SEBASTIAN              43\n139     AR               SEVIER              50\n140     AR                SHARP              20\n141     AR           ST FRANCIS              16\n142     AR                STONE               2\n143     AR                UNION              20\n144     AR            VAN BUREN               2\n145     AR           WASHINGTON              46\n146     AR                WHITE             102\n147     AR                 YELL               9\n148     AZ               APACHE             270\n149     AZ              COCHISE              60\n150     AZ             COCONINO             268\n151     AZ                 GILA              37\n152     AZ               GRAHAM              48\n153     AZ             GREENLEE               3\n154     AZ               LA PAZ              10\n155     AZ             MARICOPA             462\n156     AZ               MOHAVE             407\n157     AZ               NAVAJO             510\n158     AZ                 PIMA             749\n159     AZ                PINAL             154\n160     AZ           SANTA CRUZ              18\n161     AZ              YAVAPAI              63\n162     AZ                 YUMA              94\n163     CA              ALAMEDA             346\n164     CA               AMADOR               9\n165     CA                BUTTE              69\n166     CA            CALAVERAS              30\n167     CA               COLUSA               2\n168     CA         CONTRA COSTA             348\n169     CA            EL DORADO             103\n170     CA               FRESNO             341\n171     CA                GLENN               4\n172     CA             HUMBOLDT               2\n173     CA             IMPERIAL              65\n174     CA                 KERN             500\n175     CA                KINGS              21\n176     CA                 LAKE               2\n177     CA               LASSEN              14\n178     CA          LOS ANGELES            2545\n179     CA               MADERA              39\n180     CA                MARIN              12\n181     CA             MARIPOSA               4\n182     CA            MENDOCINO               6\n183     CA               MERCED              59\n184     CA                MODOC               3\n185     CA                 MONO               1\n186     CA             MONTEREY              29\n187     CA                 NAPA              17\n188     CA               NEVADA              36\n189     CA               ORANGE             460\n190     CA               PLACER             539\n191     CA               PLUMAS              84\n192     CA            RIVERSIDE            1567\n193     CA           SACRAMENTO             738\n194     CA           SAN BENITO              13\n195     CA       SAN BERNARDINO            2888\n196     CA            SAN DIEGO             206\n197     CA        SAN FRANCISCO              61\n198     CA          SAN JOAQUIN             474\n199     CA      SAN LUIS OBISPO              98\n200     CA            SAN MATEO              80\n201     CA        SANTA BARBARA              36\n202     CA          SANTA CLARA             244\n203     CA           SANTA CRUZ              44\n204     CA               SHASTA              69\n205     CA               SIERRA               2\n206     CA             SISKIYOU              83\n207     CA               SOLANO             221\n208     CA               SONOMA              38\n209     CA           STANISLAUS             195\n210     CA               SUTTER              54\n211     CA               TEHAMA              10\n212     CA              TRINITY               2\n213     CA               TULARE              97\n214     CA             TUOLUMNE               9\n215     CA              VENTURA              68\n216     CA                 YOLO              62\n217     CA                 YUBA              88\n218     CO                ADAMS             553\n219     CO              ALAMOSA              10\n220     CO             ARAPAHOE             128\n221     CO            ARCHULETA               2\n222     CO                 BACA               3\n223     CO                 BENT               1\n224     CO              BOULDER              71\n225     CO           BROOMFIELD              42\n226     CO              CHAFFEE               6\n227     CO             CHEYENNE               1\n228     CO          CLEAR CREEK               2\n229     CO              CONEJOS               6\n230     CO             COSTILLA               1\n231     CO              CROWLEY               7\n232     CO               CUSTER               3\n233     CO                DELTA              16\n234     CO               DENVER             503\n235     CO              DOLORES               1\n236     CO              DOUGLAS             112\n237     CO                EAGLE              10\n238     CO              EL PASO             129\n239     CO               ELBERT              10\n240     CO              FREMONT              28\n241     CO             GARFIELD              13\n242     CO               GILPIN               5\n243     CO                GRAND              10\n244     CO             GUNNISON               1\n245     CO             HUERFANO              10\n246     CO            JEFFERSON             267\n247     CO                KIOWA               3\n248     CO           KIT CARSON               2\n249     CO             LA PLATA               1\n250     CO                 LAKE               2\n251     CO              LARIMER             159\n252     CO           LAS ANIMAS              77\n253     CO              LINCOLN               5\n254     CO                LOGAN             137\n255     CO                 MESA             252\n256     CO               MOFFAT               6\n257     CO            MONTEZUMA               2\n258     CO             MONTROSE              10\n259     CO               MORGAN              34\n260     CO                OTERO             141\n261     CO                 PARK              12\n262     CO             PHILLIPS               4\n263     CO               PITKIN               1\n264     CO              PROWERS              26\n265     CO               PUEBLO             526\n266     CO           RIO GRANDE              10\n267     CO                ROUTT              30\n268     CO             SAGUACHE               2\n269     CO             SEDGWICK              16\n270     CO               SUMMIT               6\n271     CO               TELLER               6\n272     CO           WASHINGTON               3\n273     CO                 WELD             223\n274     CO                 YUMA               3\n275     CT            FAIRFIELD             486\n276     CT             HARTFORD             113\n277     CT           LITCHFIELD              57\n278     CT            MIDDLESEX             137\n279     CT            NEW HAVEN            1561\n280     CT           NEW LONDON             146\n281     CT              TOLLAND              26\n282     CT              WINDHAM              66\n283     DC        WASHINGTON DC             279\n284     DE                 KENT             158\n285     DE           NEW CASTLE            1275\n286     DE               SUSSEX              62\n287     FL              ALACHUA              22\n288     FL                BAKER              81\n289     FL                  BAY              45\n290     FL             BRADFORD              20\n291     FL              BREVARD              33\n292     FL              BROWARD             294\n293     FL              CALHOUN               1\n294     FL            CHARLOTTE              10\n295     FL               CITRUS              23\n296     FL                 CLAY             636\n297     FL              COLLIER              14\n298     FL             COLUMBIA              35\n299     FL               DESOTO               9\n300     FL                DIXIE               2\n301     FL                DUVAL            3073\n302     FL             ESCAMBIA             124\n303     FL              FLAGLER              29\n304     FL             FRANKLIN               2\n305     FL              GADSDEN               5\n306     FL            GILCHRIST               1\n307     FL               GLADES               5\n308     FL                 GULF               6\n309     FL             HAMILTON              11\n310     FL               HARDEE               2\n311     FL               HENDRY               1\n312     FL             HERNANDO              30\n313     FL            HIGHLANDS              15\n314     FL         HILLSBOROUGH             387\n315     FL               HOLMES               6\n316     FL         INDIAN RIVER              12\n317     FL              JACKSON              12\n318     FL            JEFFERSON               3\n319     FL            LAFAYETTE               5\n320     FL                 LAKE              77\n321     FL                  LEE              43\n322     FL                 LEON              21\n323     FL                 LEVY               6\n324     FL              LIBERTY               1\n325     FL              MADISON               1\n326     FL              MANATEE              23\n327     FL               MARION              48\n328     FL               MARTIN               9\n329     FL           MIAMI-DADE             346\n330     FL               MONROE               7\n331     FL               NASSAU             242\n332     FL             OKALOOSA               6\n333     FL           OKEECHOBEE              12\n334     FL               ORANGE             101\n335     FL              OSCEOLA              30\n336     FL           PALM BEACH             155\n337     FL                PASCO              71\n338     FL             PINELLAS              73\n339     FL                 POLK             238\n340     FL               PUTNAM              34\n341     FL           SANTA ROSA              48\n342     FL             SARASOTA              18\n343     FL             SEMINOLE              92\n344     FL             ST JOHNS             449\n345     FL             ST LUCIE              56\n346     FL               SUMTER              36\n347     FL             SUWANNEE              11\n348     FL               TAYLOR               5\n349     FL                UNION              11\n350     FL              VOLUSIA             175\n351     FL              WAKULLA               4\n352     FL               WALTON               3\n353     FL           WASHINGTON              13\n354     GA              APPLING              24\n355     GA             ATKINSON              22\n356     GA                BACON              56\n357     GA              BALDWIN              11\n358     GA                BANKS               1\n359     GA               BARROW              32\n360     GA               BARTOW             114\n361     GA             BEN HILL             120\n362     GA              BERRIEN              12\n363     GA                 BIBB             304\n364     GA             BLECKLEY              17\n365     GA             BRANTLEY             112\n366     GA               BROOKS               4\n367     GA                BRYAN              95\n368     GA              BULLOCH              42\n369     GA                BURKE              17\n370     GA                BUTTS              23\n371     GA              CALHOUN               3\n372     GA               CAMDEN              41\n373     GA              CANDLER               4\n374     GA              CARROLL             130\n375     GA              CATOOSA             120\n376     GA             CHARLTON              35\n377     GA              CHATHAM             281\n378     GA        CHATTAHOOCHEE               4\n379     GA            CHATTOOGA               4\n380     GA             CHEROKEE             129\n381     GA               CLARKE               9\n382     GA                 CLAY               2\n383     GA              CLAYTON             194\n384     GA               CLINCH              16\n385     GA                 COBB             661\n386     GA               COFFEE              85\n387     GA             COLQUITT               5\n388     GA             COLUMBIA              89\n389     GA                 COOK               4\n390     GA               COWETA             116\n391     GA             CRAWFORD               6\n392     GA                CRISP              12\n393     GA                 DADE              31\n394     GA               DAWSON               3\n395     GA              DECATUR              11\n396     GA               DEKALB             315\n397     GA                DODGE               9\n398     GA                DOOLY               6\n399     GA            DOUGHERTY              43\n400     GA              DOUGLAS             282\n401     GA                EARLY               6\n402     GA            EFFINGHAM             130\n403     GA               ELBERT               1\n404     GA              EMANUEL              33\n405     GA                EVANS               5\n406     GA               FANNIN               9\n407     GA              FAYETTE             177\n408     GA                FLOYD              31\n409     GA              FORSYTH              40\n410     GA             FRANKLIN               6\n411     GA               FULTON             878\n412     GA               GILMER               6\n413     GA             GLASCOCK               1\n414     GA                GLYNN              40\n415     GA               GORDON              33\n416     GA                GRADY               9\n417     GA               GREENE               5\n418     GA             GWINNETT             372\n419     GA            HABERSHAM              12\n420     GA                 HALL              55\n421     GA              HANCOCK               4\n422     GA             HARALSON              21\n423     GA               HARRIS              37\n424     GA                 HART              10\n425     GA                HEARD               4\n426     GA                HENRY             269\n427     GA              HOUSTON              89\n428     GA                IRWIN              24\n429     GA              JACKSON              38\n430     GA               JASPER              13\n431     GA           JEFF DAVIS              12\n432     GA            JEFFERSON              11\n433     GA              JENKINS              17\n434     GA              JOHNSON               4\n435     GA                JONES              42\n436     GA                LAMAR              19\n437     GA               LANIER              10\n438     GA              LAURENS              11\n439     GA                  LEE              22\n440     GA              LIBERTY              28\n441     GA              LINCOLN              15\n442     GA                 LONG               4\n443     GA              LOWNDES              87\n444     GA              LUMPKIN               2\n445     GA                MACON               4\n446     GA              MADISON               6\n447     GA               MARION               7\n448     GA             MCDUFFIE              32\n449     GA             MCINTOSH               7\n450     GA           MERIWETHER              78\n451     GA               MILLER               2\n452     GA             MITCHELL               6\n453     GA               MONROE              63\n454     GA           MONTGOMERY               4\n455     GA               MORGAN               2\n456     GA               MURRAY               6\n457     GA             MUSCOGEE              84\n458     GA               NEWTON               9\n459     GA               OCONEE               7\n460     GA           OGLETHORPE               3\n461     GA             PAULDING             200\n462     GA                PEACH              47\n463     GA              PICKENS              16\n464     GA               PIERCE             271\n465     GA                 PIKE              17\n466     GA                 POLK              65\n467     GA              PULASKI               3\n468     GA               PUTNAM              10\n469     GA                RABUN               4\n470     GA             RANDOLPH              12\n471     GA             RICHMOND             206\n472     GA             ROCKDALE              60\n473     GA               SCHLEY               7\n474     GA              SCREVEN               7\n475     GA             SEMINOLE               2\n476     GA             SPALDING              33\n477     GA             STEPHENS               8\n478     GA              STEWART               3\n479     GA               SUMTER               9\n480     GA               TALBOT              13\n481     GA             TATTNALL               4\n482     GA               TAYLOR              11\n483     GA              TELFAIR               5\n484     GA              TERRELL               9\n485     GA               THOMAS              30\n486     GA                 TIFT              13\n487     GA               TOOMBS              28\n488     GA             TREUTLEN               1\n489     GA                TROUP              53\n490     GA               TURNER               7\n491     GA               TWIGGS              12\n492     GA                UPSON              18\n493     GA               WALKER              54\n494     GA               WALTON             117\n495     GA                 WARE             413\n496     GA               WARREN               8\n497     GA           WASHINGTON              34\n498     GA                WAYNE              94\n499     GA              WEBSTER               3\n500     GA                WHITE               3\n501     GA            WHITFIELD              22\n502     GA               WILCOX              15\n503     GA               WILKES               7\n504     GA            WILKINSON              22\n505     GA                WORTH              11\n506     HI               HAWAII               1\n507     HI             HONOLULU               2\n508     HI                KAUAI               1\n509     IA                ADAIR               5\n510     IA                ADAMS               7\n511     IA            ALLAMAKEE              18\n512     IA            APPANOOSE              13\n513     IA              AUDUBON               1\n514     IA               BENTON              39\n515     IA           BLACK HAWK             116\n516     IA                BOONE             206\n517     IA               BREMER              17\n518     IA             BUCHANAN              35\n519     IA          BUENA VISTA               2\n520     IA               BUTLER              23\n521     IA              CALHOUN              16\n522     IA              CARROLL              38\n523     IA                 CASS              13\n524     IA                CEDAR              19\n525     IA          CERRO GORDO             157\n526     IA             CHEROKEE               2\n527     IA            CHICKASAW               7\n528     IA               CLARKE              16\n529     IA                 CLAY               2\n530     IA              CLAYTON              24\n531     IA              CLINTON             140\n532     IA             CRAWFORD               8\n533     IA               DALLAS              46\n534     IA                DAVIS              11\n535     IA              DECATUR               9\n536     IA             DELAWARE              18\n537     IA           DES MOINES             179\n538     IA            DICKINSON               2\n539     IA              DUBUQUE              71\n540     IA                EMMET               6\n541     IA              FAYETTE              23\n542     IA                FLOYD              34\n543     IA             FRANKLIN              11\n544     IA              FREMONT              15\n545     IA               GREENE              19\n546     IA               GRUNDY               9\n547     IA              GUTHRIE              10\n548     IA             HAMILTON              31\n549     IA              HANCOCK              10\n550     IA               HARDIN              20\n551     IA             HARRISON             102\n552     IA                HENRY              26\n553     IA               HOWARD               1\n554     IA             HUMBOLDT              17\n555     IA                  IDA               1\n556     IA                 IOWA              13\n557     IA              JACKSON              26\n558     IA               JASPER              24\n559     IA            JEFFERSON              10\n560     IA              JOHNSON              37\n561     IA                JONES              14\n562     IA               KEOKUK               3\n563     IA              KOSSUTH               5\n564     IA                  LEE             204\n565     IA                 LINN             146\n566     IA               LOUISA               7\n567     IA                LUCAS               5\n568     IA                 LYON               2\n569     IA              MADISON              12\n570     IA              MAHASKA               3\n571     IA               MARION              14\n572     IA             MARSHALL              90\n573     IA                MILLS              96\n574     IA             MITCHELL              15\n575     IA               MONONA              12\n576     IA               MONROE              14\n577     IA           MONTGOMERY              19\n578     IA            MUSCATINE              29\n579     IA              O'BRIEN               1\n580     IA              OSCEOLA               1\n581     IA                 PAGE              13\n582     IA            PALO ALTO               2\n583     IA             PLYMOUTH              14\n584     IA           POCAHONTAS               5\n585     IA                 POLK             235\n586     IA        POTTAWATTAMIE             609\n587     IA            POWESHIEK               7\n588     IA             RINGGOLD              13\n589     IA                  SAC              10\n590     IA                SCOTT             137\n591     IA               SHELBY              12\n592     IA                SIOUX               1\n593     IA                STORY              94\n594     IA                 TAMA              20\n595     IA               TAYLOR               3\n596     IA                UNION              70\n597     IA            VAN BUREN               8\n598     IA              WAPELLO              42\n599     IA               WARREN              37\n600     IA           WASHINGTON              10\n601     IA                WAYNE               5\n602     IA              WEBSTER              65\n603     IA            WINNEBAGO               6\n604     IA           WINNESHIEK               1\n605     IA             WOODBURY             155\n606     IA                WORTH              12\n607     IA               WRIGHT              36\n608     ID                  ADA              81\n609     ID                ADAMS               2\n610     ID              BANNOCK             538\n611     ID            BEAR LAKE              71\n612     ID              BENEWAH              10\n613     ID              BINGHAM              47\n614     ID                BOISE               3\n615     ID               BONNER              40\n616     ID           BONNEVILLE              44\n617     ID             BOUNDARY              44\n618     ID               CANYON             168\n619     ID              CARIBOU              12\n620     ID               CASSIA              16\n621     ID           CLEARWATER               1\n622     ID               CUSTER               1\n623     ID               ELMORE               9\n624     ID             FRANKLIN              20\n625     ID              FREMONT               1\n626     ID                  GEM              26\n627     ID              GOODING               4\n628     ID                IDAHO               4\n629     ID            JEFFERSON               6\n630     ID               JEROME              11\n631     ID             KOOTENAI             205\n632     ID                LATAH              11\n633     ID                LEWIS               2\n634     ID              LINCOLN               6\n635     ID             MINIDOKA              32\n636     ID            NEZ PERCE              13\n637     ID               ONEIDA               8\n638     ID               OWYHEE               7\n639     ID              PAYETTE              23\n640     ID                POWER              12\n641     ID           TWIN FALLS              63\n642     ID               VALLEY               1\n643     ID           WASHINGTON              21\n644     IL                ADAMS             116\n645     IL            ALEXANDER               2\n646     IL                 BOND              23\n647     IL                BOONE              44\n648     IL                BROWN               7\n649     IL               BUREAU              35\n650     IL              CALHOUN               4\n651     IL              CARROLL              96\n652     IL                 CASS              66\n653     IL            CHAMPAIGN             131\n654     IL            CHRISTIAN             104\n655     IL                CLARK              24\n656     IL                 CLAY              14\n657     IL              CLINTON              38\n658     IL                COLES              42\n659     IL                 COOK            8207\n660     IL             CRAWFORD              12\n661     IL           CUMBERLAND               9\n662     IL              DE WITT              46\n663     IL               DEKALB             119\n664     IL              DOUGLAS              60\n665     IL               DUPAGE             837\n666     IL              DUPAGEE              45\n667     IL                EDGAR              12\n668     IL              EDWARDS               4\n669     IL            EFFINGHAM              33\n670     IL              FAYETTE              32\n671     IL                 FORD              23\n672     IL             FRANKLIN              39\n673     IL               FULTON              56\n674     IL             GALLATIN               7\n675     IL               GREENE              13\n676     IL               GRUNDY              83\n677     IL             HAMILTON              19\n678     IL              HANCOCK             127\n679     IL               HARDIN               1\n680     IL            HENDERSON             100\n681     IL                HENRY              74\n682     IL             IROQUOIS              87\n683     IL              JACKSON              37\n684     IL               JASPER               4\n685     IL            JEFFERSON              72\n686     IL               JERSEY              14\n687     IL           JO DAVIESS              14\n688     IL              JOHNSON              26\n689     IL                 KANE             577\n690     IL             KANKAKEE             289\n691     IL              KENDALL             122\n692     IL                 KNOX             885\n693     IL             LA SALLE             132\n694     IL                 LAKE             340\n695     IL             LAWRENCE               6\n696     IL                  LEE              40\n697     IL           LIVINGSTON              12\n698     IL                LOGAN              16\n699     IL                MACON             425\n700     IL             MACOUPIN              79\n701     IL              MADISON             427\n702     IL               MARION             261\n703     IL             MARSHALL              10\n704     IL                MASON              23\n705     IL               MASSAC               9\n706     IL            MCDONOUGH              53\n707     IL              MCHENRY             273\n708     IL               MCLEAN              45\n709     IL               MENARD              10\n710     IL               MERCER              18\n711     IL               MONROE             122\n712     IL           MONTGOMERY              38\n713     IL               MORGAN              43\n714     IL             MOULTRIE              49\n715     IL                 OGLE              75\n716     IL               PEORIA             130\n717     IL                PERRY              20\n718     IL                PIATT              54\n719     IL                 PIKE              50\n720     IL                 POPE               1\n721     IL              PULASKI               7\n722     IL               PUTNAM               5\n723     IL             RANDOLPH              68\n724     IL             RICHLAND               9\n725     IL          ROCK ISLAND              94\n726     IL               SALINE              11\n727     IL             SANGAMON             114\n728     IL             SCHUYLER              32\n729     IL                SCOTT              15\n730     IL               SHELBY              45\n731     IL             ST CLAIR             495\n732     IL                STARK               5\n733     IL           STEPHENSON              33\n734     IL             TAZEWELL              71\n735     IL                UNION              41\n736     IL            VERMILION             178\n737     IL               WABASH              14\n738     IL               WARREN             188\n739     IL           WASHINGTON              29\n740     IL                WAYNE              18\n741     IL                WHITE              16\n742     IL            WHITESIDE             124\n743     IL                 WILL            1784\n744     IL           WILLIAMSON              53\n745     IL            WINNEBAGO              76\n746     IL             WOODFORD              14\n747     IN                ADAMS              11\n748     IN                ALLEN             536\n749     IN          BARTHOLOMEW              12\n750     IN               BENTON               6\n751     IN            BLACKFORD              24\n752     IN                BOONE              22\n753     IN                BROWN               7\n754     IN              CARROLL              26\n755     IN                 CASS              35\n756     IN                CLARK             131\n757     IN                 CLAY              28\n758     IN              CLINTON              28\n759     IN             CRAWFORD              21\n760     IN              DAVIESS              35\n761     IN             DEARBORN              50\n762     IN              DECATUR               7\n763     IN               DEKALB             118\n764     IN             DELAWARE             125\n765     IN               DUBOIS              35\n766     IN              ELKHART             306\n767     IN              FAYETTE              19\n768     IN                FLOYD              85\n769     IN             FOUNTAIN              21\n770     IN             FRANKLIN              10\n771     IN               FULTON               8\n772     IN               GIBSON             153\n773     IN                GRANT              39\n774     IN               GREENE              72\n775     IN             HAMILTON              63\n776     IN              HANCOCK              60\n777     IN             HARRISON             147\n778     IN            HENDRICKS             229\n779     IN                HENRY              35\n780     IN               HOWARD              34\n781     IN           HUNTINGTON              66\n782     IN              JACKSON              11\n783     IN               JASPER              80\n784     IN                  JAY              18\n785     IN            JEFFERSON              10\n786     IN             JENNINGS              13\n787     IN              JOHNSON             165\n788     IN                 KNOX              16\n789     IN            KOSCIUSKO              30\n790     IN             LAGRANGE              16\n791     IN                 LAKE            1999\n792     IN              LAPORTE             360\n793     IN             LAPORTEE              24\n794     IN             LAWRENCE              16\n795     IN              MADISON              70\n796     IN               MARION             703\n797     IN             MARSHALL              40\n798     IN               MARTIN               3\n799     IN                MIAMI             146\n800     IN               MONROE              27\n801     IN           MONTGOMERY              30\n802     IN               MORGAN             105\n803     IN               NEWTON              18\n804     IN                NOBLE              59\n805     IN                 OHIO               5\n806     IN               ORANGE               7\n807     IN                 OWEN              19\n808     IN                PARKE              10\n809     IN                PERRY               7\n810     IN                 PIKE              27\n811     IN               PORTER             550\n812     IN                POSEY              41\n813     IN              PULASKI              11\n814     IN               PUTNAM              41\n815     IN             RANDOLPH              23\n816     IN               RIPLEY               8\n817     IN                 RUSH               7\n818     IN                SCOTT              10\n819     IN               SHELBY              43\n820     IN              SPENCER              23\n821     IN            ST JOSEPH             258\n822     IN               STARKE              58\n823     IN              STEUBEN              45\n824     IN             SULLIVAN              34\n825     IN           TIPPECANOE             118\n826     IN               TIPTON              14\n827     IN                UNION               7\n828     IN          VANDERBURGH             221\n829     IN           VERMILLION              23\n830     IN                 VIGO             103\n831     IN               WABASH              30\n832     IN               WARREN               8\n833     IN              WARRICK              82\n834     IN           WASHINGTON              29\n835     IN                WAYNE              12\n836     IN                WELLS              39\n837     IN                WHITE              23\n838     IN              WHITLEY              38\n839     KS                ALLEN              16\n840     KS             ANDERSON              12\n841     KS             ATCHISON              42\n842     KS               BARBER              11\n843     KS               BARTON              22\n844     KS              BOURBON              47\n845     KS                BROWN              14\n846     KS               BUTLER              76\n847     KS                CHASE              11\n848     KS           CHAUTAUQUA               1\n849     KS             CHEROKEE              38\n850     KS                 CLAY               5\n851     KS                CLOUD              14\n852     KS               COFFEY              10\n853     KS             COMANCHE               1\n854     KS               COWLEY              94\n855     KS             CRAWFORD             205\n856     KS              DECATUR               3\n857     KS            DICKINSON             138\n858     KS             DONIPHAN              24\n859     KS              DOUGLAS             126\n860     KS              EDWARDS               4\n861     KS                  ELK               7\n862     KS                ELLIS              12\n863     KS            ELLSWORTH               3\n864     KS               FINNEY               9\n865     KS                 FORD              22\n866     KS             FRANKLIN              72\n867     KS                GEARY              24\n868     KS                 GRAY               1\n869     KS              GREELEY               3\n870     KS            GREENWOOD               3\n871     KS             HAMILTON               1\n872     KS               HARPER              14\n873     KS               HARVEY             153\n874     KS              HASKELL              19\n875     KS             HODGEMAN               4\n876     KS              JACKSON              56\n877     KS            JEFFERSON             122\n878     KS               JEWELL               1\n879     KS              JOHNSON            1286\n880     KS              KINGMAN              12\n881     KS                KIOWA               1\n882     KS              LABETTE              88\n883     KS          LEAVENWORTH             232\n884     KS              LINCOLN               2\n885     KS                 LINN              31\n886     KS                LOGAN               6\n887     KS                 LYON              91\n888     KS               MARION              46\n889     KS             MARSHALL             233\n890     KS            MCPHERSON              34\n891     KS                MEADE               5\n892     KS                MIAMI             113\n893     KS             MITCHELL               2\n894     KS           MONTGOMERY             111\n895     KS               MORRIS              54\n896     KS               NEMAHA              22\n897     KS               NEOSHO              16\n898     KS               NORTON               2\n899     KS                OSAGE              73\n900     KS              OSBORNE               1\n901     KS               OTTAWA              12\n902     KS               PAWNEE               1\n903     KS             PHILLIPS              25\n904     KS         POTTAWATOMIE              17\n905     KS                PRATT              34\n906     KS              RAWLINS               2\n907     KS                 RENO              67\n908     KS             REPUBLIC               2\n909     KS                 RICE               7\n910     KS                RILEY              30\n911     KS                ROOKS               9\n912     KS                 RUSH              10\n913     KS              RUSSELL               1\n914     KS               SALINE             107\n915     KS                SCOTT               3\n916     KS             SEDGWICK             325\n917     KS               SEWARD              12\n918     KS              SHAWNEE             856\n919     KS              SHERMAN               9\n920     KS                SMITH               2\n921     KS             STAFFORD               3\n922     KS              STANTON               1\n923     KS              STEVENS               3\n924     KS               SUMNER             168\n925     KS               THOMAS               3\n926     KS                TREGO               2\n927     KS            WABAUNSEE              21\n928     KS              WALLACE               9\n929     KS           WASHINGTON              22\n930     KS              WICHITA               2\n931     KS               WILSON               4\n932     KS              WOODSON               7\n933     KS            WYANDOTTE             415\n934     KY                ADAIR               1\n935     KY                ALLEN               5\n936     KY             ANDERSON               5\n937     KY              BALLARD               7\n938     KY               BARREN               5\n939     KY                 BATH               3\n940     KY                 BELL              27\n941     KY                BOONE             236\n942     KY              BOURBON               8\n943     KY                 BOYD             232\n944     KY                BOYLE              62\n945     KY              BRACKEN              11\n946     KY            BREATHITT              36\n947     KY         BRECKINRIDGE              14\n948     KY              BULLITT             125\n949     KY               BUTLER               1\n950     KY             CALDWELL              29\n951     KY             CALLOWAY               4\n952     KY             CAMPBELL              79\n953     KY             CARLISLE               7\n954     KY              CARROLL              19\n955     KY               CARTER              54\n956     KY                CASEY              18\n957     KY            CHRISTIAN              15\n958     KY                CLARK               6\n959     KY                 CLAY               7\n960     KY           CRITTENDEN               1\n961     KY           CUMBERLAND               1\n962     KY              DAVIESS              31\n963     KY             EDMONSON               5\n964     KY              ELLIOTT               1\n965     KY               ESTILL              42\n966     KY              FAYETTE              58\n967     KY              FLEMING               9\n968     KY                FLOYD              84\n969     KY             FRANKLIN               5\n970     KY               FULTON               4\n971     KY             GALLATIN               8\n972     KY              GARRARD               8\n973     KY                GRANT              91\n974     KY               GRAVES              24\n975     KY              GRAYSON              11\n976     KY                GREEN               4\n977     KY              GREENUP             483\n978     KY              HANCOCK               3\n979     KY               HARDIN              67\n980     KY               HARLAN              44\n981     KY             HARRISON              15\n982     KY                 HART               6\n983     KY            HENDERSON              48\n984     KY                HENRY              24\n985     KY              HICKMAN               3\n986     KY              HOPKINS             133\n987     KY              JACKSON               4\n988     KY            JEFFERSON             413\n989     KY            JESSAMINE              13\n990     KY              JOHNSON              50\n991     KY               KENTON             244\n992     KY                KNOTT              16\n993     KY                 KNOX              38\n994     KY                LARUE               7\n995     KY               LAUREL             113\n996     KY             LAWRENCE              97\n997     KY                  LEE               8\n998     KY               LESLIE               3\n999     KY              LETCHER              22\n1000    KY                LEWIS              55\n1001    KY              LINCOLN             113\n1002    KY           LIVINGSTON              11\n1003    KY                LOGAN              16\n1004    KY                 LYON               6\n1005    KY              MADISON              47\n1006    KY             MAGOFFIN               1\n1007    KY               MARION               7\n1008    KY             MARSHALL              22\n1009    KY               MARTIN              16\n1010    KY                MASON               8\n1011    KY            MCCRACKEN              84\n1012    KY             MCCREARY               7\n1013    KY               MCLEAN               5\n1014    KY                MEADE              28\n1015    KY              MENIFEE               1\n1016    KY               MERCER              55\n1017    KY             METCALFE               1\n1018    KY               MONROE               4\n1019    KY           MONTGOMERY               5\n1020    KY               MORGAN               1\n1021    KY           MUHLENBERG              22\n1022    KY               NELSON              59\n1023    KY             NICHOLAS              11\n1024    KY                 OHIO              16\n1025    KY               OLDHAM              35\n1026    KY                 OWEN               3\n1027    KY               OWSLEY               2\n1028    KY            PENDLETON              31\n1029    KY                PERRY              39\n1030    KY                 PIKE             231\n1031    KY               POWELL               6\n1032    KY              PULASKI             104\n1033    KY            ROBERTSON               2\n1034    KY           ROCKCASTLE              32\n1035    KY                ROWAN               4\n1036    KY              RUSSELL               5\n1037    KY                SCOTT              15\n1038    KY               SHELBY              33\n1039    KY              SIMPSON               1\n1040    KY              SPENCER              22\n1041    KY               TAYLOR               2\n1042    KY                 TODD              15\n1043    KY                TRIGG               3\n1044    KY              TRIMBLE               4\n1045    KY                UNION               7\n1046    KY               WARREN              12\n1047    KY           WASHINGTON               3\n1048    KY                WAYNE               2\n1049    KY              WEBSTER              10\n1050    KY              WHITLEY             322\n1051    KY                WOLFE               3\n1052    KY             WOODFORD               5\n1053    LA               ACADIA              13\n1054    LA                ALLEN              19\n1055    LA            ASCENSION             103\n1056    LA           ASSUMPTION               5\n1057    LA            AVOYELLES              37\n1058    LA           BEAUREGARD              43\n1059    LA            BIENVILLE              21\n1060    LA              BOSSIER             285\n1061    LA                CADDO             546\n1062    LA            CALCASIEU             280\n1063    LA             CALDWELL               7\n1064    LA              CAMERON               1\n1065    LA            CATAHOULA               1\n1066    LA            CLAIBORNE              31\n1067    LA            CONCORDIA               3\n1068    LA              DE SOTO              40\n1069    LA     EAST BATON ROUGE             285\n1070    LA         EAST CARROLL               1\n1071    LA       EAST FELICIANA              11\n1072    LA           EVANGELINE              11\n1073    LA             FRANKLIN               4\n1074    LA                GRANT              25\n1075    LA               IBERIA              25\n1076    LA            IBERVILLE              86\n1077    LA              JACKSON              20\n1078    LA            JEFFERSON             368\n1079    LA      JEFFERSON DAVIS               6\n1080    LA             LA SALLE               5\n1081    LA            LAFAYETTE             124\n1082    LA            LAFOURCHE              10\n1083    LA              LINCOLN              16\n1084    LA           LIVINGSTON              78\n1085    LA              MADISON              10\n1086    LA            MOREHOUSE              19\n1087    LA         NATCHITOCHES              22\n1088    LA              ORLEANS             240\n1089    LA             OUACHITA             128\n1090    LA          PLAQUEMINES              17\n1091    LA        POINTE COUPEE              67\n1092    LA              RAPIDES             158\n1093    LA            RED RIVER               6\n1094    LA             RICHLAND               2\n1095    LA               SABINE               8\n1096    LA           ST BERNARD              35\n1097    LA           ST CHARLES              46\n1098    LA             ST JAMES              11\n1099    LA  ST JOHN THE BAPTIST              38\n1100    LA            ST LANDRY              91\n1101    LA            ST MARTIN              31\n1102    LA              ST MARY               2\n1103    LA           ST TAMMANY             128\n1104    LA           TANGIPAHOA             105\n1105    LA               TENSAS               1\n1106    LA           TERREBONNE              14\n1107    LA                UNION               8\n1108    LA            VERMILION               5\n1109    LA               VERNON              42\n1110    LA           WASHINGTON              20\n1111    LA              WEBSTER              68\n1112    LA     WEST BATON ROUGE              73\n1113    LA         WEST CARROLL               3\n1114    LA       WEST FELICIANA               5\n1115    LA                 WINN               2\n1116    MA           BARNSTABLE              44\n1117    MA            BERKSHIRE              50\n1118    MA              BRISTOL             232\n1119    MA                ESSEX             314\n1120    MA             FRANKLIN             113\n1121    MA              HAMPDEN             202\n1122    MA            HAMPSHIRE              68\n1123    MA            MIDDLESEX             673\n1124    MA              NORFOLK             386\n1125    MA             PLYMOUTH             429\n1126    MA              SUFFOLK             558\n1127    MA            WORCESTER             310\n1128    MD             ALLEGANY             509\n1129    MD         ANNE ARUNDEL             406\n1130    MD            BALTIMORE             415\n1131    MD              CALVERT             103\n1132    MD             CAROLINE               8\n1133    MD              CARROLL             118\n1134    MD                CECIL             393\n1135    MD              CHARLES             112\n1136    MD           DORCHESTER               8\n1137    MD            FREDERICK             157\n1138    MD              GARRETT              53\n1139    MD              HARFORD             248\n1140    MD               HOWARD              79\n1141    MD     INDEPENDENT CITY             722\n1142    MD                 KENT               3\n1143    MD           MONTGOMERY             302\n1144    MD       PRINCE GEORGES             809\n1145    MD          QUEEN ANNES              22\n1146    MD             SOMERSET               1\n1147    MD             ST MARYS              94\n1148    MD               TALBOT               2\n1149    MD           WASHINGTON             127\n1150    MD             WICOMICO              12\n1151    MD            WORCESTER               6\n1152    ME         ANDROSCOGGIN              22\n1153    ME            AROOSTOOK              57\n1154    ME           CUMBERLAND              71\n1155    ME             FRANKLIN               2\n1156    ME              HANCOCK               3\n1157    ME             KENNEBEC             109\n1158    ME                 KNOX               5\n1159    ME              LINCOLN               7\n1160    ME               OXFORD              36\n1161    ME            PENOBSCOT             117\n1162    ME          PISCATAQUIS              75\n1163    ME            SAGADAHOC               8\n1164    ME             SOMERSET              67\n1165    ME                WALDO              11\n1166    ME           WASHINGTON              17\n1167    ME                 YORK              47\n1168    MI               ALCONA               1\n1169    MI                ALGER               8\n1170    MI              ALLEGAN              27\n1171    MI               ALPENA               3\n1172    MI               ARENAC              19\n1173    MI               BARAGA               4\n1174    MI                BARRY              16\n1175    MI                  BAY              58\n1176    MI               BENZIE               2\n1177    MI              BERRIEN             136\n1178    MI               BRANCH              13\n1179    MI              CALHOUN             164\n1180    MI                 CASS              89\n1181    MI            CHEBOYGAN               2\n1182    MI             CHIPPEWA               8\n1183    MI                CLARE               5\n1184    MI              CLINTON              10\n1185    MI             CRAWFORD               1\n1186    MI                DELTA             188\n1187    MI            DICKINSON               7\n1188    MI                EATON              42\n1189    MI                EMMET               1\n1190    MI              GENESEE             195\n1191    MI              GLADWIN               4\n1192    MI              GOGEBIC               3\n1193    MI       GRAND TRAVERSE               4\n1194    MI              GRATIOT               5\n1195    MI            HILLSDALE              17\n1196    MI             HOUGHTON               6\n1197    MI                HURON               9\n1198    MI               INGHAM              46\n1199    MI                IONIA              32\n1200    MI                IOSCO              13\n1201    MI                 IRON               3\n1202    MI             ISABELLA               5\n1203    MI              JACKSON              77\n1204    MI            KALAMAZOO              58\n1205    MI             KALKASKA               3\n1206    MI                 KENT             149\n1207    MI                 LAKE               1\n1208    MI               LAPEER              36\n1209    MI             LEELANAU               3\n1210    MI              LENAWEE              70\n1211    MI           LIVINGSTON              33\n1212    MI                 LUCE               2\n1213    MI             MACKINAC               2\n1214    MI               MACOMB             170\n1215    MI             MANISTEE              12\n1216    MI            MARQUETTE             137\n1217    MI                MASON              17\n1218    MI              MECOSTA               5\n1219    MI            MENOMINEE              14\n1220    MI              MIDLAND               5\n1221    MI               MONROE             266\n1222    MI             MONTCALM              17\n1223    MI             MUSKEGON              24\n1224    MI              NEWAYGO              15\n1225    MI              OAKLAND             265\n1226    MI               OCEANA               1\n1227    MI               OGEMAW               6\n1228    MI            ONTONAGON              11\n1229    MI              OSCEOLA               2\n1230    MI               OSCODA               1\n1231    MI               OTSEGO               1\n1232    MI               OTTAWA              40\n1233    MI         PRESQUE ISLE               1\n1234    MI            ROSCOMMON               2\n1235    MI              SAGINAW              80\n1236    MI              SANILAC              14\n1237    MI          SCHOOLCRAFT              13\n1238    MI           SHIAWASSEE             100\n1239    MI             ST CLAIR             109\n1240    MI            ST JOSEPH              42\n1241    MI              TUSCOLA              38\n1242    MI            VAN BUREN              27\n1243    MI            WASHTENAW              63\n1244    MI                WAYNE             849\n1245    MI              WEXFORD               5\n1246    MN               AITKIN              19\n1247    MN                ANOKA             346\n1248    MN               BECKER              62\n1249    MN             BELTRAMI              10\n1250    MN               BENTON              20\n1251    MN            BIG STONE              10\n1252    MN           BLUE EARTH              59\n1253    MN                BROWN              25\n1254    MN              CARLTON             181\n1255    MN               CARVER              41\n1256    MN                 CASS              20\n1257    MN             CHIPPEWA               6\n1258    MN              CHISAGO              91\n1259    MN                 CLAY             175\n1260    MN           CLEARWATER               9\n1261    MN           COTTONWOOD               4\n1262    MN            CROW WING             143\n1263    MN               DAKOTA             348\n1264    MN                DODGE               1\n1265    MN              DOUGLAS              44\n1266    MN            FARIBAULT               8\n1267    MN             FILLMORE               4\n1268    MN             FREEBORN              24\n1269    MN              GOODHUE              35\n1270    MN                GRANT               3\n1271    MN             HENNEPIN             651\n1272    MN              HOUSTON              42\n1273    MN              HUBBARD              14\n1274    MN               ISANTI              57\n1275    MN               ITASCA              37\n1276    MN              JACKSON               7\n1277    MN              KANABEC              10\n1278    MN            KANDIYOHI             157\n1279    MN              KITTSON               4\n1280    MN          KOOCHICHING              43\n1281    MN        LAC QUI PARLE               2\n1282    MN                 LAKE              68\n1283    MN    LAKE OF THE WOODS               6\n1284    MN             LE SUEUR              27\n1285    MN              LINCOLN               4\n1286    MN                 LYON              10\n1287    MN             MAHNOMEN               7\n1288    MN             MARSHALL              13\n1289    MN               MARTIN               3\n1290    MN               MCLEOD              46\n1291    MN               MEEKER              32\n1292    MN           MILLE LACS              34\n1293    MN             MORRISON              43\n1294    MN                MOWER              20\n1295    MN               MURRAY               3\n1296    MN             NICOLLET               6\n1297    MN               NOBLES               6\n1298    MN               NORMAN               9\n1299    MN              OLMSTED              18\n1300    MN           OTTER TAIL              54\n1301    MN           PENNINGTON              62\n1302    MN                 PINE              35\n1303    MN            PIPESTONE               5\n1304    MN                 POLK             106\n1305    MN                 POPE              43\n1306    MN               RAMSEY             579\n1307    MN             RED LAKE              10\n1308    MN              REDWOOD               9\n1309    MN             RENVILLE              13\n1310    MN                 RICE              37\n1311    MN                 ROCK               9\n1312    MN               ROSEAU               4\n1313    MN                SCOTT              72\n1314    MN            SHERBURNE             148\n1315    MN               SIBLEY              11\n1316    MN             ST LOUIS             595\n1317    MN              STEARNS             100\n1318    MN               STEELE              16\n1319    MN              STEVENS               9\n1320    MN                SWIFT              16\n1321    MN                 TODD              28\n1322    MN             TRAVERSE               2\n1323    MN              WABASHA              13\n1324    MN               WADENA               9\n1325    MN               WASECA              49\n1326    MN           WASHINGTON             207\n1327    MN             WATONWAN              32\n1328    MN               WILKIN              34\n1329    MN               WINONA              26\n1330    MN               WRIGHT              62\n1331    MN      YELLOW MEDICINE               5\n1332    MO                ADAIR              21\n1333    MO               ANDREW              17\n1334    MO             ATCHISON               5\n1335    MO              AUDRAIN              25\n1336    MO                BARRY              17\n1337    MO               BARTON              26\n1338    MO                BATES              12\n1339    MO               BENTON              29\n1340    MO            BOLLINGER              12\n1341    MO                BOONE              52\n1342    MO             BUCHANAN             150\n1343    MO               BUTLER              84\n1344    MO             CALDWELL              38\n1345    MO             CALLAWAY              15\n1346    MO               CAMDEN              11\n1347    MO       CAPE GIRARDEAU              86\n1348    MO              CARROLL              23\n1349    MO               CARTER              20\n1350    MO                 CASS             235\n1351    MO                CEDAR              10\n1352    MO             CHARITON              50\n1353    MO            CHRISTIAN             112\n1354    MO                CLARK              29\n1355    MO                 CLAY             681\n1356    MO              CLINTON              97\n1357    MO                 COLE              46\n1358    MO               COOPER              60\n1359    MO             CRAWFORD              17\n1360    MO                 DADE              19\n1361    MO               DALLAS               8\n1362    MO              DAVIESS              21\n1363    MO               DEKALB              36\n1364    MO                 DENT               2\n1365    MO              DOUGLAS               1\n1366    MO              DUNKLIN              24\n1367    MO             FRANKLIN              54\n1368    MO            GASCONADE              14\n1369    MO               GENTRY               5\n1370    MO               GREENE             362\n1371    MO               GRUNDY              23\n1372    MO             HARRISON              19\n1373    MO                HENRY              20\n1374    MO              HICKORY               3\n1375    MO                 HOLT              16\n1376    MO               HOWARD               7\n1377    MO               HOWELL              87\n1378    MO     INDEPENDENT CITY             226\n1379    MO                 IRON              13\n1380    MO              JACKSON            2055\n1381    MO               JASPER             127\n1382    MO            JEFFERSON             436\n1383    MO              JOHNSON              42\n1384    MO                 KNOX              16\n1385    MO              LACLEDE              18\n1386    MO            LAFAYETTE              74\n1387    MO             LAWRENCE              64\n1388    MO                LEWIS              20\n1389    MO              LINCOLN              18\n1390    MO                 LINN             140\n1391    MO           LIVINGSTON              44\n1392    MO                MACON              47\n1393    MO              MADISON              30\n1394    MO               MARIES               1\n1395    MO               MARION              93\n1396    MO             MCDONALD               5\n1397    MO               MERCER               9\n1398    MO               MILLER              15\n1399    MO          MISSISSIPPI               1\n1400    MO             MONITEAU              24\n1401    MO               MONROE              24\n1402    MO           MONTGOMERY               9\n1403    MO               MORGAN              24\n1404    MO           NEW MADRID              10\n1405    MO               NEWTON              38\n1406    MO              NODAWAY               7\n1407    MO               OREGON             132\n1408    MO                OSAGE              12\n1409    MO                OZARK               5\n1410    MO             PEMISCOT               3\n1411    MO                PERRY              29\n1412    MO               PETTIS              95\n1413    MO               PHELPS              18\n1414    MO                 PIKE              33\n1415    MO               PLATTE              98\n1416    MO                 POLK              38\n1417    MO              PULASKI               5\n1418    MO               PUTNAM               1\n1419    MO                RALLS              23\n1420    MO             RANDOLPH             138\n1421    MO                  RAY             126\n1422    MO             REYNOLDS               5\n1423    MO               RIPLEY              48\n1424    MO     SAINTE GENEVIEVE              27\n1425    MO               SALINE              27\n1426    MO             SCHUYLER               8\n1427    MO             SCOTLAND               1\n1428    MO                SCOTT             126\n1429    MO              SHANNON              10\n1430    MO               SHELBY              12\n1431    MO           ST CHARLES             166\n1432    MO             ST CLAIR               8\n1433    MO          ST FRANCOIS             202\n1434    MO             ST LOUIS             316\n1435    MO             STODDARD              47\n1436    MO                STONE              20\n1437    MO             SULLIVAN               6\n1438    MO                TANEY              19\n1439    MO                TEXAS              34\n1440    MO               VERNON              25\n1441    MO               WARREN               8\n1442    MO           WASHINGTON              50\n1443    MO                WAYNE              38\n1444    MO              WEBSTER              86\n1445    MO                WORTH               3\n1446    MO               WRIGHT              40\n1447    MS                ADAMS               3\n1448    MS               ALCORN              45\n1449    MS                AMITE              16\n1450    MS               ATTALA              33\n1451    MS               BENTON              12\n1452    MS              CARROLL              14\n1453    MS            CHICKASAW              11\n1454    MS              CHOCTAW               6\n1455    MS            CLAIBORNE               3\n1456    MS               CLARKE              15\n1457    MS                 CLAY              10\n1458    MS              COAHOMA               1\n1459    MS               COPIAH              16\n1460    MS            COVINGTON               8\n1461    MS               DESOTO             341\n1462    MS              FORREST              64\n1463    MS             FRANKLIN              12\n1464    MS               GEORGE              21\n1465    MS               GREENE               2\n1466    MS              GRENADA              15\n1467    MS              HANCOCK              57\n1468    MS             HARRISON              46\n1469    MS                HINDS             130\n1470    MS               HOLMES              23\n1471    MS            HUMPHREYS               3\n1472    MS            ISSAQUENA               1\n1473    MS             ITAWAMBA               7\n1474    MS              JACKSON              42\n1475    MS               JASPER              10\n1476    MS            JEFFERSON               4\n1477    MS                JONES              10\n1478    MS               KEMPER               6\n1479    MS            LAFAYETTE               5\n1480    MS                LAMAR              27\n1481    MS           LAUDERDALE             169\n1482    MS             LAWRENCE              15\n1483    MS                LEAKE               6\n1484    MS                  LEE              23\n1485    MS              LEFLORE               1\n1486    MS              LINCOLN              46\n1487    MS              LOWNDES              79\n1488    MS              MADISON              45\n1489    MS               MARION              24\n1490    MS             MARSHALL              50\n1491    MS               MONROE              65\n1492    MS           MONTGOMERY              15\n1493    MS              NESHOBA               3\n1494    MS               NEWTON              47\n1495    MS              NOXUBEE               8\n1496    MS            OKTIBBEHA              10\n1497    MS               PANOLA              13\n1498    MS          PEARL RIVER              67\n1499    MS                PERRY              11\n1500    MS                 PIKE              56\n1501    MS             PONTOTOC               3\n1502    MS             PRENTISS               1\n1503    MS              QUITMAN               5\n1504    MS               RANKIN             104\n1505    MS                SCOTT              12\n1506    MS              SHARKEY               1\n1507    MS              SIMPSON              15\n1508    MS                STONE               8\n1509    MS            SUNFLOWER               2\n1510    MS         TALLAHATCHIE               3\n1511    MS                 TATE              36\n1512    MS               TIPPAH               8\n1513    MS           TISHOMINGO              10\n1514    MS               TUNICA               3\n1515    MS                UNION               8\n1516    MS             WALTHALL               5\n1517    MS               WARREN              49\n1518    MS           WASHINGTON               4\n1519    MS                WAYNE              18\n1520    MS              WEBSTER               6\n1521    MS            WILKINSON               5\n1522    MS              WINSTON              16\n1523    MS            YALOBUSHA              10\n1524    MS                YAZOO               7\n1525    MT           BEAVERHEAD               8\n1526    MT             BIG HORN               5\n1527    MT               BLAINE              32\n1528    MT           BROADWATER               4\n1529    MT               CARBON              40\n1530    MT              CASCADE             199\n1531    MT             CHOUTEAU               9\n1532    MT               CUSTER              61\n1533    MT              DANIELS               2\n1534    MT               DAWSON             301\n1535    MT           DEER LODGE              18\n1536    MT               FALLON               4\n1537    MT               FERGUS              11\n1538    MT             FLATHEAD             367\n1539    MT             GALLATIN              30\n1540    MT              GLACIER              29\n1541    MT        GOLDEN VALLEY               2\n1542    MT              GRANITE               8\n1543    MT                 HILL             513\n1544    MT            JEFFERSON               8\n1545    MT         JUDITH BASIN               2\n1546    MT                 LAKE              46\n1547    MT      LEWIS AND CLARK              83\n1548    MT              LIBERTY               9\n1549    MT              LINCOLN              31\n1550    MT              MADISON               1\n1551    MT               MCCONE               1\n1552    MT              MEAGHER               1\n1553    MT              MINERAL              14\n1554    MT             MISSOULA             362\n1555    MT          MUSSELSHELL               3\n1556    MT                 PARK              64\n1557    MT             PHILLIPS               9\n1558    MT              PONDERA              25\n1559    MT         POWDER RIVER               3\n1560    MT               POWELL               9\n1561    MT              PRAIRIE              11\n1562    MT              RAVALLI              49\n1563    MT             RICHLAND              26\n1564    MT            ROOSEVELT               9\n1565    MT              ROSEBUD              84\n1566    MT              SANDERS              37\n1567    MT             SHERIDAN               7\n1568    MT           SILVER BOW              20\n1569    MT           STILLWATER              52\n1570    MT          SWEET GRASS               7\n1571    MT                TETON               5\n1572    MT                TOOLE              28\n1573    MT             TREASURE               2\n1574    MT               VALLEY             143\n1575    MT            WHEATLAND               1\n1576    MT               WIBAUX               7\n1577    MT          YELLOWSTONE             525\n1578    NC             ALAMANCE              14\n1579    NC            ALEXANDER              10\n1580    NC            ALLEGHANY               1\n1581    NC                ANSON              12\n1582    NC                 ASHE               3\n1583    NC                AVERY               4\n1584    NC             BEAUFORT               4\n1585    NC               BLADEN               7\n1586    NC            BRUNSWICK              22\n1587    NC             BUNCOMBE              94\n1588    NC                BURKE              15\n1589    NC             CABARRUS              84\n1590    NC             CALDWELL               5\n1591    NC               CAMDEN              10\n1592    NC             CARTERET               5\n1593    NC              CASWELL               7\n1594    NC              CATAWBA              22\n1595    NC              CHATHAM               3\n1596    NC             CHEROKEE               8\n1597    NC               CHOWAN               2\n1598    NC                 CLAY               1\n1599    NC            CLEVELAND              12\n1600    NC             COLUMBUS              17\n1601    NC               CRAVEN              14\n1602    NC           CUMBERLAND              39\n1603    NC            CURRITUCK              29\n1604    NC                 DARE               3\n1605    NC             DAVIDSON              90\n1606    NC                DAVIE              28\n1607    NC               DUPLIN               4\n1608    NC               DURHAM              24\n1609    NC            EDGECOMBE               7\n1610    NC              FORSYTH              77\n1611    NC             FRANKLIN               5\n1612    NC               GASTON              55\n1613    NC                GATES               6\n1614    NC               GRAHAM               2\n1615    NC            GRANVILLE               8\n1616    NC             GUILFORD              78\n1617    NC              HALIFAX              36\n1618    NC              HARNETT              15\n1619    NC              HAYWOOD              21\n1620    NC            HENDERSON              32\n1621    NC             HERTFORD               3\n1622    NC                 HOKE               4\n1623    NC              IREDELL              48\n1624    NC              JACKSON               8\n1625    NC             JOHNSTON              56\n1626    NC                  LEE               8\n1627    NC               LENOIR               5\n1628    NC              LINCOLN              19\n1629    NC              MADISON              66\n1630    NC               MARTIN               4\n1631    NC             MCDOWELL              26\n1632    NC          MECKLENBURG             224\n1633    NC             MITCHELL              13\n1634    NC           MONTGOMERY              22\n1635    NC                MOORE              41\n1636    NC                 NASH             205\n1637    NC          NEW HANOVER              45\n1638    NC          NORTHAMPTON              15\n1639    NC               ONSLOW               4\n1640    NC               ORANGE              15\n1641    NC              PAMLICO               1\n1642    NC           PASQUOTANK              16\n1643    NC               PENDER              18\n1644    NC           PERQUIMANS               2\n1645    NC               PERSON               2\n1646    NC                 PITT              19\n1647    NC                 POLK               5\n1648    NC             RANDOLPH              18\n1649    NC             RICHMOND             291\n1650    NC              ROBESON             122\n1651    NC           ROCKINGHAM              12\n1652    NC                ROWAN             228\n1653    NC           RUTHERFORD              30\n1654    NC              SAMPSON               5\n1655    NC             SCOTLAND              30\n1656    NC               STANLY              49\n1657    NC               STOKES               9\n1658    NC                SURRY              30\n1659    NC                SWAIN               3\n1660    NC         TRANSYLVANIA               4\n1661    NC                UNION              50\n1662    NC                VANCE               4\n1663    NC                 WAKE             322\n1664    NC               WARREN               6\n1665    NC           WASHINGTON               6\n1666    NC              WATAUGA               1\n1667    NC                WAYNE              15\n1668    NC               WILKES               1\n1669    NC               WILSON              49\n1670    NC               YADKIN               6\n1671    NC               YANCEY              23\n1672    ND                ADAMS               2\n1673    ND               BARNES              25\n1674    ND               BENSON               2\n1675    ND            BOTTINEAU               6\n1676    ND               BOWMAN               1\n1677    ND                BURKE               7\n1678    ND             BURLEIGH             317\n1679    ND                 CASS             373\n1680    ND             CAVALIER               2\n1681    ND               DICKEY              11\n1682    ND               DIVIDE              12\n1683    ND                 DUNN               1\n1684    ND                 EDDY               7\n1685    ND               EMMONS               2\n1686    ND               FOSTER              14\n1687    ND        GOLDEN VALLEY               4\n1688    ND          GRAND FORKS             173\n1689    ND                GRANT               5\n1690    ND               GRIGGS               2\n1691    ND            HETTINGER               1\n1692    ND               KIDDER               9\n1693    ND              LAMOURE               5\n1694    ND                LOGAN               2\n1695    ND              MCHENRY              78\n1696    ND             MCINTOSH              10\n1697    ND             MCKENZIE               1\n1698    ND               MCLEAN              34\n1699    ND               MORTON             191\n1700    ND            MOUNTRAIL              14\n1701    ND               NELSON               6\n1702    ND               OLIVER               2\n1703    ND              PEMBINA               4\n1704    ND               PIERCE               9\n1705    ND               RAMSEY              14\n1706    ND               RANSOM              70\n1707    ND             RENVILLE               8\n1708    ND             RICHLAND              58\n1709    ND              ROLETTE               6\n1710    ND              SARGENT               3\n1711    ND             SHERIDAN               8\n1712    ND                SIOUX               1\n1713    ND                SLOPE               2\n1714    ND                STARK              34\n1715    ND             STUTSMAN              48\n1716    ND               TRAILL              11\n1717    ND                WALSH              76\n1718    ND                 WARD             407\n1719    ND                WELLS             101\n1720    ND             WILLIAMS              25\n1721    NE                ADAMS              77\n1722    NE             ANTELOPE               2\n1723    NE               ARTHUR               2\n1724    NE               BANNER               8\n1725    NE               BLAINE               2\n1726    NE                BOONE               2\n1727    NE            BOX BUTTE            1168\n1728    NE                BROWN               1\n1729    NE              BUFFALO             107\n1730    NE                 BURT               9\n1731    NE               BUTLER              40\n1732    NE                 CASS             192\n1733    NE                CEDAR               8\n1734    NE                CHASE               2\n1735    NE               CHERRY               1\n1736    NE             CHEYENNE              68\n1737    NE                 CLAY              13\n1738    NE               COLFAX               4\n1739    NE               CUMING               4\n1740    NE               CUSTER              82\n1741    NE               DAKOTA              35\n1742    NE                DAWES             120\n1743    NE               DAWSON             142\n1744    NE                DEUEL              13\n1745    NE                DIXON               5\n1746    NE                DODGE              78\n1747    NE              DOUGLAS            3797\n1748    NE                DUNDY               5\n1749    NE             FILLMORE              13\n1750    NE             FRANKLIN               3\n1751    NE             FRONTIER              30\n1752    NE               FURNAS              18\n1753    NE                 GAGE             152\n1754    NE               GARDEN              21\n1755    NE               GOSPER               9\n1756    NE                GRANT               8\n1757    NE              GREELEY               3\n1758    NE                 HALL             135\n1759    NE             HAMILTON              14\n1760    NE               HARLAN               4\n1761    NE                HAYES               3\n1762    NE            HITCHCOCK              15\n1763    NE                 HOLT               3\n1764    NE               HOOKER              17\n1765    NE               HOWARD              21\n1766    NE            JEFFERSON              42\n1767    NE              JOHNSON              30\n1768    NE              KEARNEY               6\n1769    NE                KEITH              98\n1770    NE              KIMBALL              24\n1771    NE                 KNOX               9\n1772    NE            LANCASTER            1619\n1773    NE              LINCOLN            2289\n1774    NE                LOGAN              35\n1775    NE                 LOUP               1\n1776    NE              MADISON              45\n1777    NE            MCPHERSON              19\n1778    NE              MERRICK              14\n1779    NE              MORRILL             112\n1780    NE                NANCE               1\n1781    NE               NEMAHA              12\n1782    NE             NUCKOLLS               8\n1783    NE                 OTOE              71\n1784    NE               PAWNEE               7\n1785    NE              PERKINS              20\n1786    NE               PHELPS               7\n1787    NE               PIERCE               7\n1788    NE               PLATTE              92\n1789    NE                 POLK               8\n1790    NE           RED WILLOW             124\n1791    NE           RICHARDSON              66\n1792    NE                 ROCK               1\n1793    NE               SALINE              41\n1794    NE                SARPY             840\n1795    NE             SAUNDERS             123\n1796    NE         SCOTTS BLUFF             614\n1797    NE               SEWARD             114\n1798    NE             SHERIDAN              49\n1799    NE              SHERMAN              18\n1800    NE                SIOUX               1\n1801    NE              STANTON              11\n1802    NE               THAYER              22\n1803    NE               THOMAS               5\n1804    NE             THURSTON               1\n1805    NE               VALLEY              13\n1806    NE           WASHINGTON              75\n1807    NE                WAYNE               3\n1808    NE              WEBSTER               5\n1809    NE                 YORK              18\n1810    NH              BELKNAP               2\n1811    NH              CARROLL              12\n1812    NH             CHESHIRE              28\n1813    NH                 COOS              19\n1814    NH              GRAFTON               7\n1815    NH         HILLSBOROUGH             136\n1816    NH            MERRIMACK               9\n1817    NH           ROCKINGHAM             146\n1818    NH            STRAFFORD              27\n1819    NH             SULLIVAN               7\n1820    NJ             ATLANTIC              58\n1821    NJ               BERGEN             513\n1822    NJ           BURLINGTON             464\n1823    NJ               CAMDEN             427\n1824    NJ             CAPE MAY              19\n1825    NJ           CUMBERLAND              39\n1826    NJ                ESSEX            1097\n1827    NJ           GLOUCESTER             270\n1828    NJ               HUDSON             871\n1829    NJ            HUNTERDON              68\n1830    NJ               MERCER             361\n1831    NJ            MIDDLESEX             955\n1832    NJ             MONMOUTH             862\n1833    NJ               MORRIS             296\n1834    NJ                OCEAN             589\n1835    NJ              PASSAIC             231\n1836    NJ                SALEM              30\n1837    NJ             SOMERSET             148\n1838    NJ               SUSSEX             178\n1839    NJ                UNION             738\n1840    NJ               WARREN             115\n1841    NM           BERNALILLO             227\n1842    NM               CATRON               4\n1843    NM               CHAVES              14\n1844    NM               CIBOLA              27\n1845    NM               COLFAX              25\n1846    NM                CURRY             431\n1847    NM              DE BACA               7\n1848    NM             DONA ANA              91\n1849    NM                 EDDY              43\n1850    NM                GRANT              13\n1851    NM            GUADALUPE               8\n1852    NM              HIDALGO              11\n1853    NM                  LEA               4\n1854    NM              LINCOLN               7\n1855    NM                 LUNA              41\n1856    NM             MCKINLEY             240\n1857    NM                OTERO              45\n1858    NM                 QUAY              42\n1859    NM           RIO ARRIBA               2\n1860    NM            ROOSEVELT              58\n1861    NM             SAN JUAN              56\n1862    NM           SAN MIGUEL               6\n1863    NM             SANDOVAL              80\n1864    NM             SANTA FE              26\n1865    NM               SIERRA               3\n1866    NM              SOCORRO              12\n1867    NM             TORRANCE              29\n1868    NM                UNION               5\n1869    NM             VALENCIA             401\n1870    NV            CHURCHILL               5\n1871    NV                CLARK             269\n1872    NV                 ELKO              77\n1873    NV             HUMBOLDT              47\n1874    NV     INDEPENDENT CITY               8\n1875    NV               LANDER               5\n1876    NV              LINCOLN              26\n1877    NV                 LYON              42\n1878    NV                  NYE              12\n1879    NV             PERSHING               5\n1880    NV               STOREY               1\n1881    NV               WASHOE             249\n1882    NY               ALBANY             629\n1883    NY             ALLEGANY              55\n1884    NY                BRONX             648\n1885    NY               BROOME             141\n1886    NY          CATTARAUGUS              72\n1887    NY               CAYUGA              36\n1888    NY           CHAUTAUQUA              57\n1889    NY              CHEMUNG              21\n1890    NY             CHENANGO              39\n1891    NY              CLINTON              24\n1892    NY             COLUMBIA             126\n1893    NY             CORTLAND              11\n1894    NY             DELAWARE              25\n1895    NY             DUTCHESS            1157\n1896    NY                 ERIE             784\n1897    NY                ESSEX              27\n1898    NY             FRANKLIN              11\n1899    NY               FULTON              20\n1900    NY              GENESEE              46\n1901    NY               GREENE             196\n1902    NY             HERKIMER              48\n1903    NY            JEFFERSON              19\n1904    NY                KINGS             970\n1905    NY                LEWIS               5\n1906    NY           LIVINGSTON              71\n1907    NY              MADISON              43\n1908    NY               MONROE             131\n1909    NY           MONTGOMERY              36\n1910    NY               NASSAU            2076\n1911    NY             NEW YORK             373\n1912    NY              NIAGARA             119\n1913    NY               ONEIDA              72\n1914    NY             ONONDAGA             184\n1915    NY              ONTARIO              33\n1916    NY               ORANGE             342\n1917    NY              ORLEANS              11\n1918    NY               OSWEGO              91\n1919    NY               OTSEGO              89\n1920    NY               PUTNAM             317\n1921    NY               QUEENS            1470\n1922    NY           RENSSELAER             358\n1923    NY             RICHMOND             177\n1924    NY             ROCKLAND              89\n1925    NY             SARATOGA             233\n1926    NY          SCHENECTADY             149\n1927    NY            SCHOHARIE              43\n1928    NY             SCHUYLER               7\n1929    NY               SENECA              13\n1930    NY          ST LAWRENCE              79\n1931    NY              STEUBEN              99\n1932    NY              SUFFOLK            3685\n1933    NY             SULLIVAN              14\n1934    NY                TIOGA              32\n1935    NY             TOMPKINS               8\n1936    NY               ULSTER             211\n1937    NY               WARREN              26\n1938    NY           WASHINGTON              60\n1939    NY                WAYNE              46\n1940    NY          WESTCHESTER            1040\n1941    NY              WYOMING              50\n1942    NY                YATES               6\n1943    OH                ADAMS              24\n1944    OH                ALLEN              92\n1945    OH              ASHLAND              56\n1946    OH            ASHTABULA             270\n1947    OH               ATHENS              21\n1948    OH             AUGLAIZE              23\n1949    OH              BELMONT              22\n1950    OH                BROWN              14\n1951    OH               BUTLER             220\n1952    OH              CARROLL              25\n1953    OH            CHAMPAIGN              28\n1954    OH                CLARK              23\n1955    OH             CLERMONT              68\n1956    OH              CLINTON              25\n1957    OH           COLUMBIANA             211\n1958    OH            COSHOCTON              87\n1959    OH             CRAWFORD             112\n1960    OH             CUYAHOGA             552\n1961    OH                DARKE              16\n1962    OH             DEFIANCE              33\n1963    OH             DELAWARE              58\n1964    OH                 ERIE             213\n1965    OH            FAIRFIELD              53\n1966    OH              FAYETTE              18\n1967    OH             FRANKLIN             359\n1968    OH               FULTON              60\n1969    OH               GALLIA              19\n1970    OH               GEAUGA              29\n1971    OH               GREENE              19\n1972    OH             GUERNSEY              16\n1973    OH             HAMILTON             278\n1974    OH              HANCOCK              71\n1975    OH               HARDIN              22\n1976    OH             HARRISON              26\n1977    OH                HENRY              38\n1978    OH             HIGHLAND              15\n1979    OH              HOCKING               9\n1980    OH               HOLMES               4\n1981    OH                HURON             674\n1982    OH              JACKSON              14\n1983    OH            JEFFERSON             108\n1984    OH                 KNOX              17\n1985    OH                 LAKE             114\n1986    OH             LAWRENCE             305\n1987    OH              LICKING              49\n1988    OH                LOGAN              54\n1989    OH               LORAIN             280\n1990    OH                LUCAS             842\n1991    OH              MADISON              20\n1992    OH             MAHONING             176\n1993    OH               MARION              60\n1994    OH               MEDINA             117\n1995    OH                MEIGS              20\n1996    OH               MERCER               8\n1997    OH                MIAMI              24\n1998    OH               MONROE               4\n1999    OH           MONTGOMERY              83\n2000    OH               MORGAN               3\n2001    OH               MORROW              21\n2002    OH            MUSKINGUM              29\n2003    OH                NOBLE               3\n2004    OH               OTTAWA             151\n2005    OH             PAULDING              18\n2006    OH                PERRY              12\n2007    OH             PICKAWAY              40\n2008    OH                 PIKE              39\n2009    OH              PORTAGE              51\n2010    OH               PREBLE              12\n2011    OH               PUTNAM              58\n2012    OH             RICHLAND             251\n2013    OH                 ROSS              40\n2014    OH             SANDUSKY             129\n2015    OH               SCIOTO             451\n2016    OH               SENECA             175\n2017    OH               SHELBY              21\n2018    OH                STARK             335\n2019    OH               SUMMIT             140\n2020    OH             TRUMBULL             121\n2021    OH           TUSCARAWAS             133\n2022    OH                UNION              54\n2023    OH             VAN WERT              16\n2024    OH               VINTON               6\n2025    OH               WARREN              69\n2026    OH           WASHINGTON              22\n2027    OH                WAYNE              65\n2028    OH             WILLIAMS              42\n2029    OH                 WOOD             316\n2030    OH              WYANDOT              35\n2031    OK                ADAIR               2\n2032    OK              ALFALFA               5\n2033    OK                ATOKA               4\n2034    OK               BEAVER               1\n2035    OK              BECKHAM              11\n2036    OK               BLAINE               7\n2037    OK                BRYAN              49\n2038    OK                CADDO              24\n2039    OK             CANADIAN              59\n2040    OK               CARTER               8\n2041    OK             CHEROKEE               6\n2042    OK              CHOCTAW              32\n2043    OK            CLEVELAND              41\n2044    OK                 COAL               5\n2045    OK             COMANCHE              15\n2046    OK               COTTON               3\n2047    OK                CRAIG              17\n2048    OK                CREEK              75\n2049    OK               CUSTER              38\n2050    OK             DELAWARE              14\n2051    OK                DEWEY               2\n2052    OK                ELLIS               7\n2053    OK             GARFIELD             161\n2054    OK               GARVIN              11\n2055    OK                GRADY              55\n2056    OK                GRANT              12\n2057    OK                GREER               5\n2058    OK               HARPER               1\n2059    OK              HASKELL               8\n2060    OK               HUGHES               9\n2061    OK              JACKSON               3\n2062    OK            JEFFERSON               5\n2063    OK             JOHNSTON               8\n2064    OK                  KAY              66\n2065    OK           KINGFISHER               7\n2066    OK                KIOWA               2\n2067    OK              LATIMER              43\n2068    OK             LE FLORE             176\n2069    OK              LINCOLN              18\n2070    OK                LOGAN              19\n2071    OK                 LOVE              11\n2072    OK                MAJOR               5\n2073    OK             MARSHALL              29\n2074    OK                MAYES              19\n2075    OK              MCCLAIN              27\n2076    OK            MCCURTAIN              18\n2077    OK             MCINTOSH              18\n2078    OK               MURRAY               7\n2079    OK             MUSKOGEE             127\n2080    OK                NOBLE              10\n2081    OK               NOWATA              34\n2082    OK             OKFUSKEE               7\n2083    OK             OKLAHOMA             193\n2084    OK             OKMULGEE              34\n2085    OK                OSAGE               1\n2086    OK               OTTAWA              14\n2087    OK               PAWNEE              11\n2088    OK                PAYNE               9\n2089    OK            PITTSBURG              23\n2090    OK             PONTOTOC              37\n2091    OK         POTTAWATOMIE              21\n2092    OK           PUSHMATAHA              11\n2093    OK               ROGERS              72\n2094    OK             SEMINOLE               6\n2095    OK             SEQUOYAH              48\n2096    OK             STEPHENS               9\n2097    OK                TEXAS               7\n2098    OK                TULSA             377\n2099    OK              WAGONER              19\n2100    OK           WASHINGTON              31\n2101    OK              WASHITA               6\n2102    OK                WOODS              20\n2103    OK             WOODWARD              23\n2104    OR                BAKER              37\n2105    OR               BENTON              15\n2106    OR            CLACKAMAS             127\n2107    OR              CLATSOP               4\n2108    OR             COLUMBIA              48\n2109    OR                 COOS              10\n2110    OR                CROOK               8\n2111    OR            DESCHUTES              53\n2112    OR              DOUGLAS              39\n2113    OR              GILLIAM               2\n2114    OR                GRANT               2\n2115    OR           HOOD RIVER              14\n2116    OR              JACKSON              30\n2117    OR            JEFFERSON              10\n2118    OR            JOSEPHINE               8\n2119    OR              KLAMATH             228\n2120    OR                 LAKE               4\n2121    OR                 LANE             229\n2122    OR              LINCOLN               4\n2123    OR                 LINN             103\n2124    OR              MALHEUR              10\n2125    OR               MARION              85\n2126    OR               MORROW              39\n2127    OR            MULTNOMAH             349\n2128    OR                 POLK              11\n2129    OR              SHERMAN               2\n2130    OR            TILLAMOOK               7\n2131    OR             UMATILLA             467\n2132    OR                UNION             196\n2133    OR              WALLOWA               6\n2134    OR                WASCO              50\n2135    OR           WASHINGTON              87\n2136    OR              YAMHILL              38\n2137    PA                ADAMS              39\n2138    PA            ALLEGHENY             760\n2139    PA            ARMSTRONG              39\n2140    PA               BEAVER             566\n2141    PA              BEDFORD             138\n2142    PA                BERKS             195\n2143    PA                BLAIR             910\n2144    PA             BRADFORD              38\n2145    PA                BUCKS            1106\n2146    PA               BUTLER             136\n2147    PA              CAMBRIA             420\n2148    PA              CAMERON               4\n2149    PA               CARBON             121\n2150    PA               CENTRE              32\n2151    PA              CHESTER             308\n2152    PA              CLARION              22\n2153    PA           CLEARFIELD             120\n2154    PA              CLINTON              39\n2155    PA             COLUMBIA               3\n2156    PA             CRAWFORD              67\n2157    PA           CUMBERLAND             299\n2158    PA              DAUPHIN             357\n2159    PA             DELAWARE             815\n2160    PA                  ELK               7\n2161    PA                 ERIE             140\n2162    PA              FAYETTE             291\n2163    PA             FRANKLIN              64\n2164    PA               FULTON               3\n2165    PA               GREENE              29\n2166    PA           HUNTINGDON              47\n2167    PA              INDIANA              36\n2168    PA            JEFFERSON              67\n2169    PA              JUNIATA              67\n2170    PA           LACKAWANNA             109\n2171    PA            LANCASTER             350\n2172    PA             LAWRENCE             173\n2173    PA              LEBANON              70\n2174    PA               LEHIGH             145\n2175    PA              LUZERNE              85\n2176    PA             LYCOMING              58\n2177    PA               MCKEAN               8\n2178    PA               MERCER              84\n2179    PA              MIFFLIN              53\n2180    PA               MONROE             207\n2181    PA           MONTGOMERY             532\n2182    PA              MONTOUR               3\n2183    PA          NORTHAMPTON             229\n2184    PA       NORTHUMBERLAND             102\n2185    PA                PERRY             169\n2186    PA         PHILADELPHIA            1649\n2187    PA                 PIKE              88\n2188    PA               POTTER               5\n2189    PA           SCHUYLKILL             131\n2190    PA               SNYDER              26\n2191    PA             SOMERSET             149\n2192    PA          SUSQUEHANNA              84\n2193    PA                TIOGA              15\n2194    PA                UNION              19\n2195    PA              VENANGO              16\n2196    PA               WARREN              10\n2197    PA           WASHINGTON             195\n2198    PA                WAYNE              51\n2199    PA         WESTMORELAND             392\n2200    PA              WYOMING              17\n2201    PA                 YORK             260\n2202    RI              BRISTOL               8\n2203    RI                 KENT             102\n2204    RI              NEWPORT              11\n2205    RI           PROVIDENCE             318\n2206    RI           WASHINGTON              48\n2207    SC            ABBEVILLE             124\n2208    SC                AIKEN             193\n2209    SC            ALLENDALE               1\n2210    SC             ANDERSON              34\n2211    SC              BAMBERG               6\n2212    SC             BARNWELL               9\n2213    SC             BEAUFORT              17\n2214    SC             BERKELEY              94\n2215    SC              CALHOUN               2\n2216    SC           CHARLESTON             148\n2217    SC             CHEROKEE               9\n2218    SC              CHESTER              15\n2219    SC         CHESTERFIELD              24\n2220    SC            CLARENDON              18\n2221    SC             COLLETON              29\n2222    SC           DARLINGTON              53\n2223    SC               DILLON              74\n2224    SC           DORCHESTER             139\n2225    SC            EDGEFIELD              17\n2226    SC            FAIRFIELD              22\n2227    SC             FLORENCE             220\n2228    SC           GEORGETOWN              29\n2229    SC           GREENVILLE             139\n2230    SC            GREENWOOD              94\n2231    SC              HAMPTON              25\n2232    SC                HORRY              42\n2233    SC               JASPER               7\n2234    SC              KERSHAW              26\n2235    SC            LANCASTER              19\n2236    SC              LAURENS              20\n2237    SC                  LEE               4\n2238    SC            LEXINGTON             118\n2239    SC               MARION              22\n2240    SC             MARLBORO              19\n2241    SC            MCCORMICK              20\n2242    SC             NEWBERRY              28\n2243    SC               OCONEE               5\n2244    SC           ORANGEBURG              25\n2245    SC              PICKENS              48\n2246    SC             RICHLAND              87\n2247    SC               SALUDA               5\n2248    SC          SPARTANBURG             124\n2249    SC               SUMTER              29\n2250    SC                UNION              19\n2251    SC         WILLIAMSBURG              22\n2252    SC                 YORK              72\n2253    SD               AURORA               1\n2254    SD               BEADLE              82\n2255    SD              BENNETT               2\n2256    SD            BON HOMME               1\n2257    SD            BROOKINGS              34\n2258    SD                BROWN             127\n2259    SD                BRULE               5\n2260    SD                BUTTE               4\n2261    SD             CAMPBELL               1\n2262    SD          CHARLES MIX               1\n2263    SD                 CLAY               5\n2264    SD            CODINGTON              13\n2265    SD               CUSTER              60\n2266    SD              DAVISON               6\n2267    SD                  DAY               4\n2268    SD                DEUEL               3\n2269    SD                DEWEY               2\n2270    SD              DOUGLAS               1\n2271    SD              EDMUNDS               9\n2272    SD           FALL RIVER             167\n2273    SD                GRANT               5\n2274    SD              GREGORY               3\n2275    SD               HAAKON               6\n2276    SD               HAMLIN               3\n2277    SD                 HAND               9\n2278    SD               HANSON               1\n2279    SD               HUGHES              17\n2280    SD                 HYDE               1\n2281    SD              JERAULD               1\n2282    SD            KINGSBURY              13\n2283    SD                 LAKE               3\n2284    SD             LAWRENCE              19\n2285    SD              LINCOLN              10\n2286    SD             MARSHALL               1\n2287    SD               MCCOOK               2\n2288    SD                MEADE              69\n2289    SD                MINER               1\n2290    SD            MINNEHAHA             106\n2291    SD                MOODY               2\n2292    SD           PENNINGTON              49\n2293    SD              PERKINS               1\n2294    SD               POTTER               1\n2295    SD              ROBERTS              10\n2296    SD              SANBORN               8\n2297    SD              SHANNON               2\n2298    SD                SPINK               5\n2299    SD              STANLEY               4\n2300    SD                SULLY               1\n2301    SD               TURNER               5\n2302    SD                UNION              52\n2303    SD             WALWORTH               6\n2304    SD              YANKTON               5\n2305    TN             ANDERSON              45\n2306    TN              BEDFORD              12\n2307    TN               BENTON              24\n2308    TN              BLEDSOE              10\n2309    TN               BLOUNT             128\n2310    TN              BRADLEY              72\n2311    TN             CAMPBELL              57\n2312    TN               CANNON               8\n2313    TN              CARROLL              57\n2314    TN               CARTER              21\n2315    TN             CHEATHAM              16\n2316    TN              CHESTER               3\n2317    TN            CLAIBORNE              32\n2318    TN                COCKE              37\n2319    TN               COFFEE              12\n2320    TN             CROCKETT              16\n2321    TN           CUMBERLAND              14\n2322    TN             DAVIDSON             162\n2323    TN              DECATUR               1\n2324    TN               DEKALB               6\n2325    TN              DICKSON              64\n2326    TN                 DYER              18\n2327    TN              FAYETTE              30\n2328    TN             FENTRESS               5\n2329    TN             FRANKLIN              36\n2330    TN               GIBSON              25\n2331    TN                GILES              10\n2332    TN             GRAINGER              53\n2333    TN               GREENE              43\n2334    TN               GRUNDY              59\n2335    TN              HAMBLEN              62\n2336    TN             HAMILTON             429\n2337    TN              HANCOCK               2\n2338    TN             HARDEMAN              14\n2339    TN               HARDIN              10\n2340    TN              HAWKINS              57\n2341    TN              HAYWOOD               4\n2342    TN            HENDERSON              14\n2343    TN                HENRY              22\n2344    TN              HICKMAN              16\n2345    TN            HUMPHREYS              24\n2346    TN              JACKSON               2\n2347    TN            JEFFERSON              60\n2348    TN              JOHNSON               1\n2349    TN                 KNOX             458\n2350    TN                 LAKE               2\n2351    TN           LAUDERDALE              44\n2352    TN             LAWRENCE              42\n2353    TN                LEWIS               6\n2354    TN              LINCOLN               4\n2355    TN               LOUDON              26\n2356    TN              MADISON              22\n2357    TN               MARION             115\n2358    TN             MARSHALL              40\n2359    TN                MAURY             111\n2360    TN               MCMINN             114\n2361    TN              MCNAIRY              17\n2362    TN                MEIGS              10\n2363    TN               MONROE              46\n2364    TN           MONTGOMERY              27\n2365    TN               MORGAN              60\n2366    TN                OBION              37\n2367    TN              OVERTON               1\n2368    TN                PERRY               2\n2369    TN              PICKETT               2\n2370    TN                 POLK              41\n2371    TN               PUTNAM               3\n2372    TN                 RHEA              70\n2373    TN                ROANE              44\n2374    TN            ROBERTSON              78\n2375    TN           RUTHERFORD             171\n2376    TN                SCOTT              45\n2377    TN           SEQUATCHIE              11\n2378    TN               SEVIER              51\n2379    TN               SHELBY             621\n2380    TN                SMITH               7\n2381    TN              STEWART               2\n2382    TN             SULLIVAN              72\n2383    TN               SUMNER              88\n2384    TN               TIPTON              45\n2385    TN            TROUSDALE               2\n2386    TN               UNICOI             230\n2387    TN                UNION              23\n2388    TN            VAN BUREN               3\n2389    TN               WARREN               6\n2390    TN           WASHINGTON             164\n2391    TN                WAYNE               3\n2392    TN              WEAKLEY              39\n2393    TN                WHITE               3\n2394    TN           WILLIAMSON              77\n2395    TN               WILSON              74\n2396    TX             ANDERSON             241\n2397    TX              ANDREWS               3\n2398    TX             ANGELINA              53\n2399    TX              ARANSAS               6\n2400    TX               ARCHER               8\n2401    TX            ARMSTRONG              12\n2402    TX             ATASCOSA              64\n2403    TX               AUSTIN              35\n2404    TX               BAILEY               5\n2405    TX              BANDERA              15\n2406    TX              BASTROP             102\n2407    TX               BAYLOR               1\n2408    TX                  BEE               9\n2409    TX                 BELL             413\n2410    TX                BEXAR             950\n2411    TX               BLANCO               3\n2412    TX               BOSQUE              17\n2413    TX                BOWIE              64\n2414    TX             BRAZORIA             259\n2415    TX               BRAZOS              55\n2416    TX             BREWSTER              14\n2417    TX              BRISCOE               3\n2418    TX                BROWN              39\n2419    TX             BURLESON              21\n2420    TX               BURNET               6\n2421    TX             CALDWELL              25\n2422    TX              CALHOUN               7\n2423    TX             CALLAHAN              12\n2424    TX              CAMERON             119\n2425    TX                 CAMP              14\n2426    TX               CARSON              21\n2427    TX                 CASS              54\n2428    TX             CHAMBERS               9\n2429    TX             CHEROKEE              57\n2430    TX                 CLAY              17\n2431    TX              COLEMAN              11\n2432    TX               COLLIN             159\n2433    TX        COLLINGSWORTH               4\n2434    TX             COLORADO              16\n2435    TX                COMAL             132\n2436    TX             COMANCHE              15\n2437    TX               CONCHO               1\n2438    TX                COOKE              56\n2439    TX              CORYELL              87\n2440    TX             CROCKETT               1\n2441    TX               CROSBY               2\n2442    TX            CULBERSON              13\n2443    TX               DALLAM             130\n2444    TX               DALLAS             406\n2445    TX           DEAF SMITH               7\n2446    TX                DELTA               2\n2447    TX               DENTON             394\n2448    TX               DEWITT               6\n2449    TX              DICKENS               2\n2450    TX               DIMMIT               1\n2451    TX               DONLEY               1\n2452    TX                DUVAL               1\n2453    TX             EASTLAND              16\n2454    TX                ECTOR              20\n2455    TX              EDWARDS               1\n2456    TX              EL PASO             863\n2457    TX                ELLIS             125\n2458    TX                ERATH              20\n2459    TX                FALLS              20\n2460    TX               FANNIN              19\n2461    TX              FAYETTE              26\n2462    TX               FISHER               2\n2463    TX                FLOYD               2\n2464    TX                FOARD               1\n2465    TX            FORT BEND             258\n2466    TX            FREESTONE              87\n2467    TX                 FRIO              20\n2468    TX            GALVESTON             283\n2469    TX                GARZA               2\n2470    TX            GILLESPIE               2\n2471    TX               GOLIAD               5\n2472    TX             GONZALES              42\n2473    TX                 GRAY              22\n2474    TX              GRAYSON             151\n2475    TX                GREGG             154\n2476    TX               GRIMES               9\n2477    TX            GUADALUPE              69\n2478    TX                 HALE              10\n2479    TX                 HALL               7\n2480    TX             HAMILTON               2\n2481    TX             HANSFORD               1\n2482    TX             HARDEMAN               8\n2483    TX               HARDIN             141\n2484    TX               HARRIS            2535\n2485    TX             HARRISON              98\n2486    TX              HARTLEY               9\n2487    TX                 HAYS              33\n2488    TX            HENDERSON              37\n2489    TX              HIDALGO              39\n2490    TX                 HILL              78\n2491    TX              HOCKLEY               7\n2492    TX                 HOOD             102\n2493    TX              HOPKINS              22\n2494    TX              HOUSTON              21\n2495    TX               HOWARD              75\n2496    TX             HUDSPETH               7\n2497    TX                 HUNT              32\n2498    TX           HUTCHINSON              37\n2499    TX                 JACK              33\n2500    TX              JACKSON               8\n2501    TX               JASPER              30\n2502    TX           JEFF DAVIS               2\n2503    TX            JEFFERSON             244\n2504    TX             JIM HOGG               4\n2505    TX            JIM WELLS              11\n2506    TX              JOHNSON             429\n2507    TX                JONES               7\n2508    TX               KARNES               3\n2509    TX              KAUFMAN              49\n2510    TX              KENDALL              10\n2511    TX                 KERR               5\n2512    TX               KINNEY              35\n2513    TX              KLEBERG              20\n2514    TX                 KNOX               1\n2515    TX             LA SALLE              14\n2516    TX                LAMAR              26\n2517    TX                 LAMB               4\n2518    TX             LAMPASAS               9\n2519    TX               LAVACA              14\n2520    TX                  LEE              12\n2521    TX                 LEON              31\n2522    TX              LIBERTY             144\n2523    TX            LIMESTONE              24\n2524    TX             LIVE OAK               4\n2525    TX                LLANO               3\n2526    TX              LUBBOCK             292\n2527    TX                 LYNN               2\n2528    TX              MADISON               8\n2529    TX               MARION              14\n2530    TX               MARTIN               2\n2531    TX                MASON               2\n2532    TX            MATAGORDA              12\n2533    TX             MAVERICK              71\n2534    TX            MCCULLOCH               4\n2535    TX             MCLENNAN             148\n2536    TX               MEDINA              56\n2537    TX              MIDLAND              30\n2538    TX                MILAM              37\n2539    TX                MILLS               4\n2540    TX             MITCHELL              11\n2541    TX             MONTAGUE              17\n2542    TX           MONTGOMERY             474\n2543    TX                MOORE              49\n2544    TX               MORRIS              16\n2545    TX               MOTLEY              17\n2546    TX          NACOGDOCHES              37\n2547    TX              NAVARRO              25\n2548    TX               NEWTON              14\n2549    TX                NOLAN              34\n2550    TX               NUECES              82\n2551    TX               OLDHAM               8\n2552    TX               ORANGE             105\n2553    TX           PALO PINTO              31\n2554    TX               PANOLA              21\n2555    TX               PARKER             303\n2556    TX               PARMER              28\n2557    TX                PECOS               2\n2558    TX                 POLK              27\n2559    TX               POTTER             883\n2560    TX             PRESIDIO               9\n2561    TX                RAINS               5\n2562    TX              RANDALL              72\n2563    TX                 REAL               2\n2564    TX            RED RIVER               1\n2565    TX               REEVES               3\n2566    TX              REFUGIO               2\n2567    TX            ROBERTSON              30\n2568    TX             ROCKWALL              32\n2569    TX              RUNNELS              10\n2570    TX                 RUSK              13\n2571    TX               SABINE               5\n2572    TX        SAN AUGUSTINE               3\n2573    TX          SAN JACINTO              24\n2574    TX         SAN PATRICIO              38\n2575    TX             SAN SABA               5\n2576    TX               SCURRY               9\n2577    TX               SHELBY              17\n2578    TX              SHERMAN               1\n2579    TX                SMITH             127\n2580    TX            SOMERVELL               5\n2581    TX                STARR               2\n2582    TX             STEPHENS               1\n2583    TX            STONEWALL               1\n2584    TX              SWISHER              13\n2585    TX              TARRANT            4235\n2586    TX               TAYLOR              86\n2587    TX              TERRELL              15\n2588    TX                TERRY               5\n2589    TX                TITUS              10\n2590    TX            TOM GREEN              52\n2591    TX               TRAVIS              74\n2592    TX              TRINITY               6\n2593    TX                TYLER              29\n2594    TX               UPSHUR              41\n2595    TX                UPTON               2\n2596    TX               UVALDE              35\n2597    TX            VAL VERDE              93\n2598    TX            VAN ZANDT              47\n2599    TX             VICTORIA              60\n2600    TX               WALKER              38\n2601    TX               WALLER              21\n2602    TX                 WARD               5\n2603    TX           WASHINGTON               4\n2604    TX                 WEBB             291\n2605    TX              WHARTON              13\n2606    TX              WHEELER               4\n2607    TX              WICHITA             120\n2608    TX            WILBARGER               4\n2609    TX              WILLACY               1\n2610    TX           WILLIAMSON              77\n2611    TX               WILSON              75\n2612    TX                 WISE             156\n2613    TX                 WOOD              60\n2614    TX                YOUNG               2\n2615    TX               ZAPATA               2\n2616    TX               ZAVALA               4\n2617    UT               BEAVER              85\n2618    UT            BOX ELDER              58\n2619    UT                CACHE              23\n2620    UT               CARBON              52\n2621    UT              DAGGETT               2\n2622    UT                DAVIS             337\n2623    UT             DUCHESNE              10\n2624    UT                EMERY               8\n2625    UT                GRAND               1\n2626    UT                 IRON              48\n2627    UT                 JUAB              25\n2628    UT              MILLARD               8\n2629    UT               MORGAN              18\n2630    UT                 RICH               5\n2631    UT            SALT LAKE             580\n2632    UT             SAN JUAN               8\n2633    UT              SANPETE               5\n2634    UT               SEVIER               1\n2635    UT               SUMMIT              12\n2636    UT               TOOELE              52\n2637    UT               UINTAH              10\n2638    UT                 UTAH             186\n2639    UT              WASATCH               7\n2640    UT           WASHINGTON              16\n2641    UT                WEBER             360\n2642    VA             ACCOMACK               4\n2643    VA            ALBEMARLE              28\n2644    VA            ALLEGHANY             108\n2645    VA               AMELIA              10\n2646    VA              AMHERST              28\n2647    VA           APPOMATTOX              16\n2648    VA            ARLINGTON              63\n2649    VA              AUGUSTA              12\n2650    VA                 BATH              12\n2651    VA              BEDFORD             395\n2652    VA                BLAND              14\n2653    VA            BOTETOURT             288\n2654    VA            BRUNSWICK               9\n2655    VA             BUCHANAN              25\n2656    VA           BUCKINGHAM              32\n2657    VA             CAMPBELL              43\n2658    VA             CAROLINE              46\n2659    VA              CARROLL               3\n2660    VA         CHARLES CITY               6\n2661    VA            CHARLOTTE              30\n2662    VA         CHESTERFIELD             228\n2663    VA               CLARKE               2\n2664    VA                CRAIG              31\n2665    VA             CULPEPER              24\n2666    VA           CUMBERLAND               5\n2667    VA            DICKENSON              15\n2668    VA            DINWIDDIE              23\n2669    VA                ESSEX               4\n2670    VA              FAIRFAX             225\n2671    VA             FAUQUIER              24\n2672    VA                FLOYD              43\n2673    VA             FLUVANNA               9\n2674    VA             FRANKLIN             202\n2675    VA            FREDERICK              24\n2676    VA                GILES              41\n2677    VA           GLOUCESTER              14\n2678    VA            GOOCHLAND              15\n2679    VA               GREENE               4\n2680    VA          GREENSVILLE               2\n2681    VA              HALIFAX              10\n2682    VA              HANOVER             117\n2683    VA              HENRICO             128\n2684    VA                HENRY              24\n2685    VA     INDEPENDENT CITY            3249\n2686    VA        ISLE OF WIGHT              36\n2687    VA           JAMES CITY               6\n2688    VA       KING AND QUEEN               6\n2689    VA          KING GEORGE               6\n2690    VA         KING WILLIAM              29\n2691    VA            LANCASTER               1\n2692    VA                  LEE              32\n2693    VA              LOUDOUN              42\n2694    VA               LOUISA              31\n2695    VA            LUNENBURG              43\n2696    VA              MADISON               3\n2697    VA              MATHEWS               3\n2698    VA          MECKLENBURG               7\n2699    VA            MIDDLESEX               2\n2700    VA           MONTGOMERY             101\n2701    VA               NELSON              12\n2702    VA             NEW KENT              29\n2703    VA          NORTHAMPTON               7\n2704    VA             NOTTOWAY             106\n2705    VA               ORANGE              35\n2706    VA                 PAGE              70\n2707    VA              PATRICK               9\n2708    VA         PITTSYLVANIA              49\n2709    VA             POWHATAN              28\n2710    VA        PRINCE EDWARD              34\n2711    VA        PRINCE GEORGE              13\n2712    VA       PRINCE WILLIAM             110\n2713    VA              PULASKI              33\n2714    VA         RAPPAHANNOCK               9\n2715    VA             RICHMOND               1\n2716    VA              ROANOKE             193\n2717    VA           ROCKBRIDGE              16\n2718    VA           ROCKINGHAM              40\n2719    VA              RUSSELL             172\n2720    VA                SCOTT              30\n2721    VA           SHENANDOAH              13\n2722    VA                SMYTH              15\n2723    VA          SOUTHAMPTON              26\n2724    VA         SPOTSYLVANIA              46\n2725    VA             STAFFORD              37\n2726    VA               SUSSEX              10\n2727    VA             TAZEWELL             197\n2728    VA               WARREN              22\n2729    VA           WASHINGTON              26\n2730    VA         WESTMORELAND               7\n2731    VA                 WISE             114\n2732    VA                WYTHE              39\n2733    VA                 YORK              20\n2734    VT              ADDISON               8\n2735    VT           BENNINGTON               8\n2736    VT            CALEDONIA               3\n2737    VT           CHITTENDEN              40\n2738    VT                ESSEX               4\n2739    VT             FRANKLIN              83\n2740    VT           GRAND ISLE               5\n2741    VT             LAMOILLE               4\n2742    VT               ORANGE               9\n2743    VT              ORLEANS              13\n2744    VT              RUTLAND              59\n2745    VT           WASHINGTON               3\n2746    VT              WINDHAM              10\n2747    VT              WINDSOR              10\n2748    WA                ADAMS              15\n2749    WA               ASOTIN              17\n2750    WA               BENTON             294\n2751    WA               CHELAN              79\n2752    WA              CLALLAM               8\n2753    WA                CLARK             850\n2754    WA             COLUMBIA               2\n2755    WA              COWLITZ             151\n2756    WA              DOUGLAS               2\n2757    WA                FERRY               1\n2758    WA             FRANKLIN             148\n2759    WA             GARFIELD               1\n2760    WA                GRANT              22\n2761    WA         GRAYS HARBOR              29\n2762    WA               ISLAND              39\n2763    WA            JEFFERSON               4\n2764    WA                 KING            1039\n2765    WA               KITSAP              60\n2766    WA             KITTITAS              15\n2767    WA            KLICKITAT              63\n2768    WA                LEWIS              73\n2769    WA              LINCOLN              12\n2770    WA                MASON              20\n2771    WA             OKANOGAN              15\n2772    WA              PACIFIC               6\n2773    WA         PEND OREILLE              21\n2774    WA               PIERCE             614\n2775    WA             SAN JUAN               2\n2776    WA               SKAGIT              57\n2777    WA             SKAMANIA              14\n2778    WA            SNOHOMISH             506\n2779    WA              SPOKANE             757\n2780    WA              STEVENS              34\n2781    WA             THURSTON              94\n2782    WA            WAHKIAKUM               3\n2783    WA          WALLA WALLA              45\n2784    WA              WHATCOM              45\n2785    WA              WHITMAN               9\n2786    WA               YAKIMA              56\n2787    WI                ADAMS              29\n2788    WI              ASHLAND               7\n2789    WI               BARRON              20\n2790    WI             BAYFIELD              11\n2791    WI                BROWN              76\n2792    WI              BUFFALO              16\n2793    WI              BURNETT               6\n2794    WI              CALUMET               8\n2795    WI             CHIPPEWA              35\n2796    WI                CLARK               9\n2797    WI             COLUMBIA             106\n2798    WI             CRAWFORD              24\n2799    WI                 DANE              74\n2800    WI                DODGE              63\n2801    WI                 DOOR               2\n2802    WI              DOUGLAS             465\n2803    WI                 DUNN              13\n2804    WI           EAU CLAIRE              78\n2805    WI          FOND DU LAC             275\n2806    WI               FOREST              16\n2807    WI                GRANT              33\n2808    WI                GREEN              11\n2809    WI           GREEN LAKE              17\n2810    WI                 IOWA               5\n2811    WI                 IRON               4\n2812    WI              JACKSON              19\n2813    WI            JEFFERSON              27\n2814    WI               JUNEAU              14\n2815    WI              KENOSHA             111\n2816    WI             KEWAUNEE               4\n2817    WI            LA CROSSE             339\n2818    WI            LAFAYETTE               7\n2819    WI             LANGLADE               7\n2820    WI              LINCOLN              23\n2821    WI            MANITOWOC              15\n2822    WI             MARATHON              23\n2823    WI            MARINETTE              12\n2824    WI            MARQUETTE              36\n2825    WI            MILWAUKEE             188\n2826    WI               MONROE              51\n2827    WI               OCONTO              16\n2828    WI               ONEIDA              13\n2829    WI            OUTAGAMIE              57\n2830    WI              OZAUKEE               6\n2831    WI                PEPIN              12\n2832    WI               PIERCE              43\n2833    WI                 POLK              23\n2834    WI              PORTAGE             240\n2835    WI                PRICE              10\n2836    WI               RACINE             100\n2837    WI                 ROCK             138\n2838    WI                 RUSK              21\n2839    WI                 SAUK              29\n2840    WI               SAWYER              14\n2841    WI              SHAWANO               9\n2842    WI            SHEBOYGAN               9\n2843    WI             ST CROIX             168\n2844    WI               TAYLOR              15\n2845    WI          TREMPEALEAU              54\n2846    WI               VERNON              48\n2847    WI                VILAS               5\n2848    WI             WALWORTH              47\n2849    WI             WASHBURN              23\n2850    WI           WASHINGTON              37\n2851    WI             WAUKESHA              96\n2852    WI              WAUPACA              34\n2853    WI             WAUSHARA              13\n2854    WI            WINNEBAGO              95\n2855    WI                 WOOD             119\n2856    WV              BARBOUR              33\n2857    WV             BERKELEY             108\n2858    WV                BOONE              50\n2859    WV              BRAXTON              22\n2860    WV               BROOKE              19\n2861    WV               CABELL             406\n2862    WV                 CLAY               4\n2863    WV            DODDRIDGE               4\n2864    WV              FAYETTE              30\n2865    WV               GILMER               1\n2866    WV                GRANT               7\n2867    WV           GREENBRIER              75\n2868    WV            HAMPSHIRE              37\n2869    WV              HANCOCK              37\n2870    WV                HARDY               7\n2871    WV             HARRISON              51\n2872    WV              JACKSON              22\n2873    WV            JEFFERSON              56\n2874    WV              KANAWHA             130\n2875    WV                LEWIS               3\n2876    WV              LINCOLN             107\n2877    WV                LOGAN              61\n2878    WV               MARION              16\n2879    WV             MARSHALL              26\n2880    WV                MASON              34\n2881    WV             MCDOWELL              43\n2882    WV               MERCER             387\n2883    WV              MINERAL             223\n2884    WV                MINGO             168\n2885    WV           MONONGALIA              19\n2886    WV               MONROE              35\n2887    WV               MORGAN              33\n2888    WV             NICHOLAS               6\n2889    WV                 OHIO              25\n2890    WV            PLEASANTS               3\n2891    WV           POCAHONTAS              13\n2892    WV              PRESTON              35\n2893    WV               PUTNAM              83\n2894    WV              RALEIGH              98\n2895    WV             RANDOLPH              21\n2896    WV              RITCHIE               7\n2897    WV                ROANE               3\n2898    WV              SUMMERS             153\n2899    WV               TAYLOR              94\n2900    WV               TUCKER               2\n2901    WV                TYLER               2\n2902    WV               UPSHUR               5\n2903    WV                WAYNE             217\n2904    WV              WEBSTER               5\n2905    WV               WETZEL               9\n2906    WV                 WIRT               7\n2907    WV                 WOOD             108\n2908    WV              WYOMING              63\n2909    WY               ALBANY              90\n2910    WY             BIG HORN              70\n2911    WY             CAMPBELL             386\n2912    WY               CARBON             168\n2913    WY             CONVERSE             211\n2914    WY                CROOK              33\n2915    WY              FREMONT              42\n2916    WY               GOSHEN             244\n2917    WY          HOT SPRINGS               4\n2918    WY              JOHNSON              18\n2919    WY              LARAMIE             737\n2920    WY              LINCOLN              25\n2921    WY              NATRONA              92\n2922    WY             NIOBRARA              51\n2923    WY                 PARK              29\n2924    WY               PLATTE             129\n2925    WY             SHERIDAN             252\n2926    WY             SUBLETTE               3\n2927    WY           SWEETWATER             196\n2928    WY                UINTA              49\n2929    WY             WASHAKIE              10\n2930    WY               WESTON              37\n\n\nAdd any comments or documentation as needed. More challenging data sets may require additional code chunks and documentation."
  },
  {
    "objectID": "posts/PoChunYang_Challenge1.html#describe-the-data",
    "href": "posts/PoChunYang_Challenge1.html#describe-the-data",
    "title": "railroad_2012_clean_county",
    "section": "Describe the data",
    "text": "Describe the data\nUsing a combination of words and results of R commands, can you provide a high level description of the data? Describe as efficiently as possible where/how the data was (likely) gathered, indicate the cases and variables (both the interpretation and any details you deem useful to the reader to fully understand your chosen data).\nWe can get the state and county frequency shown out by using dfsummary command. In the USA, WASHINGTON is the most frequent naming county. Moreover, the highest total number of employees is 8207.\n\n\nCode\n#head() this command show the first element to six element \nhead(railroad)\n\n\n  state               county total_employees\n1    AE                  APO               2\n2    AK            ANCHORAGE               7\n3    AK FAIRBANKS NORTH STAR               2\n4    AK               JUNEAU               3\n5    AK    MATANUSKA-SUSITNA               2\n6    AK                SITKA               1\n\n\nCode\n#dim() show the railroad's row and column\ndim(railroad)\n\n\n[1] 2930    3\n\n\nCode\n# colnames() show the column names \"state\",\"county\",\"total_empolyee\"\ncolnames(railroad)\n\n\n[1] \"state\"           \"county\"          \"total_employees\"\n\n\nCode\n# show the summary of the railroad_2012_clean_county.csv\ndfSummary(railroad)\n\n\nData Frame Summary  \nrailroad  \nDimensions: 2930 x 3  \nDuplicates: 0  \n\n-----------------------------------------------------------------------------------------------------------------\nNo   Variable          Stats / Values             Freqs (% of Valid)    Graph                Valid      Missing  \n---- ----------------- -------------------------- --------------------- -------------------- ---------- ---------\n1    state             1. TX                       221 ( 7.5%)          I                    2930       0        \n     [character]       2. GA                       152 ( 5.2%)          I                    (100.0%)   (0.0%)   \n                       3. KY                       119 ( 4.1%)                                                   \n                       4. MO                       115 ( 3.9%)                                                   \n                       5. IL                       103 ( 3.5%)                                                   \n                       6. IA                        99 ( 3.4%)                                                   \n                       7. KS                        95 ( 3.2%)                                                   \n                       8. NC                        94 ( 3.2%)                                                   \n                       9. IN                        92 ( 3.1%)                                                   \n                       10. VA                       92 ( 3.1%)                                                   \n                       [ 43 others ]              1748 (59.7%)          IIIIIIIIIII                              \n\n2    county            1. WASHINGTON                31 ( 1.1%)                               2930       0        \n     [character]       2. JEFFERSON                 26 ( 0.9%)                               (100.0%)   (0.0%)   \n                       3. FRANKLIN                  24 ( 0.8%)                                                   \n                       4. LINCOLN                   24 ( 0.8%)                                                   \n                       5. JACKSON                   22 ( 0.8%)                                                   \n                       6. MADISON                   19 ( 0.6%)                                                   \n                       7. MONTGOMERY                18 ( 0.6%)                                                   \n                       8. CLAY                      17 ( 0.6%)                                                   \n                       9. MARION                    17 ( 0.6%)                                                   \n                       10. MONROE                   17 ( 0.6%)                                                   \n                       [ 1699 others ]            2715 (92.7%)          IIIIIIIIIIIIIIIIII                       \n\n3    total_employees   Mean (sd) : 87.2 (283.6)   404 distinct values   :                    2930       0        \n     [integer]         min < med < max:                                 :                    (100.0%)   (0.0%)   \n                       1 < 21 < 8207                                    :                                        \n                       IQR (CV) : 58 (3.3)                              :                                        \n                                                                        :                                        \n-----------------------------------------------------------------------------------------------------------------\n\n\nCode\n# the command is that I want to get each state of the all employees\nrailroad %>% \n  group_by(state) %>% \n  mutate(all=sum(total_employees))\n\n\n# A tibble: 2,930 × 4\n# Groups:   state [53]\n   state county               total_employees   all\n   <chr> <chr>                          <int> <int>\n 1 AE    APO                                2     2\n 2 AK    ANCHORAGE                          7   103\n 3 AK    FAIRBANKS NORTH STAR               2   103\n 4 AK    JUNEAU                             3   103\n 5 AK    MATANUSKA-SUSITNA                  2   103\n 6 AK    SITKA                              1   103\n 7 AK    SKAGWAY MUNICIPALITY              88   103\n 8 AL    AUTAUGA                          102  4257\n 9 AL    BALDWIN                          143  4257\n10 AL    BARBOUR                            1  4257\n# … with 2,920 more rows"
  },
  {
    "objectID": "posts/PrachitiParkar_challenge1.html",
    "href": "posts/PrachitiParkar_challenge1.html",
    "title": "Challenge 1 Solution - Railroads",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)"
  },
  {
    "objectID": "posts/PrachitiParkar_challenge1.html#challenge-overview",
    "href": "posts/PrachitiParkar_challenge1.html#challenge-overview",
    "title": "Challenge 1 Solution - Railroads",
    "section": "Challenge Overview",
    "text": "Challenge Overview\nToday’s challenge is to\n\nread in a dataset, and\ndescribe the dataset using both words and any supporting information (e.g., tables, etc)"
  },
  {
    "objectID": "posts/PrachitiParkar_challenge1.html#read-in-the-data",
    "href": "posts/PrachitiParkar_challenge1.html#read-in-the-data",
    "title": "Challenge 1 Solution - Railroads",
    "section": "Read in the Data",
    "text": "Read in the Data\nRead in one (or more) of the following data sets, using the correct R package and command.\n\nrailroad_2012_clean_county.csv ⭐\nbirds.csv ⭐⭐\nFAOstat*.csv ⭐⭐\nwild_bird_data.xlsx ⭐⭐⭐\nStateCounty2012.xls ⭐⭐⭐⭐\n\nFind the _data folder, located inside the posts folder. Then you can read in the data, using either one of the readr standard tidy read commands, or a specialized package such as readxl.\n\n\nCode\nlibrary(readr)\nrailroad <- read_csv(\"_data/railroad_2012_clean_county.csv\")\n\n \nview(railroad)\n\n# first few rows of the dataset\nhead(railroad)\n\n\n# A tibble: 6 × 3\n  state county               total_employees\n  <chr> <chr>                          <dbl>\n1 AE    APO                                2\n2 AK    ANCHORAGE                          7\n3 AK    FAIRBANKS NORTH STAR               2\n4 AK    JUNEAU                             3\n5 AK    MATANUSKA-SUSITNA                  2\n6 AK    SITKA                              1\n\n\nCode\nprint(\"Total number of rows are \")\n\n\n[1] \"Total number of rows are \"\n\n\nCode\nnrow(railroad)\n\n\n[1] 2930\n\n\nAdd any comments or documentation as needed. More challenging data sets may require additional code chunks and documentation."
  },
  {
    "objectID": "posts/PrachitiParkar_challenge1.html#describe-the-data",
    "href": "posts/PrachitiParkar_challenge1.html#describe-the-data",
    "title": "Challenge 1 Solution - Railroads",
    "section": "Describe the data",
    "text": "Describe the data\nUsing a combination of words and results of R commands, can you provide a high level description of the data? Describe as efficiently as possible where/how the data was (likely) gathered, indicate the cases and variables (both the interpretation and any details you deem useful to the reader to fully understand your chosen data).\nThe data consists of 3 columns namely, the state, county and the count of the total employees working in a particular county of a particular state and 2930 rows. The data must have been likely gathered by cumulating information from all county of all states.\n\n\nCode\ndim(railroad)\n\n\n[1] 2930    3\n\n\nCode\n# Identifying the column names of the dataset \ncolnames(railroad)\n\n\n[1] \"state\"           \"county\"          \"total_employees\"\n\n\nCode\n#Filter state AE from the dataset \nfilter(railroad, state == \"AE\")\n\n\n# A tibble: 1 × 3\n  state county total_employees\n  <chr> <chr>            <dbl>\n1 AE    APO                  2\n\n\nCode\n#Filter the rows that has total_employees between 10 and 100 inclusive\nfilter(railroad, `total_employees` >= 10 & `total_employees` <= 100)\n\n\n# A tibble: 1,484 × 3\n   state county               total_employees\n   <chr> <chr>                          <dbl>\n 1 AK    SKAGWAY MUNICIPALITY              88\n 2 AL    BIBB                              25\n 3 AL    BULLOCK                           13\n 4 AL    BUTLER                            29\n 5 AL    CALHOUN                           45\n 6 AL    CHAMBERS                          13\n 7 AL    CHILTON                           72\n 8 AL    CLARKE                            26\n 9 AL    CLAY                              10\n10 AL    COFFEE                            14\n# … with 1,474 more rows"
  },
  {
    "objectID": "posts/laurenzichittella_challenge1.html",
    "href": "posts/laurenzichittella_challenge1.html",
    "title": "Challenge 1 Instructions",
    "section": "",
    "text": "This dataset was utilized by Nee et al to produce a figure to show the relationship between wild bird weight and population size.\nIt consists of two numeric variables, wet body weight in grams and population size and 146 distinct observations.\n\n\n\n\nUtilize read_xls\n\nSkip import of first two rows\n\nrow 1 includes header\n\nrow 2 provides variable names I do not want to use\n\n\nAssign new variable names:\n\nWet body weight [g] = wet_weight_g\n\nPopulation size = pop_size\n\n\nOutput variable class\n\nSort by ascending values of wet_weight_g\n\n\n\nCode\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n\nlibrary(readxl)\n\nwild_bird_data2 <- read_xlsx( \"_data/wild_bird_data.xlsx\", skip = 2, col_names = c(\"wet_weight_g\", \"pop_size\"))\n\nsapply(wild_bird_data2, class)\n\n\nwet_weight_g     pop_size \n   \"numeric\"    \"numeric\" \n\n\nCode\narrange(wild_bird_data2,wet_weight_g)\n\n\n# A tibble: 146 × 2\n   wet_weight_g pop_size\n          <dbl>    <dbl>\n 1         5.46  532194.\n 2         7.42  389806.\n 3         7.76 3165107.\n 4         8.04  192361.\n 5         8.64 2592997.\n 6         8.70  250452.\n 7         8.89   16997.\n 8         9.12  604766.\n 9         9.52     595.\n10        10.1    74386.\n# … with 136 more rows"
  },
  {
    "objectID": "posts/laurenzichittella_challenge1.html#provide-baseline-characterization-of-data",
    "href": "posts/laurenzichittella_challenge1.html#provide-baseline-characterization-of-data",
    "title": "Challenge 1 Instructions",
    "section": "Provide baseline characterization of data",
    "text": "Provide baseline characterization of data\n\nSummary/Results\nBoth Variables are populated for all observations and represent a wide range of values. Distributions of weight and population size are positively skewed bu outliers.\n\n\nTechnical notes\nProvide the following information:\n- Print of first 23 observations\n- Print of last 23 observations\n- Filter on presence of missing values for wet_weight_g or pop_size\n- Summarize numeric variables\n\n\nCode\nslice(wild_bird_data2, 1:23)\n\n\n# A tibble: 23 × 2\n   wet_weight_g pop_size\n          <dbl>    <dbl>\n 1         5.46  532194.\n 2         7.76 3165107.\n 3         8.64 2592997.\n 4        10.7  3524193.\n 5         7.42  389806.\n 6         9.12  604766.\n 7         8.04  192361.\n 8         8.70  250452.\n 9         8.89   16997.\n10         9.52     595.\n# … with 13 more rows\n\n\nCode\nslice(wild_bird_data2, 124:146)\n\n\n# A tibble: 23 × 2\n   wet_weight_g pop_size\n          <dbl>    <dbl>\n 1         821.     253.\n 2         645.     386.\n 3         757.     612.\n 4         604.    1162.\n 5        1008.     908.\n 6         528.   40510.\n 7         766.   57460.\n 8         923.   34547.\n 9         887.   13391.\n10         955.   12526.\n# … with 13 more rows\n\n\nCode\nfilter(wild_bird_data2, is.na(wet_weight_g) | is.na(pop_size))\n\n\n# A tibble: 0 × 2\n# … with 2 variables: wet_weight_g <dbl>, pop_size <dbl>\n\n\nCode\nresult='asis'\nlibrary(summarytools)\n\ndfSummary(wild_bird_data2, varnumbers = FALSE, valid.col = FALSE)\n\n\nData Frame Summary  \nwild_bird_data2  \nDimensions: 146 x 2  \nDuplicates: 0  \n\n--------------------------------------------------------------------------------------\nVariable       Stats / Values                  Freqs (% of Valid)    Graph   Missing  \n-------------- ------------------------------- --------------------- ------- ---------\nwet_weight_g   Mean (sd) : 363.7 (983.5)       146 distinct values   :       0        \n[numeric]      min < med < max:                                      :       (0.0%)   \n               5.5 < 69.2 < 9639.8                                   :                \n               IQR (CV) : 291.2 (2.7)                                :                \n                                                                     : .              \n\npop_size       Mean (sd) : 382874 (951938.7)   146 distinct values   :       0        \n[numeric]      min < med < max:                                      :       (0.0%)   \n               4.9 < 24353.2 < 5093378                               :                \n               IQR (CV) : 196693.8 (2.5)                             :                \n                                                                     : .              \n--------------------------------------------------------------------------------------\n\n\nCode\nhist(  wild_bird_data2$wet_weight_g\n     , main=\"Distribution of Weight Captured in Wild Bird Datset\"\n     , xlab=\"Wet Weight in Grams\"\n     , col = \"red\")\n\n\n\n\n\nCode\nhist(  wild_bird_data2$pop_size\n     , main=\"Distribution of Population Size Captured in Wild Bird Datset\"\n     , xlab = \"Population Size\"\n     , col = \"red\")"
  },
  {
    "objectID": "posts/laurenzichittella_challenge1.html#evaluate-relationship-between-weight-and-population-size-graphically",
    "href": "posts/laurenzichittella_challenge1.html#evaluate-relationship-between-weight-and-population-size-graphically",
    "title": "Challenge 1 Instructions",
    "section": "Evaluate relationship between weight and population size graphically",
    "text": "Evaluate relationship between weight and population size graphically\n\nSummary/Results\nPlotting weight by population size does not clearly point to any relationship between these variables.\n\n\nTechnical notes\nPlot results on log10 scale\n\n\nCode\n# Load packages\nrequire(MASS) # to access Animals data sets\nrequire(scales) # to access break formatting functions\nlibrary(ggplot2)\nstart_plot <- ggplot(wild_bird_data2, aes(x=pop_size, y=wet_weight_g)) + geom_point()\n\nstart_plot2 <- start_plot +\n     scale_x_log10(breaks = trans_breaks(\"log10\", function(x) 10^x),\n              labels = trans_format(\"log10\", math_format(10^.x))) +\n     scale_y_log10(breaks = trans_breaks(\"log10\", function(x) 10^x),\n              labels = trans_format(\"log10\", math_format(10^.x))) +\n     theme_bw() \n\nstart_plot2 +annotation_logticks() +\n  ggtitle(\"Relationship between Weight and Population Size in Wild Birds\") +\n  xlab(\"Population Size\")+\n  ylab(\"Wet Weight (g)\")"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Contributors",
    "section": "",
    "text": "Find out more about our DACSS students who contributed to the blog.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAditya Salveru\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnnie Alexander\n\n\n\n\n\n\n\n\n\n\n\n\n\nAritra Basu\n\n\n\n\n\n\n\n\n\n\n\n\n\nCameron Needels\n\n\n\n\n\n\n\n\n\n\n\n\n\nDaniel Hannon\n\n\n\n\n\n\n\n\n\n\n\n\n\nDirichi Umunna\n\n\n\n\n\n\n\n\n\n\n\n\n\nEli Boahen\n\n\n\n\n\n\n\n\n\n\n\n\n\nErico Yu\n\n\n\n\n\n\n\n\n\n\n\n\n\nIshan Bhardwaj\n\n\n\n\n\n\n\n\n\n\n\n\n\nJanani Natarajan\n\n\n\n\n\n\n\n\n\n\n\n\n\nJesse Usher Barrett\n\n\n\n\n\n\n\n\n\n\n\n\n\nJinxianiu\n\n\n\n\n\n\n\n\n\n\n\n\n\nJoseph Vincent\n\n\n\n\n\n\n\n\n\n\n\n\n\nJustine Shakespeare\n\n\n\n\n\n\n\n\n\n\n\n\n\nKeith Martin\n\n\n\n\n\n\n\n\n\n\n\n\n\nKekai Liu\n\n\n\n\n\n\n\n\n\n\n\n\n\nKris Smole\n\n\n\n\n\n\n\n\n\n\n\n\n\nLauren ZIchittella\n\n\n\n\n\n\n\n\n\n\n\n\n\nLinda Humphrey\n\n\n\n\n\n\n\n\n\n\n\n\n\nMatt Eckstein\n\n\n\n\n\n\n\n\n\n\n\n\n\nMatthew Weiner\n\n\n\n\n\n\n\n\n\n\n\n\n\nMegan Galarneau\n\n\n\n\n\n\n\n\n\n\n\n\n\nMeredith Rolfe\n\n\n\n\n\n\n\n\n\n\n\n\n\nMichele Carlin\n\n\n\n\n\n\n\n\n\n\n\n\n\nNanci Kopecky\n\n\n\n\n\n\n\n\n\n\n\n\n\nNeha Jhurani\n\n\n\n\n\n\n\n\n\n\n\n\n\nNisarg Shah\n\n\n\n\n\n\n\n\n\n\n\n\n\nPoChunYang\n\n\n\n\n\n\n\n\n\n\n\n\n\nPrachiti Parkar\n\n\n\n\n\n\n\n\n\n\n\n\n\nPradhakshya\n\n\n\n\n\n\n\n\n\n\n\n\n\nPranav Bharadwaj Komaravolu\n\n\n\n\n\n\n\n\n\n\n\n\n\nSahanPrasadPodduturiReddy\n\n\n\n\n\n\n\n\n\n\n\n\n\nSai Pranav Kurly\n\n\n\n\n\n\n\n\n\n\n\n\n\nSai Venkatesh\n\n\n\n\n\n\n\n\n\n\n\n\n\nSaksham Kumar\n\n\n\n\n\n\n\n\n\n\n\n\n\nShantanu Patil\n\n\n\n\n\n\n\n\n\n\n\n\n\nSid\n\n\n\n\n\n\n\n\n\n\n\n\n\nSteven McKeen\n\n\n\n\n\n\n\n\n\n\n\n\n\nSue-Ellen Duffy\n\n\n\n\n\n\n\n\n\n\n\n\n\nSusmita Madineni\n\n\n\n\n\n\n\n\n\n\n\n\n\nTeresa (Peri) Lardo\n\n\n\n\n\n\n\n\n\n\n\n\n\nThrishul Pola\n\n\n\n\n\n\n\n\n\n\n\n\n\nTim Shores\n\n\n\n\n\n\n\n\n\n\n\n\n\nXinyang Mao\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DACSS 601: Data Science Fundamentals",
    "section": "",
    "text": "The blog posts here are contributed by students enrolled in DACSS 601, Fundamentals of Data Science. The course provides students with an introduction to R and the tidyverse, scientific publishing, and collaboration through GitHub, building a foundation for future coursework. Students also are introduced to general data management and data wrangling skills, with an emphasis on best practice workflows and tidy data management.\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nDate\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nFeb 22, 2023\n\n\nDefault of credit card clients dataset - UCI Machine Learning Repository\n\n\nPranav Komaravolu\n\n\n\n\nFeb 22, 2023\n\n\nChallenge_1\n\n\nKris Smole\n\n\n\n\nFeb 22, 2023\n\n\nRead and describe dataset\n\n\nNeha Jhurani\n\n\n\n\nFeb 22, 2023\n\n\nChallenge 1 Wildbird submission\n\n\nCameron Needels\n\n\n\n\nFeb 21, 2023\n\n\nChallenge 1 Reading Birds\n\n\nKekai Liu\n\n\n\n\nFeb 21, 2023\n\n\nChallenge 1\n\n\nNanci Kopecky\n\n\n\n\nFeb 21, 2023\n\n\nChallenge 1: Railroad Workers 2012\n\n\nTeresa Lardo\n\n\n\n\nFeb 21, 2023\n\n\nrailroad_2012_clean_county\n\n\nPoChun Yang\n\n\n\n\nFeb 18, 2023\n\n\nChallenge 1 Instructions\n\n\nLauren Zichittella\n\n\n\n\nFeb 17, 2023\n\n\nInternational Data on Bird Counts from 1960s-2010s\n\n\nMichele Carlin\n\n\n\n\nFeb 15, 2023\n\n\nChallenge 1 - Railroad Employment\n\n\nJustine Shakespeare\n\n\n\n\nFeb 15, 2023\n\n\nGlobal Poultry Production from 1960-2020\n\n\nMegan Galarneau\n\n\n\n\nFeb 15, 2023\n\n\nChinese-language Disinformation about gunviolence\n\n\nJinxia Niu\n\n\n\n\nFeb 15, 2023\n\n\nChallenge 1 - Railroad Employees\n\n\nJoseph Vincent\n\n\n\n\nFeb 12, 2023\n\n\nDescribing Cross-sectional Survey Data 2021\n\n\nDirichi Umunna\n\n\n\n\nAug 16, 2022\n\n\nChallenge 1 Solution\n\n\nMeredith Rolfe\n\n\n\n\nInvalid Date\n\n\nFirst Assignment\n\n\nKekai Liu\n\n\n\n\nFeb 14, 2023\n\n\nAB_NYC)2019\n\n\nKeith Martin\n\n\n\n\nFeb 9, 2023\n\n\nTech Setup\n\n\nTim Shores\n\n\n\n\nAug 16, 2022\n\n\nChallenge 2 Instructions\n\n\nMeredith Rolfe\n\n\n\n\nAug 15, 2022\n\n\nChallenge 1\n\n\nMeredith Rolfe\n\n\n\n\nAug 15, 2022\n\n\nChallenge 1 Instructions\n\n\nMeredith Rolfe\n\n\n\n\nAug 2, 2022\n\n\nBlog Post Template\n\n\nSidharth\n\n\n\n\nFeb 22, 2022\n\n\nChallenge 1 Solution - Railroads\n\n\nPrachiti Parkar\n\n\n\n\nFeb 20, 2022\n\n\nReading datasets: railroad_2012_clean_county, birds, wild_birds_data\n\n\nSusmita Madineni\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about/DirichiUmunna.html",
    "href": "about/DirichiUmunna.html",
    "title": "Dirichi Umunna",
    "section": "",
    "text": "I am a PH.D student at the department of sociology. I am currently in the first year of my training."
  },
  {
    "objectID": "about/DirichiUmunna.html#r-experience",
    "href": "about/DirichiUmunna.html#r-experience",
    "title": "Dirichi Umunna",
    "section": "R experience",
    "text": "R experience\nI have zero R experience and hope to leave this class with some R knowledge on how to use R for data science purposes."
  },
  {
    "objectID": "about/DirichiUmunna.html#research-interests",
    "href": "about/DirichiUmunna.html#research-interests",
    "title": "Dirichi Umunna",
    "section": "Research interests",
    "text": "Research interests\nMy research interests broadly intersect feminism in African and Diasporic circles as well as Pan-Africanism."
  },
  {
    "objectID": "about/DirichiUmunna.html#hometown",
    "href": "about/DirichiUmunna.html#hometown",
    "title": "Dirichi Umunna",
    "section": "Hometown",
    "text": "Hometown\nI am from Nigeria and my tribe is the Igbo tribe of Eastern Nigeria."
  },
  {
    "objectID": "about/DirichiUmunna.html#hobbies",
    "href": "about/DirichiUmunna.html#hobbies",
    "title": "Dirichi Umunna",
    "section": "Hobbies",
    "text": "Hobbies\nI love to watch sitcoms, play music and generally spend time with people I care about."
  },
  {
    "objectID": "about/DirichiUmunna.html#fun-fact",
    "href": "about/DirichiUmunna.html#fun-fact",
    "title": "Dirichi Umunna",
    "section": "Fun fact",
    "text": "Fun fact\nI am the only daughter of my parents as I grew up with 5 brothers."
  },
  {
    "objectID": "about/CamNeedels.html",
    "href": "about/CamNeedels.html",
    "title": "Cameron Needels",
    "section": "",
    "text": "Psychology Major and Business Minor in their senior year. I worked as a recruiter for tech and data companies."
  },
  {
    "objectID": "about/CamNeedels.html#r-experience",
    "href": "about/CamNeedels.html#r-experience",
    "title": "Cameron Needels",
    "section": "R experience",
    "text": "R experience\nI worked with R in my Psychology 240 (Statistics in Psychology) class"
  },
  {
    "objectID": "about/CamNeedels.html#research-interests",
    "href": "about/CamNeedels.html#research-interests",
    "title": "Cameron Needels",
    "section": "Research interests",
    "text": "Research interests\nData Analytics + visualization, Machine Learning, Mental health, Social media data, market analysis"
  },
  {
    "objectID": "about/CamNeedels.html#hometown",
    "href": "about/CamNeedels.html#hometown",
    "title": "Cameron Needels",
    "section": "Hometown",
    "text": "Hometown\nSouthborough, MA"
  },
  {
    "objectID": "about/CamNeedels.html#hobbies",
    "href": "about/CamNeedels.html#hobbies",
    "title": "Cameron Needels",
    "section": "Hobbies",
    "text": "Hobbies\nVideo games, basketball, hockey, and exercising"
  },
  {
    "objectID": "about/CamNeedels.html#fun-fact",
    "href": "about/CamNeedels.html#fun-fact",
    "title": "Cameron Needels",
    "section": "Fun fact",
    "text": "Fun fact\nI love to watch the bruins in my free time"
  },
  {
    "objectID": "about/nisargshah.html",
    "href": "about/nisargshah.html",
    "title": "Nisarg Shah",
    "section": "",
    "text": "Did my Bachelors of Science in Computer Science here at UMASS. After my bachelors I worked at Citizen’s Bank as a Software Engineer where I worked on internal tools."
  },
  {
    "objectID": "about/nisargshah.html#r-experience",
    "href": "about/nisargshah.html#r-experience",
    "title": "Nisarg Shah",
    "section": "R experience",
    "text": "R experience\nNo previous R experience. Looking forward to learning."
  },
  {
    "objectID": "about/nisargshah.html#research-interests",
    "href": "about/nisargshah.html#research-interests",
    "title": "Nisarg Shah",
    "section": "Research interests",
    "text": "Research interests\nMost of my interest in research lie in Machine Learning and AI"
  },
  {
    "objectID": "about/nisargshah.html#hometown",
    "href": "about/nisargshah.html#hometown",
    "title": "Nisarg Shah",
    "section": "Hometown",
    "text": "Hometown\nI grew up in many different places so I don’t really have a hometown."
  },
  {
    "objectID": "about/nisargshah.html#hobbies",
    "href": "about/nisargshah.html#hobbies",
    "title": "Nisarg Shah",
    "section": "Hobbies",
    "text": "Hobbies\nI travel alot. In the summer I’m in a different state every weekend. Music lover (Mainly Modern Rock)."
  },
  {
    "objectID": "about/nisargshah.html#fun-fact",
    "href": "about/nisargshah.html#fun-fact",
    "title": "Nisarg Shah",
    "section": "Fun fact",
    "text": "Fun fact\nI worked at a startup that was working on democratizing AI for stock market trades. We were able to successfuly build models for paper trading. I drove to new york to watch the Tonight Show live last year."
  },
  {
    "objectID": "about/KekaiLiu.html",
    "href": "about/KekaiLiu.html",
    "title": "Kekai Liu",
    "section": "",
    "text": "I am an economist for the U.S. Department of Commerce.\nI have a B.S. in Joint Mathematics-Economics from UC San Diego and a M.S. in Applied Economics from George Washington University."
  },
  {
    "objectID": "about/KekaiLiu.html#r-experience",
    "href": "about/KekaiLiu.html#r-experience",
    "title": "Kekai Liu",
    "section": "R experience",
    "text": "R experience\nIn my undergraduate and graduate studies, I used R for exploratory data analysis and time series analysis.\nAt my job, I primarily use SAS, STATA, and some Python. I want to learn R to develop useful applications for work purposes."
  },
  {
    "objectID": "about/KekaiLiu.html#research-interests",
    "href": "about/KekaiLiu.html#research-interests",
    "title": "Kekai Liu",
    "section": "Research interests",
    "text": "Research interests\nMacroeconomics, statistics, education, transportation, emerging technologies"
  },
  {
    "objectID": "about/KekaiLiu.html#hometown",
    "href": "about/KekaiLiu.html#hometown",
    "title": "Kekai Liu",
    "section": "Hometown",
    "text": "Hometown\nAlameda County, California; currently based in Washington D.C."
  },
  {
    "objectID": "about/KekaiLiu.html#hobbies",
    "href": "about/KekaiLiu.html#hobbies",
    "title": "Kekai Liu",
    "section": "Hobbies",
    "text": "Hobbies\nLearning piano. Learning music theory and composition. Dance. Playing ping pong and badminton. Watching sports."
  },
  {
    "objectID": "about/KekaiLiu.html#fun-fact",
    "href": "about/KekaiLiu.html#fun-fact",
    "title": "Kekai Liu",
    "section": "Fun fact",
    "text": "Fun fact\nI have never visited Massachusetts."
  },
  {
    "objectID": "about/IshanBhardwaj.html",
    "href": "about/IshanBhardwaj.html",
    "title": "Ishan Bhardwaj",
    "section": "",
    "text": "Hi! I’m an undergraduate CS student at UMass Amherst. I completed high school in Bangalore, India. Last semester, I was a part of BUILD UMass, where I worked as a Software Developer."
  },
  {
    "objectID": "about/IshanBhardwaj.html#r-experience",
    "href": "about/IshanBhardwaj.html#r-experience",
    "title": "Ishan Bhardwaj",
    "section": "R experience",
    "text": "R experience\nThis is my first time working with R!"
  },
  {
    "objectID": "about/IshanBhardwaj.html#research-interests",
    "href": "about/IshanBhardwaj.html#research-interests",
    "title": "Ishan Bhardwaj",
    "section": "Research interests",
    "text": "Research interests\nI’m interested in Machine Learning and Data Science research, whether it is learning about it or contributing to it."
  },
  {
    "objectID": "about/IshanBhardwaj.html#hometown",
    "href": "about/IshanBhardwaj.html#hometown",
    "title": "Ishan Bhardwaj",
    "section": "Hometown",
    "text": "Hometown\nBangalore, India"
  },
  {
    "objectID": "about/IshanBhardwaj.html#hobbies",
    "href": "about/IshanBhardwaj.html#hobbies",
    "title": "Ishan Bhardwaj",
    "section": "Hobbies",
    "text": "Hobbies\nI love to play soccer, swim, play video games and go out with friends!"
  },
  {
    "objectID": "about/IshanBhardwaj.html#fun-fact",
    "href": "about/IshanBhardwaj.html#fun-fact",
    "title": "Ishan Bhardwaj",
    "section": "Fun fact",
    "text": "Fun fact\nI make the best instant noodles!"
  },
  {
    "objectID": "about/AnnieAlexanderAboutMe.html",
    "href": "about/AnnieAlexanderAboutMe.html",
    "title": "Annie Alexander",
    "section": "",
    "text": "I have a Master of Public Administration from UNC-Chapel Hill and a bachelor’s degree in American Studies and Hispanic Studies from the College of William & Mary. I currently work as a Research Analyst in the Economic and Public Policy research group at the UMass Donahue Institute, which is part of the UMass Amherst campus."
  },
  {
    "objectID": "about/AnnieAlexanderAboutMe.html#r-experience",
    "href": "about/AnnieAlexanderAboutMe.html#r-experience",
    "title": "Annie Alexander",
    "section": "R experience",
    "text": "R experience\nI have no experience with R. I have only used STATA and SPSS."
  },
  {
    "objectID": "about/AnnieAlexanderAboutMe.html#research-interests",
    "href": "about/AnnieAlexanderAboutMe.html#research-interests",
    "title": "Annie Alexander",
    "section": "Research interests",
    "text": "Research interests\nMy research interests are related to economic development, workforce development, and related public policy."
  },
  {
    "objectID": "about/AnnieAlexanderAboutMe.html#hometown",
    "href": "about/AnnieAlexanderAboutMe.html#hometown",
    "title": "Annie Alexander",
    "section": "Hometown",
    "text": "Hometown\nAsheville, NC"
  },
  {
    "objectID": "about/AnnieAlexanderAboutMe.html#hobbies",
    "href": "about/AnnieAlexanderAboutMe.html#hobbies",
    "title": "Annie Alexander",
    "section": "Hobbies",
    "text": "Hobbies\nTraveling, hiking, photography, and sewing."
  },
  {
    "objectID": "about/AnnieAlexanderAboutMe.html#fun-fact",
    "href": "about/AnnieAlexanderAboutMe.html#fun-fact",
    "title": "Annie Alexander",
    "section": "Fun fact",
    "text": "Fun fact\nI have been to 46 of 50 US states and my goal is to go to all of them."
  },
  {
    "objectID": "about/TeresaLardo.html",
    "href": "about/TeresaLardo.html",
    "title": "Teresa (Peri) Lardo",
    "section": "",
    "text": "I spent the last 8 years working for an educational software and services company. My bachelor’s degree is in English, with a concentration in creative writing."
  },
  {
    "objectID": "about/TeresaLardo.html#r-experience",
    "href": "about/TeresaLardo.html#r-experience",
    "title": "Teresa (Peri) Lardo",
    "section": "R experience",
    "text": "R experience\nI have almost no experience in R, but studied some R basics for a few weeks before entering the DACSS program."
  },
  {
    "objectID": "about/TeresaLardo.html#hometown",
    "href": "about/TeresaLardo.html#hometown",
    "title": "Teresa (Peri) Lardo",
    "section": "Hometown",
    "text": "Hometown\nI’m currently living in Medford, Mass., with a partner, our two roommates, and a cat who is, of course, the most important member of the household."
  },
  {
    "objectID": "about/TeresaLardo.html#hobbies",
    "href": "about/TeresaLardo.html#hobbies",
    "title": "Teresa (Peri) Lardo",
    "section": "Hobbies",
    "text": "Hobbies\nI enjoy writing poetry, making beaded jewelry, and painting watercolor birds. I love learning and also take non-university classes for fun when I can; as I begin the DACSS program, I am finishing up a year-long course on tropical astrology as well as a short Atlas Obscura course on fairy tale writing."
  },
  {
    "objectID": "about/TeresaLardo.html#fun-fact",
    "href": "about/TeresaLardo.html#fun-fact",
    "title": "Teresa (Peri) Lardo",
    "section": "Fun fact",
    "text": "Fun fact\nYour mileage may vary on how fun this fact is, but I only started drinking coffee because of a series of murder mystery novels set in the Scottish Highlands. The detective in the series is constantly visiting townsfolk and being served tea or coffee, and I envied the cozy vibe while I listened to the audiobooks at work, so I started paying visits to the office coffee machine."
  },
  {
    "objectID": "about/MeganGalarneau.html",
    "href": "about/MeganGalarneau.html",
    "title": "Megan Galarneau",
    "section": "",
    "text": "I graduated with my Bachelors in Marketing w/Communications in December 2021. I’m currently working in Marketing Operations for a tech start-up in Boston, MA."
  },
  {
    "objectID": "about/MeganGalarneau.html#r-experience",
    "href": "about/MeganGalarneau.html#r-experience",
    "title": "Megan Galarneau",
    "section": "R experience",
    "text": "R experience\nI have no R experience, but I come from (and am getting married to) a family of programmers. Safe to stay, my journey to learning to code was inevitable."
  },
  {
    "objectID": "about/MeganGalarneau.html#research-interests",
    "href": "about/MeganGalarneau.html#research-interests",
    "title": "Megan Galarneau",
    "section": "Research interests",
    "text": "Research interests\nStill learning what my interests are, but excited to learn. In my undergrad I researched the impact of mindfulness practices on employee performance. I enjoyed it quite a bit and would like to return to it one day with fresh eyes and an advanced skill set."
  },
  {
    "objectID": "about/MeganGalarneau.html#hometown",
    "href": "about/MeganGalarneau.html#hometown",
    "title": "Megan Galarneau",
    "section": "Hometown",
    "text": "Hometown\nDover, NH"
  },
  {
    "objectID": "about/MeganGalarneau.html#hobbies",
    "href": "about/MeganGalarneau.html#hobbies",
    "title": "Megan Galarneau",
    "section": "Hobbies",
    "text": "Hobbies\nMost recently, learning to play piano. It’s going slow but steady."
  },
  {
    "objectID": "about/MeganGalarneau.html#fun-fact",
    "href": "about/MeganGalarneau.html#fun-fact",
    "title": "Megan Galarneau",
    "section": "Fun fact",
    "text": "Fun fact\nMy fiance and I adopted a long-hair orange tabby named Morph. Treasure Planet inspired name for those who catch the reference.."
  },
  {
    "objectID": "about/PrachitiParkar.html",
    "href": "about/PrachitiParkar.html",
    "title": "Prachiti Parkar",
    "section": "",
    "text": "save a copy of this document as FirstLast.qmd in the about folder\nreplace Your Name in yaml header with your first and last name\nsave an image (jpeg, png) to use in the about/images folder\nreplace image names in yaml header\nreplace github user name\nfill in information below, as appropriate\ncommit to github and submit pull request"
  },
  {
    "objectID": "about/PrachitiParkar.html#educationwork-background",
    "href": "about/PrachitiParkar.html#educationwork-background",
    "title": "Prachiti Parkar",
    "section": "Education/Work Background",
    "text": "Education/Work Background\nMSCS @ UMass Amherst"
  },
  {
    "objectID": "about/PrachitiParkar.html#r-experience",
    "href": "about/PrachitiParkar.html#r-experience",
    "title": "Prachiti Parkar",
    "section": "R experience",
    "text": "R experience\nBeginner"
  },
  {
    "objectID": "about/PrachitiParkar.html#research-interests",
    "href": "about/PrachitiParkar.html#research-interests",
    "title": "Prachiti Parkar",
    "section": "Research interests",
    "text": "Research interests\n\nNLP\nDistributed Systems"
  },
  {
    "objectID": "about/PrachitiParkar.html#hometown",
    "href": "about/PrachitiParkar.html#hometown",
    "title": "Prachiti Parkar",
    "section": "Hometown",
    "text": "Hometown\n\nGoa, India"
  },
  {
    "objectID": "about/PrachitiParkar.html#hobbies",
    "href": "about/PrachitiParkar.html#hobbies",
    "title": "Prachiti Parkar",
    "section": "Hobbies",
    "text": "Hobbies\n\nDancing"
  },
  {
    "objectID": "about/PrachitiParkar.html#fun-fact",
    "href": "about/PrachitiParkar.html#fun-fact",
    "title": "Prachiti Parkar",
    "section": "Fun fact",
    "text": "Fun fact\n\nI love to sleep :P"
  },
  {
    "objectID": "about/AritraBasuRe.html",
    "href": "about/AritraBasuRe.html",
    "title": "Aritra Basu",
    "section": "",
    "text": "I am a PhD student in Economics in the second year of the program."
  },
  {
    "objectID": "about/AritraBasuRe.html#r-experience",
    "href": "about/AritraBasuRe.html#r-experience",
    "title": "Aritra Basu",
    "section": "R experience",
    "text": "R experience\n(Almost) no experience."
  },
  {
    "objectID": "about/AritraBasuRe.html#research-interests",
    "href": "about/AritraBasuRe.html#research-interests",
    "title": "Aritra Basu",
    "section": "Research interests",
    "text": "Research interests\nI am broadly interested in Marxist Political Economy as well as Applied Microeconometrics. More narrowly, I want to study how power imbalances matter in generating long-term intersectional differences."
  },
  {
    "objectID": "about/AritraBasuRe.html#hometown",
    "href": "about/AritraBasuRe.html#hometown",
    "title": "Aritra Basu",
    "section": "Hometown",
    "text": "Hometown\nKolkata"
  },
  {
    "objectID": "about/AritraBasuRe.html#hobbies",
    "href": "about/AritraBasuRe.html#hobbies",
    "title": "Aritra Basu",
    "section": "Hobbies",
    "text": "Hobbies\nI love playing Fifa."
  },
  {
    "objectID": "about/Kris-Smole_AboutMe.html",
    "href": "about/Kris-Smole_AboutMe.html",
    "title": "Kris Smole",
    "section": "",
    "text": "My undergraduate degree is in Accounting and Finance (double major). Professionally, I worked in accounting and financial analysis roles, doing auditing, accounting, reporting, budgeting, forecasting, contract modeling and ad hoc analysis for organizational decison-makers. In some of these roles, I dabbled in obtaining data from the various informaton systems to then use in modelling for analysis.\nI pivoted to Higher Education Leadership and Student Affairs, completing a Masters in Educational Leadership policy for postsecondary education (ie: higher education/college/university). I am a passionate advocate of underrepresented students, including first generation students, and low-income students.\nThe importance of communicating the meaning of what lies within data and its analysis drives my work in R."
  },
  {
    "objectID": "about/Kris-Smole_AboutMe.html#r-experience",
    "href": "about/Kris-Smole_AboutMe.html#r-experience",
    "title": "Kris Smole",
    "section": "R experience",
    "text": "R experience\nI think I’m up to 12 days of experience as of this posting : )"
  },
  {
    "objectID": "about/Kris-Smole_AboutMe.html#research-interests",
    "href": "about/Kris-Smole_AboutMe.html#research-interests",
    "title": "Kris Smole",
    "section": "Research interests",
    "text": "Research interests\nBroadly speaking, Higher Education topics (including Financial Aid & Student Access) and Social Justice Topics"
  },
  {
    "objectID": "about/Kris-Smole_AboutMe.html#hometown",
    "href": "about/Kris-Smole_AboutMe.html#hometown",
    "title": "Kris Smole",
    "section": "Hometown",
    "text": "Hometown\nDedham, Iowa - the ‘other’ Dedham…named after…you guessed it! Dedham, MA. I’ve lived a few places since then, and now I live near the University of Massachusetts-Amherst."
  },
  {
    "objectID": "about/Kris-Smole_AboutMe.html#hobbies",
    "href": "about/Kris-Smole_AboutMe.html#hobbies",
    "title": "Kris Smole",
    "section": "Hobbies",
    "text": "Hobbies\nThrifting, antiques, New England history, hiking, music of many genres, museums (art, history, cultural), travel (whenever COVID risk allows), finding good local breweries and cooking/baking."
  },
  {
    "objectID": "about/Kris-Smole_AboutMe.html#fun-fact",
    "href": "about/Kris-Smole_AboutMe.html#fun-fact",
    "title": "Kris Smole",
    "section": "Fun fact",
    "text": "Fun fact\nMy last name is of Slovenian origin (Slovenia is near Austria and formerly a part of Yugoslavia). It is pronounced smO-lee."
  },
  {
    "objectID": "about/ProfRolfe.html",
    "href": "about/ProfRolfe.html",
    "title": "Meredith Rolfe",
    "section": "",
    "text": "Associate Professor, Political Science | UMass Amherst Lecturer in Public Management | London School of Economics Nuffield Postdoctoral Prize Fellow | Oxford University\nPhD, Political Science | University of Chicago BA, Comparative Area Studies | Duke University"
  },
  {
    "objectID": "about/ProfRolfe.html#r-experience",
    "href": "about/ProfRolfe.html#r-experience",
    "title": "Meredith Rolfe",
    "section": "R experience",
    "text": "R experience\nI was using R before it was cool (and when it was still called S…)"
  },
  {
    "objectID": "about/ProfRolfe.html#research-interests",
    "href": "about/ProfRolfe.html#research-interests",
    "title": "Meredith Rolfe",
    "section": "Research interests",
    "text": "Research interests\nTheories that combine social interaction and cognitive micro-foundations; innovative applications of methods of any sort (networks, text, simulations, experiments, surveys…)"
  },
  {
    "objectID": "about/ProfRolfe.html#hometown",
    "href": "about/ProfRolfe.html#hometown",
    "title": "Meredith Rolfe",
    "section": "Hometown",
    "text": "Hometown\nCharlotte, NC"
  },
  {
    "objectID": "about/ProfRolfe.html#hobbies",
    "href": "about/ProfRolfe.html#hobbies",
    "title": "Meredith Rolfe",
    "section": "Hobbies",
    "text": "Hobbies\num, DACSS???"
  },
  {
    "objectID": "about/ProfRolfe.html#fun-fact",
    "href": "about/ProfRolfe.html#fun-fact",
    "title": "Meredith Rolfe",
    "section": "Fun fact",
    "text": "Fun fact\ncoffee is my favorite food"
  },
  {
    "objectID": "about/PranavKomaravolu.html",
    "href": "about/PranavKomaravolu.html",
    "title": "Pranav Bharadwaj Komaravolu",
    "section": "",
    "text": "A Computer Science Graduate student who is ever ready to take on challenges and eager to leverage my knowledge and passion for computers to create an impact on the organization or project I will be part of."
  },
  {
    "objectID": "about/PranavKomaravolu.html#educationwork-background",
    "href": "about/PranavKomaravolu.html#educationwork-background",
    "title": "Pranav Bharadwaj Komaravolu",
    "section": "Education/Work Background",
    "text": "Education/Work Background\n\nMaster of Science in Computer Science  from University of Massachusetts Amherst (Aug 2022 - )\nIntegrated Master of Technology  in Computer Science from University of Hyderabad, India  (Jul 2017 - Jun 2022)"
  },
  {
    "objectID": "about/PranavKomaravolu.html#r-experience",
    "href": "about/PranavKomaravolu.html#r-experience",
    "title": "Pranav Bharadwaj Komaravolu",
    "section": "R experience",
    "text": "R experience\nLearnt some R as a part of Stat-501 course. Slight acquaintance with mosaic library. But willing to master it through this course."
  },
  {
    "objectID": "about/PranavKomaravolu.html#research-interests",
    "href": "about/PranavKomaravolu.html#research-interests",
    "title": "Pranav Bharadwaj Komaravolu",
    "section": "Research interests",
    "text": "Research interests\nCurrently interested in the following areas:\n\nBio-NLP, which involves the use of natural language techniques and models to interpret genome sequences and also identify protein structures.\nDistributed learning, which involves the task of distributing the training task of a large machine learning model over various nodes in a compute cluster."
  },
  {
    "objectID": "about/PranavKomaravolu.html#hometown",
    "href": "about/PranavKomaravolu.html#hometown",
    "title": "Pranav Bharadwaj Komaravolu",
    "section": "Hometown",
    "text": "Hometown\nHyderabad, India"
  },
  {
    "objectID": "about/PranavKomaravolu.html#hobbies",
    "href": "about/PranavKomaravolu.html#hobbies",
    "title": "Pranav Bharadwaj Komaravolu",
    "section": "Hobbies",
    "text": "Hobbies\n\nSwimming\nTennis\nReading comics\nI also like taking walk (only when the weather is pleasant)"
  },
  {
    "objectID": "about/PranavKomaravolu.html#fun-fact",
    "href": "about/PranavKomaravolu.html#fun-fact",
    "title": "Pranav Bharadwaj Komaravolu",
    "section": "Fun fact",
    "text": "Fun fact\nWill learn some by the end of this semester :)"
  },
  {
    "objectID": "about/PradhakshyaDhanakumar.html",
    "href": "about/PradhakshyaDhanakumar.html",
    "title": "Pradhakshya",
    "section": "",
    "text": "Computer Science Major"
  },
  {
    "objectID": "about/PradhakshyaDhanakumar.html#r-experience",
    "href": "about/PradhakshyaDhanakumar.html#r-experience",
    "title": "Pradhakshya",
    "section": "R experience",
    "text": "R experience\nBeginner"
  },
  {
    "objectID": "about/PradhakshyaDhanakumar.html#research-interests",
    "href": "about/PradhakshyaDhanakumar.html#research-interests",
    "title": "Pradhakshya",
    "section": "Research interests",
    "text": "Research interests\nAnything with Data"
  },
  {
    "objectID": "about/PradhakshyaDhanakumar.html#hometown",
    "href": "about/PradhakshyaDhanakumar.html#hometown",
    "title": "Pradhakshya",
    "section": "Hometown",
    "text": "Hometown\nMadurai, India"
  },
  {
    "objectID": "about/PradhakshyaDhanakumar.html#hobbies",
    "href": "about/PradhakshyaDhanakumar.html#hobbies",
    "title": "Pradhakshya",
    "section": "Hobbies",
    "text": "Hobbies\nSinging, Sketching"
  },
  {
    "objectID": "about/PradhakshyaDhanakumar.html#fun-fact",
    "href": "about/PradhakshyaDhanakumar.html#fun-fact",
    "title": "Pradhakshya",
    "section": "Fun fact",
    "text": "Fun fact\nEntropy++"
  },
  {
    "objectID": "about/StevenMcKeen.html",
    "href": "about/StevenMcKeen.html",
    "title": "Steven McKeen",
    "section": "",
    "text": "I got my under graduate degree in Marketing and Economics from the University of New Hampshire in 2021. Since then, I have been working at Wasserman an advertising agency that specializes in Gen Z marketing."
  },
  {
    "objectID": "about/StevenMcKeen.html#r-experience",
    "href": "about/StevenMcKeen.html#r-experience",
    "title": "Steven McKeen",
    "section": "R experience",
    "text": "R experience\n\nI have very little R experience for my undergrad degree and nothing since then."
  },
  {
    "objectID": "about/StevenMcKeen.html#research-interests",
    "href": "about/StevenMcKeen.html#research-interests",
    "title": "Steven McKeen",
    "section": "Research interests",
    "text": "Research interests\n\nI am interested in market analysis, climate justice, and human behavior."
  },
  {
    "objectID": "about/StevenMcKeen.html#hometown",
    "href": "about/StevenMcKeen.html#hometown",
    "title": "Steven McKeen",
    "section": "Hometown",
    "text": "Hometown\n\nI am from Westford Massachusetts"
  },
  {
    "objectID": "about/StevenMcKeen.html#hobbies",
    "href": "about/StevenMcKeen.html#hobbies",
    "title": "Steven McKeen",
    "section": "Hobbies",
    "text": "Hobbies\n\nI have really enjoyed cooking and baking recently."
  },
  {
    "objectID": "about/StevenMcKeen.html#fun-fact",
    "href": "about/StevenMcKeen.html#fun-fact",
    "title": "Steven McKeen",
    "section": "Fun fact",
    "text": "Fun fact\n\nFun fact I have hiked the long trail which runs from the VT MA border to Canada."
  },
  {
    "objectID": "about/KeithMartin.html",
    "href": "about/KeithMartin.html",
    "title": "Keith Martin",
    "section": "",
    "text": "I graduated from Trinity College in 2020 wiht a degree in Public Policy and Law. Currently, I am working for Seyfarth Shaw LLP as Senior Business Immigration Analyst. I spend most of my days preparing visas and helping immigrants get their Green Cards."
  },
  {
    "objectID": "about/KeithMartin.html#r-experience",
    "href": "about/KeithMartin.html#r-experience",
    "title": "Keith Martin",
    "section": "R experience",
    "text": "R experience\nI don’t have any R experience, but i have some experience in C. I started learning C to get into coding and learn some basic principles before starting this course."
  },
  {
    "objectID": "about/KeithMartin.html#research-interests",
    "href": "about/KeithMartin.html#research-interests",
    "title": "Keith Martin",
    "section": "Research interests",
    "text": "Research interests\nI am interested in immigration policy, cannabis law, and the effects of social media on democracy."
  },
  {
    "objectID": "about/KeithMartin.html#hometown",
    "href": "about/KeithMartin.html#hometown",
    "title": "Keith Martin",
    "section": "Hometown",
    "text": "Hometown\nI’m from Milton, MA. I went to Catholic Memorial High School and Milton High School."
  },
  {
    "objectID": "about/KeithMartin.html#hobbies",
    "href": "about/KeithMartin.html#hobbies",
    "title": "Keith Martin",
    "section": "Hobbies",
    "text": "Hobbies\nI love Jiu Jitsu and wrestling."
  },
  {
    "objectID": "about/KeithMartin.html#fun-fact",
    "href": "about/KeithMartin.html#fun-fact",
    "title": "Keith Martin",
    "section": "Fun fact",
    "text": "Fun fact\nI am currently living in a tiny New York City apartment with a 100lb Black Lab named Kush."
  },
  {
    "objectID": "about/ThrishulPola.html",
    "href": "about/ThrishulPola.html",
    "title": "Thrishul Pola",
    "section": "",
    "text": "##Instructions"
  },
  {
    "objectID": "about/ThrishulPola.html#educationwork-background",
    "href": "about/ThrishulPola.html#educationwork-background",
    "title": "Thrishul Pola",
    "section": "Education/Work Background",
    "text": "Education/Work Background\nWorked as a Business Intelligence Analyst (Tableau) for 2 Years, Undergrad in Electronics and Communication Engineering and I possess Technical skills such as Basic R Programming, Python Programming, SQL, Tableau, Ms Excel"
  },
  {
    "objectID": "about/ThrishulPola.html#r-experience",
    "href": "about/ThrishulPola.html#r-experience",
    "title": "Thrishul Pola",
    "section": "R experience",
    "text": "R experience\nNewbie to R Programming Language"
  },
  {
    "objectID": "about/ThrishulPola.html#research-interests",
    "href": "about/ThrishulPola.html#research-interests",
    "title": "Thrishul Pola",
    "section": "Research interests",
    "text": "Research interests\nInterested in Analyzing Financial markets and what causes events like recession and how they impact Financial Markets globally."
  },
  {
    "objectID": "about/ThrishulPola.html#hometown",
    "href": "about/ThrishulPola.html#hometown",
    "title": "Thrishul Pola",
    "section": "Hometown",
    "text": "Hometown\nHyderabad, Telangana, India"
  },
  {
    "objectID": "about/ThrishulPola.html#hobbies",
    "href": "about/ThrishulPola.html#hobbies",
    "title": "Thrishul Pola",
    "section": "Hobbies",
    "text": "Hobbies\nAnalyzing and Investing in Financial Markets, Listening to Music and Exploring world physically and virtually."
  },
  {
    "objectID": "about/ThrishulPola.html#fun-fact",
    "href": "about/ThrishulPola.html#fun-fact",
    "title": "Thrishul Pola",
    "section": "Fun fact",
    "text": "Fun fact\nTo be honest no Fun Facts as of now but im an Introvert. Lol"
  },
  {
    "objectID": "about/AdityaSalveru.html",
    "href": "about/AdityaSalveru.html",
    "title": "Aditya Salveru",
    "section": "",
    "text": "save a copy of this document as FirstLast.qmd in the about folder\nreplace Your Name in yaml header with your first and last name\nsave an image (jpeg, png) to use in the about/images folder\nreplace image names in yaml header\nreplace github user name\nfill in information below, as appropriate\ncommit to github and submit pull request"
  },
  {
    "objectID": "about/AdityaSalveru.html#educationwork-background",
    "href": "about/AdityaSalveru.html#educationwork-background",
    "title": "Aditya Salveru",
    "section": "Education/Work Background",
    "text": "Education/Work Background\n\nCurrent:\n\nMSCS @ UMass Amherst\n\n\n\nPrevious:\n\nSoftware Engineer @ Google\nSoftware Engineer @ MathWorks\nBachelors in Electrical Engineering"
  },
  {
    "objectID": "about/AdityaSalveru.html#r-experience",
    "href": "about/AdityaSalveru.html#r-experience",
    "title": "Aditya Salveru",
    "section": "R experience",
    "text": "R experience\nNone"
  },
  {
    "objectID": "about/AdityaSalveru.html#research-interests",
    "href": "about/AdityaSalveru.html#research-interests",
    "title": "Aditya Salveru",
    "section": "Research interests",
    "text": "Research interests\n\nMachine Learning\nData Science\nSystems"
  },
  {
    "objectID": "about/AdityaSalveru.html#hometown",
    "href": "about/AdityaSalveru.html#hometown",
    "title": "Aditya Salveru",
    "section": "Hometown",
    "text": "Hometown\n\nIndia"
  },
  {
    "objectID": "about/AdityaSalveru.html#hobbies",
    "href": "about/AdityaSalveru.html#hobbies",
    "title": "Aditya Salveru",
    "section": "Hobbies",
    "text": "Hobbies\n\nComputer Games\nMusic\nWorking out"
  },
  {
    "objectID": "about/AdityaSalveru.html#fun-fact",
    "href": "about/AdityaSalveru.html#fun-fact",
    "title": "Aditya Salveru",
    "section": "Fun fact",
    "text": "Fun fact\n\nUnlike many people, I don’t like to play cricket. Every time I played in the past, I injured some part of my body :)"
  },
  {
    "objectID": "about/JananiNatarajan.html",
    "href": "about/JananiNatarajan.html",
    "title": "Janani Natarajan",
    "section": "",
    "text": "university of Massachusetts, Amherst Masters in computer science"
  },
  {
    "objectID": "about/JananiNatarajan.html#r-experience",
    "href": "about/JananiNatarajan.html#r-experience",
    "title": "Janani Natarajan",
    "section": "R experience",
    "text": "R experience\nAssisted in designing and developing a technical architecture, requiremnets and statistical models"
  },
  {
    "objectID": "about/JananiNatarajan.html#research-interests",
    "href": "about/JananiNatarajan.html#research-interests",
    "title": "Janani Natarajan",
    "section": "Research interests",
    "text": "Research interests\nI am very much interested in Machine learning and natual language processing language"
  },
  {
    "objectID": "about/JananiNatarajan.html#hometown",
    "href": "about/JananiNatarajan.html#hometown",
    "title": "Janani Natarajan",
    "section": "Hometown",
    "text": "Hometown\nChennai, India."
  },
  {
    "objectID": "about/JananiNatarajan.html#hobbies",
    "href": "about/JananiNatarajan.html#hobbies",
    "title": "Janani Natarajan",
    "section": "Hobbies",
    "text": "Hobbies\nDancing,reading books,painting"
  },
  {
    "objectID": "about/JananiNatarajan.html#fun-fact",
    "href": "about/JananiNatarajan.html#fun-fact",
    "title": "Janani Natarajan",
    "section": "Fun fact",
    "text": "Fun fact\nPhysical money does not last longer for me"
  },
  {
    "objectID": "about/MatthewWeiner.html",
    "href": "about/MatthewWeiner.html",
    "title": "Matthew Weiner",
    "section": "",
    "text": "Last summer I had the opportunity to intern at HubSpot in Cambridge as a Software Engineer intern. It was a great experience which taught me a lot about the tech industry.\nPrior to that, my only work experiences were working in a Dairy Queen during my summers"
  },
  {
    "objectID": "about/MatthewWeiner.html#r-experience",
    "href": "about/MatthewWeiner.html#r-experience",
    "title": "Matthew Weiner",
    "section": "R experience",
    "text": "R experience\nI have never used R before so I am looking forward to learning a lot this semester!"
  },
  {
    "objectID": "about/MatthewWeiner.html#research-interests",
    "href": "about/MatthewWeiner.html#research-interests",
    "title": "Matthew Weiner",
    "section": "Research interests",
    "text": "Research interests\nMy main research interests are in the field of Machine Learning and AI, specifically I am interested in learning more about Reinforcement Learninig."
  },
  {
    "objectID": "about/MatthewWeiner.html#hometown",
    "href": "about/MatthewWeiner.html#hometown",
    "title": "Matthew Weiner",
    "section": "Hometown",
    "text": "Hometown\nI am from Mansfield, MA"
  },
  {
    "objectID": "about/MatthewWeiner.html#hobbies",
    "href": "about/MatthewWeiner.html#hobbies",
    "title": "Matthew Weiner",
    "section": "Hobbies",
    "text": "Hobbies\nI am a big Boston sports fan and also enjoy playing sports as well. I am currently on the UMass club swim team and have been swimming competitively for over 16 years."
  },
  {
    "objectID": "about/MatthewWeiner.html#fun-fact",
    "href": "about/MatthewWeiner.html#fun-fact",
    "title": "Matthew Weiner",
    "section": "Fun fact",
    "text": "Fun fact\nWhen I was still working at Dairy Queen, we often had Patriots players come in after practice so I have gotten to meet most of the well known players (Gronk really liked his banana splits ;) )."
  },
  {
    "objectID": "about/LindaHumphrey.html",
    "href": "about/LindaHumphrey.html",
    "title": "Linda Humphrey",
    "section": "",
    "text": "Ms Computer Science"
  },
  {
    "objectID": "about/LindaHumphrey.html#r-experience",
    "href": "about/LindaHumphrey.html#r-experience",
    "title": "Linda Humphrey",
    "section": "R experience",
    "text": "R experience\nBeginner"
  },
  {
    "objectID": "about/LindaHumphrey.html#research-interests",
    "href": "about/LindaHumphrey.html#research-interests",
    "title": "Linda Humphrey",
    "section": "Research interests",
    "text": "Research interests\nBig Data Virtualization"
  },
  {
    "objectID": "about/LindaHumphrey.html#hometown",
    "href": "about/LindaHumphrey.html#hometown",
    "title": "Linda Humphrey",
    "section": "Hometown",
    "text": "Hometown\nSpringfield"
  },
  {
    "objectID": "about/LindaHumphrey.html#hobbies",
    "href": "about/LindaHumphrey.html#hobbies",
    "title": "Linda Humphrey",
    "section": "Hobbies",
    "text": "Hobbies\nTravel"
  },
  {
    "objectID": "about/LindaHumphrey.html#fun-fact",
    "href": "about/LindaHumphrey.html#fun-fact",
    "title": "Linda Humphrey",
    "section": "Fun fact",
    "text": "Fun fact\nI still wear earings from when I was 18 yrs old."
  },
  {
    "objectID": "about/SahanPrasadPodduturiReddy.html",
    "href": "about/SahanPrasadPodduturiReddy.html",
    "title": "SahanPrasadPodduturiReddy",
    "section": "",
    "text": "##Instructions"
  },
  {
    "objectID": "about/SahanPrasadPodduturiReddy.html#educationwork-background",
    "href": "about/SahanPrasadPodduturiReddy.html#educationwork-background",
    "title": "SahanPrasadPodduturiReddy",
    "section": "Education/Work Background",
    "text": "Education/Work Background\nPursuing a Master’s Degree in Computer Science. Worked as a Java Developer for 2 years."
  },
  {
    "objectID": "about/SahanPrasadPodduturiReddy.html#r-experience",
    "href": "about/SahanPrasadPodduturiReddy.html#r-experience",
    "title": "SahanPrasadPodduturiReddy",
    "section": "R experience",
    "text": "R experience\nNo prior experience using R."
  },
  {
    "objectID": "about/SahanPrasadPodduturiReddy.html#research-interests",
    "href": "about/SahanPrasadPodduturiReddy.html#research-interests",
    "title": "SahanPrasadPodduturiReddy",
    "section": "Research interests",
    "text": "Research interests\nRobotics, Machine Learning"
  },
  {
    "objectID": "about/SahanPrasadPodduturiReddy.html#hometown",
    "href": "about/SahanPrasadPodduturiReddy.html#hometown",
    "title": "SahanPrasadPodduturiReddy",
    "section": "Hometown",
    "text": "Hometown\nHyderabad, India"
  },
  {
    "objectID": "about/SahanPrasadPodduturiReddy.html#hobbies",
    "href": "about/SahanPrasadPodduturiReddy.html#hobbies",
    "title": "SahanPrasadPodduturiReddy",
    "section": "Hobbies",
    "text": "Hobbies\nBasketball, Netflix, Trekking"
  },
  {
    "objectID": "about/SahanPrasadPodduturiReddy.html#fun-fact",
    "href": "about/SahanPrasadPodduturiReddy.html#fun-fact",
    "title": "SahanPrasadPodduturiReddy",
    "section": "Fun fact",
    "text": "Fun fact\nA shrimp’s heart is in its head."
  },
  {
    "objectID": "about/EricoYu.html",
    "href": "about/EricoYu.html",
    "title": "Erico Yu",
    "section": "",
    "text": "##Instructions"
  },
  {
    "objectID": "about/EricoYu.html#educationwork-background",
    "href": "about/EricoYu.html#educationwork-background",
    "title": "Erico Yu",
    "section": "Education/Work Background",
    "text": "Education/Work Background\nLecturer, Grinnell College, Iowa (Aug 2022 - Jan 2023) Ph.D candidate, Political Science, The University of Iowa (2023)"
  },
  {
    "objectID": "about/EricoYu.html#r-experience",
    "href": "about/EricoYu.html#r-experience",
    "title": "Erico Yu",
    "section": "R experience",
    "text": "R experience\n\n7-year"
  },
  {
    "objectID": "about/EricoYu.html#research-interests",
    "href": "about/EricoYu.html#research-interests",
    "title": "Erico Yu",
    "section": "Research interests",
    "text": "Research interests\n\ncomparative political behavior (regional specialization: China)\njudicial politics\ngender politics\nquantitative and experimental methods"
  },
  {
    "objectID": "about/EricoYu.html#hometown",
    "href": "about/EricoYu.html#hometown",
    "title": "Erico Yu",
    "section": "Hometown",
    "text": "Hometown\n\nGuangzhou, China"
  },
  {
    "objectID": "about/EricoYu.html#hobbies",
    "href": "about/EricoYu.html#hobbies",
    "title": "Erico Yu",
    "section": "Hobbies",
    "text": "Hobbies\n\nLego building!\nfencing, skiing, traveling"
  },
  {
    "objectID": "about/EricoYu.html#fun-fact",
    "href": "about/EricoYu.html#fun-fact",
    "title": "Erico Yu",
    "section": "Fun fact",
    "text": "Fun fact\n\nI have been to 32 states in the US."
  },
  {
    "objectID": "about/DanielHannon.html",
    "href": "about/DanielHannon.html",
    "title": "Daniel Hannon",
    "section": "",
    "text": "Masters Student in CICS, finished Bachelor’s degree in CS also at UMass Amherst"
  },
  {
    "objectID": "about/DanielHannon.html#r-experience",
    "href": "about/DanielHannon.html#r-experience",
    "title": "Daniel Hannon",
    "section": "R experience",
    "text": "R experience\nNone"
  },
  {
    "objectID": "about/DanielHannon.html#research-interests",
    "href": "about/DanielHannon.html#research-interests",
    "title": "Daniel Hannon",
    "section": "Research interests",
    "text": "Research interests\nMachine Learning and AI"
  },
  {
    "objectID": "about/DanielHannon.html#hometown",
    "href": "about/DanielHannon.html#hometown",
    "title": "Daniel Hannon",
    "section": "Hometown",
    "text": "Hometown\nBillerica MA"
  },
  {
    "objectID": "about/DanielHannon.html#hobbies",
    "href": "about/DanielHannon.html#hobbies",
    "title": "Daniel Hannon",
    "section": "Hobbies",
    "text": "Hobbies\nFrisbee and DnD"
  },
  {
    "objectID": "about/DanielHannon.html#fun-fact",
    "href": "about/DanielHannon.html#fun-fact",
    "title": "Daniel Hannon",
    "section": "Fun fact",
    "text": "Fun fact\nI have a birthmark shaped like a stegosaurus"
  },
  {
    "objectID": "about/PoChunYang.html",
    "href": "about/PoChunYang.html",
    "title": "PoChunYang",
    "section": "",
    "text": "##Instructions"
  },
  {
    "objectID": "about/PoChunYang.html#educationwork-background",
    "href": "about/PoChunYang.html#educationwork-background",
    "title": "PoChunYang",
    "section": "Education/Work Background",
    "text": "Education/Work Background\nI am a master students of electrical & computer engineering."
  },
  {
    "objectID": "about/PoChunYang.html#r-experience",
    "href": "about/PoChunYang.html#r-experience",
    "title": "PoChunYang",
    "section": "R experience",
    "text": "R experience\nI do not have any R experience. I hope I could learn a lot form this class."
  },
  {
    "objectID": "about/PoChunYang.html#research-interests",
    "href": "about/PoChunYang.html#research-interests",
    "title": "PoChunYang",
    "section": "Research interests",
    "text": "Research interests\nAlgorithm, Machine Learning"
  },
  {
    "objectID": "about/PoChunYang.html#hometown",
    "href": "about/PoChunYang.html#hometown",
    "title": "PoChunYang",
    "section": "Hometown",
    "text": "Hometown\nTaiwan"
  },
  {
    "objectID": "about/PoChunYang.html#hobbies",
    "href": "about/PoChunYang.html#hobbies",
    "title": "PoChunYang",
    "section": "Hobbies",
    "text": "Hobbies\nsnowboarding, workout, watch movie"
  },
  {
    "objectID": "about/PoChunYang.html#fun-fact",
    "href": "about/PoChunYang.html#fun-fact",
    "title": "PoChunYang",
    "section": "Fun fact",
    "text": "Fun fact\nI would like to train in the gym in the morning. However, I seldom wake up in the morning."
  },
  {
    "objectID": "about/NanciKopeckyAboutMe.html",
    "href": "about/NanciKopeckyAboutMe.html",
    "title": "Nanci Kopecky",
    "section": "",
    "text": "##Instructions"
  },
  {
    "objectID": "about/NanciKopeckyAboutMe.html#educationwork-background",
    "href": "about/NanciKopeckyAboutMe.html#educationwork-background",
    "title": "Nanci Kopecky",
    "section": "Education/Work Background",
    "text": "Education/Work Background\n*I teach at Roxbury Community College. So far, every ten years I earn a new degree, BA Math (1996) MA Education (2006) MS Math (2016) and ?? (2026)!"
  },
  {
    "objectID": "about/NanciKopeckyAboutMe.html#r-experience",
    "href": "about/NanciKopeckyAboutMe.html#r-experience",
    "title": "Nanci Kopecky",
    "section": "R experience",
    "text": "R experience\n*Minimal"
  },
  {
    "objectID": "about/NanciKopeckyAboutMe.html#research-interests",
    "href": "about/NanciKopeckyAboutMe.html#research-interests",
    "title": "Nanci Kopecky",
    "section": "Research interests",
    "text": "Research interests\n*Feminism, conservation"
  },
  {
    "objectID": "about/NanciKopeckyAboutMe.html#hometown",
    "href": "about/NanciKopeckyAboutMe.html#hometown",
    "title": "Nanci Kopecky",
    "section": "Hometown",
    "text": "Hometown\n*Chicago area"
  },
  {
    "objectID": "about/NanciKopeckyAboutMe.html#hobbies",
    "href": "about/NanciKopeckyAboutMe.html#hobbies",
    "title": "Nanci Kopecky",
    "section": "Hobbies",
    "text": "Hobbies\n*Reading, spending time with family, listening to music, and anything outside, biking, skiing, gardening"
  },
  {
    "objectID": "about/NanciKopeckyAboutMe.html#fun-fact",
    "href": "about/NanciKopeckyAboutMe.html#fun-fact",
    "title": "Nanci Kopecky",
    "section": "Fun fact",
    "text": "Fun fact\n*As of last summer, I can still do a back dive and back flip, no form though!"
  },
  {
    "objectID": "about/LaurenZichittella.html",
    "href": "about/LaurenZichittella.html",
    "title": "Lauren ZIchittella",
    "section": "",
    "text": "BS Biochemistry, University at Albany\nMS Epidemiology, UMass Amherst\n\n\n\nLead SAS Programmer/Analyst"
  },
  {
    "objectID": "about/LaurenZichittella.html#r-experience",
    "href": "about/LaurenZichittella.html#r-experience",
    "title": "Lauren ZIchittella",
    "section": "R experience",
    "text": "R experience\nBeginner course work\nMinimal work experience"
  },
  {
    "objectID": "about/LaurenZichittella.html#research-interests",
    "href": "about/LaurenZichittella.html#research-interests",
    "title": "Lauren ZIchittella",
    "section": "Research interests",
    "text": "Research interests\nPublic Health\nData!"
  },
  {
    "objectID": "about/LaurenZichittella.html#hometown",
    "href": "about/LaurenZichittella.html#hometown",
    "title": "Lauren ZIchittella",
    "section": "Hometown",
    "text": "Hometown\nBuffalo, NY"
  },
  {
    "objectID": "about/LaurenZichittella.html#hobbies",
    "href": "about/LaurenZichittella.html#hobbies",
    "title": "Lauren ZIchittella",
    "section": "Hobbies",
    "text": "Hobbies\nReading\nCooking\nMusic\nHanging with my family"
  },
  {
    "objectID": "about/LaurenZichittella.html#fun-fact",
    "href": "about/LaurenZichittella.html#fun-fact",
    "title": "Lauren ZIchittella",
    "section": "Fun fact",
    "text": "Fun fact\nI love Dolly Parton."
  },
  {
    "objectID": "about/MicheleCarlin_About.html",
    "href": "about/MicheleCarlin_About.html",
    "title": "Michele Carlin",
    "section": "",
    "text": "##Instructions"
  },
  {
    "objectID": "about/MicheleCarlin_About.html#educationwork-background",
    "href": "about/MicheleCarlin_About.html#educationwork-background",
    "title": "Michele Carlin",
    "section": "Education/Work Background",
    "text": "Education/Work Background\nI am currently working at UMass Chan Medical School as an Institutional Research Analyst."
  },
  {
    "objectID": "about/MicheleCarlin_About.html#r-experience",
    "href": "about/MicheleCarlin_About.html#r-experience",
    "title": "Michele Carlin",
    "section": "R experience",
    "text": "R experience\nI don’t have any experience with R."
  },
  {
    "objectID": "about/MicheleCarlin_About.html#research-interests",
    "href": "about/MicheleCarlin_About.html#research-interests",
    "title": "Michele Carlin",
    "section": "Research interests",
    "text": "Research interests\nMedical Education"
  },
  {
    "objectID": "about/MicheleCarlin_About.html#hometown",
    "href": "about/MicheleCarlin_About.html#hometown",
    "title": "Michele Carlin",
    "section": "Hometown",
    "text": "Hometown\nLeominster, MA"
  },
  {
    "objectID": "about/MicheleCarlin_About.html#hobbies",
    "href": "about/MicheleCarlin_About.html#hobbies",
    "title": "Michele Carlin",
    "section": "Hobbies",
    "text": "Hobbies\nWalking/hiking with my kids and dog.\nSpending time with family and friends."
  },
  {
    "objectID": "about/MicheleCarlin_About.html#fun-fact",
    "href": "about/MicheleCarlin_About.html#fun-fact",
    "title": "Michele Carlin",
    "section": "Fun fact",
    "text": "Fun fact\nI took a few graduate level classes as UMass Amherst almost 20 years ago and I’m just now getting back to pursing additional graduate credits (possibly enrolling in a graduate program in the future)."
  },
  {
    "objectID": "about/EliBoahen.html",
    "href": "about/EliBoahen.html",
    "title": "Eli Boahen",
    "section": "",
    "text": "Hi, I’m Eli ( they / them ) I’m new to grad school and looking for global and domestic opportunities"
  },
  {
    "objectID": "about/EliBoahen.html#educationwork-background",
    "href": "about/EliBoahen.html#educationwork-background",
    "title": "Eli Boahen",
    "section": "Education/Work Background",
    "text": "Education/Work Background\n\nUndergrad at Smith College as a STEM Posse 2 Scholar\n\nI did a self Designed major in Arts and Technology, combining Computer Science, Engineering, Art, and Design into one field of study. I believe that IDP ( interdisciplinary ) is an amazing way to not only problem solve, but verify a problem in the first place."
  },
  {
    "objectID": "about/EliBoahen.html#r-experience",
    "href": "about/EliBoahen.html#r-experience",
    "title": "Eli Boahen",
    "section": "R experience",
    "text": "R experience\nThis assignment. I’m liking R so far :D"
  },
  {
    "objectID": "about/EliBoahen.html#research-interests",
    "href": "about/EliBoahen.html#research-interests",
    "title": "Eli Boahen",
    "section": "Research interests",
    "text": "Research interests\nAI Ethics | Cyborg Anthropology | HCI | and Data Ethics\nI want to work in the IOT and assistant device space to create technology that supports user well being as well as autonomy. I would like to work in industry, though everyday a PhD sounds more and more tempting. Ultimately, I want to improve the course of future-tech.\nI am interested in the IOT and assistive device space because of its privacy, security, and autonomy challenges. There are overlaps with robotics, digital media, and the health sector! I’ve enjoyed improving digital experiences through design, now I want to use data to build and advocate for those experiences."
  },
  {
    "objectID": "about/EliBoahen.html#hometown",
    "href": "about/EliBoahen.html#hometown",
    "title": "Eli Boahen",
    "section": "Hometown",
    "text": "Hometown\nNew York City"
  },
  {
    "objectID": "about/EliBoahen.html#hobbies",
    "href": "about/EliBoahen.html#hobbies",
    "title": "Eli Boahen",
    "section": "Hobbies",
    "text": "Hobbies\nI love my houseplants, drawing, listening to music, and I study Japanese"
  },
  {
    "objectID": "about/EliBoahen.html#fun-fact",
    "href": "about/EliBoahen.html#fun-fact",
    "title": "Eli Boahen",
    "section": "Fun fact",
    "text": "Fun fact\nI’m Ghanaian-American and I love okonomiyaki"
  },
  {
    "objectID": "about/SaiVenkatesh.html",
    "href": "about/SaiVenkatesh.html",
    "title": "Sai Venkatesh",
    "section": "",
    "text": "Hi. I did my undergrad in Chennai, India. Later I worked for over 4 years at Samsung and Motorq. Currently I am a Masters in Computer Science student at UMass Amherst."
  },
  {
    "objectID": "about/SaiVenkatesh.html#r-experience",
    "href": "about/SaiVenkatesh.html#r-experience",
    "title": "Sai Venkatesh",
    "section": "R experience",
    "text": "R experience\nI have no R experience."
  },
  {
    "objectID": "about/SaiVenkatesh.html#research-interests",
    "href": "about/SaiVenkatesh.html#research-interests",
    "title": "Sai Venkatesh",
    "section": "Research interests",
    "text": "Research interests\nI am interested in Distributed Systems and Low Latency Streaming Applications."
  },
  {
    "objectID": "about/SaiVenkatesh.html#hometown",
    "href": "about/SaiVenkatesh.html#hometown",
    "title": "Sai Venkatesh",
    "section": "Hometown",
    "text": "Hometown\nChennai, India"
  },
  {
    "objectID": "about/SaiVenkatesh.html#hobbies",
    "href": "about/SaiVenkatesh.html#hobbies",
    "title": "Sai Venkatesh",
    "section": "Hobbies",
    "text": "Hobbies\nI love to play video games, watch cricket and explore new places."
  },
  {
    "objectID": "about/SaiVenkatesh.html#fun-fact",
    "href": "about/SaiVenkatesh.html#fun-fact",
    "title": "Sai Venkatesh",
    "section": "Fun fact",
    "text": "Fun fact\nI have watched a Tamil movie more than 100 times :)."
  },
  {
    "objectID": "about/Sid.html",
    "href": "about/Sid.html",
    "title": "Sid",
    "section": "",
    "text": "##Instructions"
  },
  {
    "objectID": "about/Sid.html#educationwork-background",
    "href": "about/Sid.html#educationwork-background",
    "title": "Sid",
    "section": "Education/Work Background",
    "text": "Education/Work Background"
  },
  {
    "objectID": "about/Sid.html#r-experience",
    "href": "about/Sid.html#r-experience",
    "title": "Sid",
    "section": "R experience",
    "text": "R experience"
  },
  {
    "objectID": "about/Sid.html#research-interests",
    "href": "about/Sid.html#research-interests",
    "title": "Sid",
    "section": "Research interests",
    "text": "Research interests"
  },
  {
    "objectID": "about/Sid.html#hometown",
    "href": "about/Sid.html#hometown",
    "title": "Sid",
    "section": "Hometown",
    "text": "Hometown"
  },
  {
    "objectID": "about/Sid.html#hobbies",
    "href": "about/Sid.html#hobbies",
    "title": "Sid",
    "section": "Hobbies",
    "text": "Hobbies"
  },
  {
    "objectID": "about/Sid.html#fun-fact",
    "href": "about/Sid.html#fun-fact",
    "title": "Sid",
    "section": "Fun fact",
    "text": "Fun fact"
  },
  {
    "objectID": "about/NehaJhurani.html",
    "href": "about/NehaJhurani.html",
    "title": "Neha Jhurani",
    "section": "",
    "text": "##Instructions"
  },
  {
    "objectID": "about/NehaJhurani.html#educationwork-background",
    "href": "about/NehaJhurani.html#educationwork-background",
    "title": "Neha Jhurani",
    "section": "Education/Work Background",
    "text": "Education/Work Background\nI did my undergrad in Information Technology at NIT Kurukshetra, India. I have around 2.5 yrs of experience working as a Senior Software Engineer at Arcesium India Pvt Ltd."
  },
  {
    "objectID": "about/NehaJhurani.html#r-experience",
    "href": "about/NehaJhurani.html#r-experience",
    "title": "Neha Jhurani",
    "section": "R experience",
    "text": "R experience\nI haven’t worked with R before."
  },
  {
    "objectID": "about/NehaJhurani.html#research-interests",
    "href": "about/NehaJhurani.html#research-interests",
    "title": "Neha Jhurani",
    "section": "Research interests",
    "text": "Research interests\nI would like to use tech to empower the underrepresented groups and also in the field of psychology."
  },
  {
    "objectID": "about/NehaJhurani.html#hometown",
    "href": "about/NehaJhurani.html#hometown",
    "title": "Neha Jhurani",
    "section": "Hometown",
    "text": "Hometown\nI was brought up in Visakhapatnam, Andhra Pradesh, India."
  },
  {
    "objectID": "about/NehaJhurani.html#hobbies",
    "href": "about/NehaJhurani.html#hobbies",
    "title": "Neha Jhurani",
    "section": "Hobbies",
    "text": "Hobbies\nI like watching tv series and movies."
  },
  {
    "objectID": "about/NehaJhurani.html#fun-fact",
    "href": "about/NehaJhurani.html#fun-fact",
    "title": "Neha Jhurani",
    "section": "Fun fact",
    "text": "Fun fact\nI was a figure skater"
  },
  {
    "objectID": "about/TimShoresAbout.html",
    "href": "about/TimShoresAbout.html",
    "title": "Tim Shores",
    "section": "",
    "text": "University of Michigan ’04\n15 years of experience in software development, IT management\n5 years of experience in research and writing\nCurrently working for Cisco in cybersecurity communications"
  },
  {
    "objectID": "about/TimShoresAbout.html#r-experience",
    "href": "about/TimShoresAbout.html#r-experience",
    "title": "Tim Shores",
    "section": "R experience",
    "text": "R experience\n\nSeveral Coursera courses\nOn the job use of R in data cleaning and ETL pipeline development"
  },
  {
    "objectID": "about/TimShoresAbout.html#research-interests",
    "href": "about/TimShoresAbout.html#research-interests",
    "title": "Tim Shores",
    "section": "Research interests",
    "text": "Research interests\n\nForest communities and livelihoods\nCommunications\nNetwork analysis\nKnowledge management"
  },
  {
    "objectID": "about/TimShoresAbout.html#hometown",
    "href": "about/TimShoresAbout.html#hometown",
    "title": "Tim Shores",
    "section": "Hometown",
    "text": "Hometown\nMonroe, Michigan"
  },
  {
    "objectID": "about/TimShoresAbout.html#hobbies",
    "href": "about/TimShoresAbout.html#hobbies",
    "title": "Tim Shores",
    "section": "Hobbies",
    "text": "Hobbies\nPainting, Bass guitar"
  },
  {
    "objectID": "about/TimShoresAbout.html#fun-fact",
    "href": "about/TimShoresAbout.html#fun-fact",
    "title": "Tim Shores",
    "section": "Fun fact",
    "text": "Fun fact\nI still have all of my wisdom teeth."
  },
  {
    "objectID": "about/SusmitaMadineni.html",
    "href": "about/SusmitaMadineni.html",
    "title": "Susmita Madineni",
    "section": "",
    "text": "I received a Bachelor of Technology degree in Computer Science and Engineering from G Narayanamma Institute of Technology and Science, India. I have worked as an Intern at Apple, Hyderabad for 5 months. I have worked as a Systems Engineer, Senior Systems Engineer at Infosys Limited for 3.5 years before deciding to pursue my Masters degree in Computer Science."
  },
  {
    "objectID": "about/SusmitaMadineni.html#r-experience",
    "href": "about/SusmitaMadineni.html#r-experience",
    "title": "Susmita Madineni",
    "section": "R experience",
    "text": "R experience\nI don’t have any prior experience in R."
  },
  {
    "objectID": "about/SusmitaMadineni.html#research-interests",
    "href": "about/SusmitaMadineni.html#research-interests",
    "title": "Susmita Madineni",
    "section": "Research interests",
    "text": "Research interests\nMachine Learning, Distributed and Operating Systems"
  },
  {
    "objectID": "about/SusmitaMadineni.html#hometown",
    "href": "about/SusmitaMadineni.html#hometown",
    "title": "Susmita Madineni",
    "section": "Hometown",
    "text": "Hometown\nI am from Hyderabad, India"
  },
  {
    "objectID": "about/SusmitaMadineni.html#hobbies",
    "href": "about/SusmitaMadineni.html#hobbies",
    "title": "Susmita Madineni",
    "section": "Hobbies",
    "text": "Hobbies\nDance, Music"
  },
  {
    "objectID": "about/SusmitaMadineni.html#fun-fact",
    "href": "about/SusmitaMadineni.html#fun-fact",
    "title": "Susmita Madineni",
    "section": "Fun fact",
    "text": "Fun fact\nI am passionate about having a healthy lifestyle.I love strength-training."
  },
  {
    "objectID": "about/MattEckstein.html",
    "href": "about/MattEckstein.html",
    "title": "Matt Eckstein",
    "section": "",
    "text": "B.A., Boston College Economics and International Studies double major"
  },
  {
    "objectID": "about/MattEckstein.html#r-experience",
    "href": "about/MattEckstein.html#r-experience",
    "title": "Matt Eckstein",
    "section": "R experience",
    "text": "R experience\nData Analysis with R Programming, Coursera"
  },
  {
    "objectID": "about/MattEckstein.html#research-interests",
    "href": "about/MattEckstein.html#research-interests",
    "title": "Matt Eckstein",
    "section": "Research interests",
    "text": "Research interests\nPublic opinion, demography, mis/disinformation"
  },
  {
    "objectID": "about/MattEckstein.html#hometown",
    "href": "about/MattEckstein.html#hometown",
    "title": "Matt Eckstein",
    "section": "Hometown",
    "text": "Hometown\nAndover, MA"
  },
  {
    "objectID": "about/MattEckstein.html#hobbies",
    "href": "about/MattEckstein.html#hobbies",
    "title": "Matt Eckstein",
    "section": "Hobbies",
    "text": "Hobbies\nReading, birdwatching, following the news, board games"
  },
  {
    "objectID": "about/MattEckstein.html#fun-fact",
    "href": "about/MattEckstein.html#fun-fact",
    "title": "Matt Eckstein",
    "section": "Fun fact",
    "text": "Fun fact\nI can whistle two notes at once"
  },
  {
    "objectID": "about/Sue-EllenDuffy.html",
    "href": "about/Sue-EllenDuffy.html",
    "title": "Sue-Ellen Duffy",
    "section": "",
    "text": "UMass Amherst 2009-2013 Public Health - Community Health and Education\nUMass Amherst 2023-present DACSS\nFreelance Education Research (Observer, Assessor) - Abt Associates, Boston, MA\nAcademic Services Researcher - Jewish Vocational Services, Boston, MA\nFreelance Education Researcher (Assessor) - Harvard University, Boston, MA\nNonprofit Research and Food Justice Work - Fair Foods, Boston, MA\nFacilitation Trainer - UMass Amherst, MA"
  },
  {
    "objectID": "about/Sue-EllenDuffy.html#r-experience",
    "href": "about/Sue-EllenDuffy.html#r-experience",
    "title": "Sue-Ellen Duffy",
    "section": "R experience",
    "text": "R experience\nLimited - DACSS 601 is my first exposure!"
  },
  {
    "objectID": "about/Sue-EllenDuffy.html#research-interests",
    "href": "about/Sue-EllenDuffy.html#research-interests",
    "title": "Sue-Ellen Duffy",
    "section": "Research interests",
    "text": "Research interests\nEducation, Gender, Food Justice/Access, Connection, PAR"
  },
  {
    "objectID": "about/Sue-EllenDuffy.html#hometown",
    "href": "about/Sue-EllenDuffy.html#hometown",
    "title": "Sue-Ellen Duffy",
    "section": "Hometown",
    "text": "Hometown\nI grew up in The South Shore of Massachusetts and have lived in Boston now for 7 years."
  },
  {
    "objectID": "about/Sue-EllenDuffy.html#hobbies",
    "href": "about/Sue-EllenDuffy.html#hobbies",
    "title": "Sue-Ellen Duffy",
    "section": "Hobbies",
    "text": "Hobbies\nForaging, Gardening, Sunbasking, Bar Pizza"
  },
  {
    "objectID": "about/Sue-EllenDuffy.html#fun-fact",
    "href": "about/Sue-EllenDuffy.html#fun-fact",
    "title": "Sue-Ellen Duffy",
    "section": "Fun fact",
    "text": "Fun fact\nI once went on tour with the band They Might Be Giants - I was their truck driver and assistant manager ;)"
  },
  {
    "objectID": "about/XinyangMao.html",
    "href": "about/XinyangMao.html",
    "title": "Xinyang Mao",
    "section": "",
    "text": "2016-2020    Bachelor\nNanchang HangKong University Electronic and Information Engineering    \n2020-now      Master\nUMass Amherst\nElectrical and Computer Engineering"
  },
  {
    "objectID": "about/XinyangMao.html#r-experience",
    "href": "about/XinyangMao.html#r-experience",
    "title": "Xinyang Mao",
    "section": "R experience",
    "text": "R experience\nJust learned some basic syntax"
  },
  {
    "objectID": "about/XinyangMao.html#research-interests",
    "href": "about/XinyangMao.html#research-interests",
    "title": "Xinyang Mao",
    "section": "Research interests",
    "text": "Research interests\nSoftware development,data analytics"
  },
  {
    "objectID": "about/XinyangMao.html#hometown",
    "href": "about/XinyangMao.html#hometown",
    "title": "Xinyang Mao",
    "section": "Hometown",
    "text": "Hometown\nChina"
  },
  {
    "objectID": "about/XinyangMao.html#hobbies",
    "href": "about/XinyangMao.html#hobbies",
    "title": "Xinyang Mao",
    "section": "Hobbies",
    "text": "Hobbies\nKpop music,hiphop dance"
  },
  {
    "objectID": "about/XinyangMao.html#fun-fact",
    "href": "about/XinyangMao.html#fun-fact",
    "title": "Xinyang Mao",
    "section": "Fun fact",
    "text": "Fun fact\n(Love spicy foods -_-"
  },
  {
    "objectID": "about/ShantanuPatil.html",
    "href": "about/ShantanuPatil.html",
    "title": "Shantanu Patil",
    "section": "",
    "text": "I did my bachelors in Mathematics and Computing from IIT Dhanbad. I did a internship as a software developer at sariska.io"
  },
  {
    "objectID": "about/ShantanuPatil.html#r-experience",
    "href": "about/ShantanuPatil.html#r-experience",
    "title": "Shantanu Patil",
    "section": "R experience",
    "text": "R experience\nI have no experience using R"
  },
  {
    "objectID": "about/ShantanuPatil.html#research-interests",
    "href": "about/ShantanuPatil.html#research-interests",
    "title": "Shantanu Patil",
    "section": "Research interests",
    "text": "Research interests\nIntrested in AI, Blockchain, Data Analysis and Visualization"
  },
  {
    "objectID": "about/ShantanuPatil.html#hometown",
    "href": "about/ShantanuPatil.html#hometown",
    "title": "Shantanu Patil",
    "section": "Hometown",
    "text": "Hometown\nNashik, India"
  },
  {
    "objectID": "about/ShantanuPatil.html#hobbies",
    "href": "about/ShantanuPatil.html#hobbies",
    "title": "Shantanu Patil",
    "section": "Hobbies",
    "text": "Hobbies\nReading about the future of technology, history, geopolitics."
  },
  {
    "objectID": "about/ShantanuPatil.html#fun-fact",
    "href": "about/ShantanuPatil.html#fun-fact",
    "title": "Shantanu Patil",
    "section": "Fun fact",
    "text": "Fun fact\nI love reading about new technologies"
  },
  {
    "objectID": "about/Jinxianiu.html",
    "href": "about/Jinxianiu.html",
    "title": "Jinxianiu",
    "section": "",
    "text": "##Instructions"
  },
  {
    "objectID": "about/Jinxianiu.html#educationwork-background",
    "href": "about/Jinxianiu.html#educationwork-background",
    "title": "Jinxianiu",
    "section": "Education/Work Background",
    "text": "Education/Work Background\nProgram Manager of Digital Engagement at Chinese for Affirmative Action(CAA) 2019-present Master of journalism and communication"
  },
  {
    "objectID": "about/Jinxianiu.html#r-experience",
    "href": "about/Jinxianiu.html#r-experience",
    "title": "Jinxianiu",
    "section": "R experience",
    "text": "R experience\nTook a online class”Learning R” in LinkeDin learning"
  },
  {
    "objectID": "about/Jinxianiu.html#research-interests",
    "href": "about/Jinxianiu.html#research-interests",
    "title": "Jinxianiu",
    "section": "Research interests",
    "text": "Research interests\nCombating mis/disinformation in Asian American community Asian American digital politics"
  },
  {
    "objectID": "about/Jinxianiu.html#hometown",
    "href": "about/Jinxianiu.html#hometown",
    "title": "Jinxianiu",
    "section": "Hometown",
    "text": "Hometown\nChina"
  },
  {
    "objectID": "about/Jinxianiu.html#hobbies",
    "href": "about/Jinxianiu.html#hobbies",
    "title": "Jinxianiu",
    "section": "Hobbies",
    "text": "Hobbies\nTravel, cooking"
  },
  {
    "objectID": "about/Jinxianiu.html#fun-fact",
    "href": "about/Jinxianiu.html#fun-fact",
    "title": "Jinxianiu",
    "section": "Fun fact",
    "text": "Fun fact\nI have a twin brother that looks completely different with me"
  },
  {
    "objectID": "about/JosephVincent.html",
    "href": "about/JosephVincent.html",
    "title": "Joseph Vincent",
    "section": "",
    "text": "##Instructions"
  },
  {
    "objectID": "about/JosephVincent.html#educationwork-background",
    "href": "about/JosephVincent.html#educationwork-background",
    "title": "Joseph Vincent",
    "section": "Education/Work Background",
    "text": "Education/Work Background\nI graduated in 2020 with a bachelor’s degree in Marketing and Health & Life Sciences from Boston University. Since then, I have been working for a digital healthcare start-up doing business development for the US."
  },
  {
    "objectID": "about/JosephVincent.html#r-experience",
    "href": "about/JosephVincent.html#r-experience",
    "title": "Joseph Vincent",
    "section": "R experience",
    "text": "R experience\nI have a little bit of R experience from a machine learning class I took at BU, but I don’t remember much of it."
  },
  {
    "objectID": "about/JosephVincent.html#research-interests",
    "href": "about/JosephVincent.html#research-interests",
    "title": "Joseph Vincent",
    "section": "Research interests",
    "text": "Research interests\nI am interested in digital healthcare and public health for my work, but also have an unrelated interest in public transit/urban planning."
  },
  {
    "objectID": "about/JosephVincent.html#hometown",
    "href": "about/JosephVincent.html#hometown",
    "title": "Joseph Vincent",
    "section": "Hometown",
    "text": "Hometown\nI grew up in rural New York State, but have lived in and around Boston for the past 6 years."
  },
  {
    "objectID": "about/JosephVincent.html#hobbies",
    "href": "about/JosephVincent.html#hobbies",
    "title": "Joseph Vincent",
    "section": "Hobbies",
    "text": "Hobbies\nI like hiking in the Fells Reservation with my dog during the weekends. I play the drums and guitar. Also crosswords, Sudoku puzzles."
  },
  {
    "objectID": "about/JosephVincent.html#fun-fact",
    "href": "about/JosephVincent.html#fun-fact",
    "title": "Joseph Vincent",
    "section": "Fun fact",
    "text": "Fun fact\nI spent a summer as a gravedigger."
  },
  {
    "objectID": "about/SakshamKumar.html",
    "href": "about/SakshamKumar.html",
    "title": "Saksham Kumar",
    "section": "",
    "text": "Master of Science in Computer Science - University of Massachusetts Amherst (August 2021 - )\nTrust and Security Intern - Confluent (June 2022 - September 2022)\nIntern - R&D Infra team - Bytedance (January 2022 - May 2022)\nSoftware Engineer - Guavus (A Thales Company) (June 2019 - August 2021)\nBachelor of Engineering in Computer Engineering - Thapar Institute of Engineering and Technology (July 2015 - June 2019)"
  },
  {
    "objectID": "about/SakshamKumar.html#r-experience",
    "href": "about/SakshamKumar.html#r-experience",
    "title": "Saksham Kumar",
    "section": "R experience",
    "text": "R experience\nNone"
  },
  {
    "objectID": "about/SakshamKumar.html#research-interests",
    "href": "about/SakshamKumar.html#research-interests",
    "title": "Saksham Kumar",
    "section": "Research interests",
    "text": "Research interests\nDistributed Systems - Designing and building large and scalable systems for distributed processing."
  },
  {
    "objectID": "about/SakshamKumar.html#hometown",
    "href": "about/SakshamKumar.html#hometown",
    "title": "Saksham Kumar",
    "section": "Hometown",
    "text": "Hometown\nDuliajan, Assam, India"
  },
  {
    "objectID": "about/SakshamKumar.html#hobbies",
    "href": "about/SakshamKumar.html#hobbies",
    "title": "Saksham Kumar",
    "section": "Hobbies",
    "text": "Hobbies\nBig art enthusiast. Cycles a lot in summer. Always in for good food."
  },
  {
    "objectID": "about/SakshamKumar.html#fun-fact",
    "href": "about/SakshamKumar.html#fun-fact",
    "title": "Saksham Kumar",
    "section": "Fun fact",
    "text": "Fun fact\nSlack > Email. Any day. Anytime."
  },
  {
    "objectID": "about/SaipranavKurly.html",
    "href": "about/SaipranavKurly.html",
    "title": "Sai Pranav Kurly",
    "section": "",
    "text": "I have previously worked as a Data analytics engineer and have completed my bachelors in Computer Science"
  },
  {
    "objectID": "about/SaipranavKurly.html#r-experience",
    "href": "about/SaipranavKurly.html#r-experience",
    "title": "Sai Pranav Kurly",
    "section": "R experience",
    "text": "R experience\nI have not worked with R before"
  },
  {
    "objectID": "about/SaipranavKurly.html#research-interests",
    "href": "about/SaipranavKurly.html#research-interests",
    "title": "Sai Pranav Kurly",
    "section": "Research interests",
    "text": "Research interests\nMachine learning and Distributed Systems"
  },
  {
    "objectID": "about/SaipranavKurly.html#hometown",
    "href": "about/SaipranavKurly.html#hometown",
    "title": "Sai Pranav Kurly",
    "section": "Hometown",
    "text": "Hometown\nBangalore, India"
  },
  {
    "objectID": "about/SaipranavKurly.html#hobbies",
    "href": "about/SaipranavKurly.html#hobbies",
    "title": "Sai Pranav Kurly",
    "section": "Hobbies",
    "text": "Hobbies\nBadmintion and Gym"
  },
  {
    "objectID": "about/SaipranavKurly.html#fun-fact",
    "href": "about/SaipranavKurly.html#fun-fact",
    "title": "Sai Pranav Kurly",
    "section": "Fun fact",
    "text": "Fun fact"
  },
  {
    "objectID": "about/JesseUsherBarrett.html",
    "href": "about/JesseUsherBarrett.html",
    "title": "Jesse Usher Barrett",
    "section": "",
    "text": "BA in Political Science from Roger Williams University Political Science TA/PhD Student at UMass Amherst"
  },
  {
    "objectID": "about/JesseUsherBarrett.html#r-experience",
    "href": "about/JesseUsherBarrett.html#r-experience",
    "title": "Jesse Usher Barrett",
    "section": "R experience",
    "text": "R experience\nDACSS 601"
  },
  {
    "objectID": "about/JesseUsherBarrett.html#research-interests",
    "href": "about/JesseUsherBarrett.html#research-interests",
    "title": "Jesse Usher Barrett",
    "section": "Research interests",
    "text": "Research interests\nAmerican Politics, Propaganda/Disinformation, Political Psychology/Behavior, Extremism and Radicalization, Social Media, Social Networks, Political Violence"
  },
  {
    "objectID": "about/JesseUsherBarrett.html#hometown",
    "href": "about/JesseUsherBarrett.html#hometown",
    "title": "Jesse Usher Barrett",
    "section": "Hometown",
    "text": "Hometown\nBristol, RI"
  },
  {
    "objectID": "about/JesseUsherBarrett.html#hobbies",
    "href": "about/JesseUsherBarrett.html#hobbies",
    "title": "Jesse Usher Barrett",
    "section": "Hobbies",
    "text": "Hobbies\nPlaying Music, Reading, TTRPGs, Video Games, Hiking"
  },
  {
    "objectID": "about/JesseUsherBarrett.html#fun-fact",
    "href": "about/JesseUsherBarrett.html#fun-fact",
    "title": "Jesse Usher Barrett",
    "section": "Fun fact",
    "text": "Fun fact\nI was a professional cook for almost two decades before getting into academia"
  },
  {
    "objectID": "about/JustineShakespeare.html",
    "href": "about/JustineShakespeare.html",
    "title": "Justine Shakespeare",
    "section": "",
    "text": "I have a BA in Foreign Area Studies with a concentration in French History from Barnard College at Columbia University in New York City. I also have an MSc in European Studies from the London School of Economics. Before starting the DACSS program I worked for the international NGO Verite, where I specialized in leading research projects on forced labor, human trafficking, and the working conditions of migrant workers in global supply chains."
  },
  {
    "objectID": "about/JustineShakespeare.html#r-experience",
    "href": "about/JustineShakespeare.html#r-experience",
    "title": "Justine Shakespeare",
    "section": "R experience",
    "text": "R experience\nI have taken a few R courses online and while at my job used R to analyze the results of surveys of migrant workers."
  },
  {
    "objectID": "about/JustineShakespeare.html#research-interests",
    "href": "about/JustineShakespeare.html#research-interests",
    "title": "Justine Shakespeare",
    "section": "Research interests",
    "text": "Research interests\nComputational Social Science, Network Analysis, Survey Design, Immigration, Labor Rights, Reproductive Health"
  },
  {
    "objectID": "about/JustineShakespeare.html#hometown",
    "href": "about/JustineShakespeare.html#hometown",
    "title": "Justine Shakespeare",
    "section": "Hometown",
    "text": "Hometown\nMarlboro, Vermont"
  },
  {
    "objectID": "about/JustineShakespeare.html#hobbies",
    "href": "about/JustineShakespeare.html#hobbies",
    "title": "Justine Shakespeare",
    "section": "Hobbies",
    "text": "Hobbies\nPottery, crossword puzzles, biking, and travel"
  },
  {
    "objectID": "about/JustineShakespeare.html#fun-fact",
    "href": "about/JustineShakespeare.html#fun-fact",
    "title": "Justine Shakespeare",
    "section": "Fun fact",
    "text": "Fun fact\nI am named as an inventor on a patent for a technology platform that identifies human rights risks in labor supply chains."
  }
]